pragma Ada_2012;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
with System;
with Interfaces.C.Extensions;
with Interfaces.C.Strings;





generic

package Dear_ImGui.API is



	-- corecrt.h
	subtype T_Size is Extensions.unsigned_long_long;

	-- stdio.h
	type T_File is record
		u_ptr : Interfaces.C.Strings.chars_ptr;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:25
		u_cnt : aliased int;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:26
		u_base : Interfaces.C.Strings.chars_ptr;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:27
		u_flag : aliased int;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:28
		u_file : aliased int;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:29
		u_charbuf : aliased int;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:30
		u_bufsiz : aliased int;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:31
		u_tmpfname : Interfaces.C.Strings.chars_ptr;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:32
	end record
	with Convention => C_Pass_By_Copy;  -- c:\programs\gnat\x86_64-pc-mingw32\include\stdio.h:24

	-- vadefs.h
	subtype T_va_list is System.Address;  -- c:\programs\gnat\x86_64-pc-mingw32\include\vadefs.h:31



   --  unsupported macro: API __declspec(dllexport)
   --  unsupported macro: EXTERN extern "C"
   --  unsupported macro: CIMGUI_API EXTERN API
   --  unsupported macro: CONST const
  --This file is automatically generated by generator.lua from https://github.com/cimgui/cimgui
  --based on imgui.h file version "1.88" from Dear ImGui https://github.com/ocornut/imgui
  --with imgui_internal.h api
  --typedef unsigned long long ImU64;
   type ImDrawChannel;
   type ImDrawCmd;
   type ImDrawData;
   type ImDrawList;
   type ImDrawListSharedData;
   type ImDrawListSplitter;
   type ImDrawVert;
   type ImFont;
   type ImFontAtlas;
   type ImFontBuilderIO;
   type ImFontConfig;
   type ImFontGlyph;
   type ImFontGlyphRangesBuilder;
   type ImColor;
   type ImGuiContext;
   type ImGuiIO;
   type ImGuiInputTextCallbackData;
   type ImGuiKeyData;
   type ImGuiListClipper;
   type ImGuiOnceUponAFrame;
   type ImGuiPayload;
   type ImGuiPlatformImeData;
   type ImGuiSizeCallbackData;
   type ImGuiStorage;
   type ImGuiStyle;
   type ImGuiTableSortSpecs;
   type ImGuiTableColumnSortSpecs;
   type ImGuiTextBuffer;
   type ImGuiTextFilter;
   type ImGuiViewport;
   type ImBitVector;
   type ImRect;
   type ImDrawDataBuilder;
   type ImGuiColorMod;
   type ImGuiContextHook;
   type ImGuiDataTypeInfo;
   type ImGuiGroupData;
   type ImGuiInputTextState;
   type ImGuiLastItemData;
   type ImGuiMenuColumns;
   type ImGuiNavItemData;
   type ImGuiMetricsConfig;
   type ImGuiNextWindowData;
   type ImGuiNextItemData;
   type ImGuiOldColumnData;
   type ImGuiOldColumns;
   type ImGuiPopupData;
   type ImGuiSettingsHandler;
   type ImGuiStackSizes;
   type ImGuiStyleMod;
   type ImGuiTabBar;
   type ImGuiTabItem;
   type ImGuiTable;
   type ImGuiTableColumn;
   type ImGuiTableInstanceData;
   type ImGuiTableTempData;
   type ImGuiTableSettings;
   type ImGuiTableColumnsSettings is null record;   -- incomplete struct

   type ImGuiWindow;
   type ImGuiWindowTempData;
   type ImGuiWindowSettings;
   subtype ImGuiCol is int;  -- cimgui.h:134

   subtype ImGuiCond is int;  -- cimgui.h:135

   subtype ImGuiDataType is int;  -- cimgui.h:136

   subtype ImGuiDir is int;  -- cimgui.h:137

   subtype ImGuiKey is int;  -- cimgui.h:138

   subtype ImGuiNavInput is int;  -- cimgui.h:139

   subtype ImGuiMouseButton is int;  -- cimgui.h:140

   subtype ImGuiMouseCursor is int;  -- cimgui.h:141

   subtype ImGuiSortDirection is int;  -- cimgui.h:142

   subtype ImGuiStyleVar is int;  -- cimgui.h:143

   subtype ImGuiTableBgTarget is int;  -- cimgui.h:144

   subtype ImDrawFlags is int;  -- cimgui.h:145

   subtype ImDrawListFlags is int;  -- cimgui.h:146

   subtype ImFontAtlasFlags is int;  -- cimgui.h:147

   --subtype ImGuiBackendFlags is int;  -- cimgui.h:148
   subtype ImGuiBackendFlags is unsigned;

   subtype ImGuiButtonFlags is int;  -- cimgui.h:149

   subtype ImGuiColorEditFlags is int;  -- cimgui.h:150

   --subtype ImGuiConfigFlags is int;  -- cimgui.h:151
   subtype ImGuiConfigFlags is unsigned;

   subtype ImGuiComboFlags is int;  -- cimgui.h:152

   subtype ImGuiDragDropFlags is int;  -- cimgui.h:153

   subtype ImGuiFocusedFlags is int;  -- cimgui.h:154

   subtype ImGuiHoveredFlags is int;  -- cimgui.h:155

   subtype ImGuiInputTextFlags is int;  -- cimgui.h:156

   subtype ImGuiModFlags is int;  -- cimgui.h:157

   subtype ImGuiPopupFlags is int;  -- cimgui.h:158

   subtype ImGuiSelectableFlags is int;  -- cimgui.h:159

   subtype ImGuiSliderFlags is int;  -- cimgui.h:160

   subtype ImGuiTabBarFlags is int;  -- cimgui.h:161

   subtype ImGuiTabItemFlags is int;  -- cimgui.h:162

   subtype ImGuiTableFlags is int;  -- cimgui.h:163

   subtype ImGuiTableColumnFlags is int;  -- cimgui.h:164

   subtype ImGuiTableRowFlags is int;  -- cimgui.h:165

   subtype ImGuiTreeNodeFlags is int;  -- cimgui.h:166

   subtype ImGuiViewportFlags is int;  -- cimgui.h:167

   --subtype ImGuiWindowFlags is int;  -- cimgui.h:168
   subtype ImGuiWindowFlags is unsigned;

   type ImTextureID is new System.Address;  -- cimgui.h:169

   subtype ImDrawIdx is unsigned_short;  -- cimgui.h:170

   subtype ImGuiID is unsigned;  -- cimgui.h:171

   subtype ImS8 is signed_char;  -- cimgui.h:172

   subtype ImU8 is unsigned_char;  -- cimgui.h:173

   subtype ImS16 is short;  -- cimgui.h:174

   subtype ImU16 is unsigned_short;  -- cimgui.h:175

   subtype ImS32 is int;  -- cimgui.h:176

   subtype ImU32 is unsigned;  -- cimgui.h:177

   subtype ImS64 is Long_Long_Integer;  -- cimgui.h:178

   subtype ImU64 is Extensions.unsigned_long_long;  -- cimgui.h:179

   subtype ImWchar16 is unsigned_short;  -- cimgui.h:180

   subtype ImWchar32 is unsigned;  -- cimgui.h:181

   subtype ImWchar is ImWchar16;  -- cimgui.h:182

   type ImGuiInputTextCallback is access function (arg1 : access ImGuiInputTextCallbackData) return int
   with Convention => C;  -- cimgui.h:183

   type ImGuiSizeCallback is access procedure (arg1 : access ImGuiSizeCallbackData)
   with Convention => C;  -- cimgui.h:184

   type ImGuiMemAllocFunc is access function (arg1 : T_Size; arg2 : System.Address) return System.Address
   with Convention => C;  -- cimgui.h:185

   type ImGuiMemFreeFunc is access procedure (arg1 : System.Address; arg2 : System.Address)
   with Convention => C;  -- cimgui.h:186

   type ImVec2;
   type ImVec2 is record
      x : aliased float;  -- cimgui.h:190
      y : aliased float;  -- cimgui.h:190
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:188

   type ImVec4;
   type ImVec4 is record
      x : aliased float;  -- cimgui.h:195
      y : aliased float;  -- cimgui.h:195
      z : aliased float;  -- cimgui.h:195
      w : aliased float;  -- cimgui.h:195
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:193

   subtype ImGuiWindowFlags_u is unsigned;
   ImGuiWindowFlags_None : constant unsigned := 0;
   ImGuiWindowFlags_NoTitleBar : constant unsigned := 1;
   ImGuiWindowFlags_NoResize : constant unsigned := 2;
   ImGuiWindowFlags_NoMove : constant unsigned := 4;
   ImGuiWindowFlags_NoScrollbar : constant unsigned := 8;
   ImGuiWindowFlags_NoScrollWithMouse : constant unsigned := 16;
   ImGuiWindowFlags_NoCollapse : constant unsigned := 32;
   ImGuiWindowFlags_AlwaysAutoResize : constant unsigned := 64;
   ImGuiWindowFlags_NoBackground : constant unsigned := 128;
   ImGuiWindowFlags_NoSavedSettings : constant unsigned := 256;
   ImGuiWindowFlags_NoMouseInputs : constant unsigned := 512;
   ImGuiWindowFlags_MenuBar : constant unsigned := 1024;
   ImGuiWindowFlags_HorizontalScrollbar : constant unsigned := 2048;
   ImGuiWindowFlags_NoFocusOnAppearing : constant unsigned := 4096;
   ImGuiWindowFlags_NoBringToFrontOnFocus : constant unsigned := 8192;
   ImGuiWindowFlags_AlwaysVerticalScrollbar : constant unsigned := 16384;
   ImGuiWindowFlags_AlwaysHorizontalScrollbar : constant unsigned := 32768;
   ImGuiWindowFlags_AlwaysUseWindowPadding : constant unsigned := 65536;
   ImGuiWindowFlags_NoNavInputs : constant unsigned := 262144;
   ImGuiWindowFlags_NoNavFocus : constant unsigned := 524288;
   ImGuiWindowFlags_UnsavedDocument : constant unsigned := 1048576;
   ImGuiWindowFlags_NoNav : constant unsigned := 786432;
   ImGuiWindowFlags_NoDecoration : constant unsigned := 43;
   ImGuiWindowFlags_NoInputs : constant unsigned := 786944;
   ImGuiWindowFlags_NavFlattened : constant unsigned := 8388608;
   ImGuiWindowFlags_ChildWindow : constant unsigned := 16777216;
   ImGuiWindowFlags_Tooltip : constant unsigned := 33554432;
   ImGuiWindowFlags_Popup : constant unsigned := 67108864;
   ImGuiWindowFlags_Modal : constant unsigned := 134217728;
   ImGuiWindowFlags_ChildMenu : constant unsigned := 268435456;  -- cimgui.h:228

   subtype ImGuiInputTextFlags_u is unsigned;
   ImGuiInputTextFlags_None : constant unsigned := 0;
   ImGuiInputTextFlags_CharsDecimal : constant unsigned := 1;
   ImGuiInputTextFlags_CharsHexadecimal : constant unsigned := 2;
   ImGuiInputTextFlags_CharsUppercase : constant unsigned := 4;
   ImGuiInputTextFlags_CharsNoBlank : constant unsigned := 8;
   ImGuiInputTextFlags_AutoSelectAll : constant unsigned := 16;
   ImGuiInputTextFlags_EnterReturnsTrue : constant unsigned := 32;
   ImGuiInputTextFlags_CallbackCompletion : constant unsigned := 64;
   ImGuiInputTextFlags_CallbackHistory : constant unsigned := 128;
   ImGuiInputTextFlags_CallbackAlways : constant unsigned := 256;
   ImGuiInputTextFlags_CallbackCharFilter : constant unsigned := 512;
   ImGuiInputTextFlags_AllowTabInput : constant unsigned := 1024;
   ImGuiInputTextFlags_CtrlEnterForNewLine : constant unsigned := 2048;
   ImGuiInputTextFlags_NoHorizontalScroll : constant unsigned := 4096;
   ImGuiInputTextFlags_AlwaysOverwrite : constant unsigned := 8192;
   ImGuiInputTextFlags_ReadOnly : constant unsigned := 16384;
   ImGuiInputTextFlags_Password : constant unsigned := 32768;
   ImGuiInputTextFlags_NoUndoRedo : constant unsigned := 65536;
   ImGuiInputTextFlags_CharsScientific : constant unsigned := 131072;
   ImGuiInputTextFlags_CallbackResize : constant unsigned := 262144;
   ImGuiInputTextFlags_CallbackEdit : constant unsigned := 524288;  -- cimgui.h:251

   subtype ImGuiTreeNodeFlags_u is unsigned;
   ImGuiTreeNodeFlags_None : constant unsigned := 0;
   ImGuiTreeNodeFlags_Selected : constant unsigned := 1;
   ImGuiTreeNodeFlags_Framed : constant unsigned := 2;
   ImGuiTreeNodeFlags_AllowItemOverlap : constant unsigned := 4;
   ImGuiTreeNodeFlags_NoTreePushOnOpen : constant unsigned := 8;
   ImGuiTreeNodeFlags_NoAutoOpenOnLog : constant unsigned := 16;
   ImGuiTreeNodeFlags_DefaultOpen : constant unsigned := 32;
   ImGuiTreeNodeFlags_OpenOnDoubleClick : constant unsigned := 64;
   ImGuiTreeNodeFlags_OpenOnArrow : constant unsigned := 128;
   ImGuiTreeNodeFlags_Leaf : constant unsigned := 256;
   ImGuiTreeNodeFlags_Bullet : constant unsigned := 512;
   ImGuiTreeNodeFlags_FramePadding : constant unsigned := 1024;
   ImGuiTreeNodeFlags_SpanAvailWidth : constant unsigned := 2048;
   ImGuiTreeNodeFlags_SpanFullWidth : constant unsigned := 4096;
   ImGuiTreeNodeFlags_NavLeftJumpsBackHere : constant unsigned := 8192;
   ImGuiTreeNodeFlags_CollapsingHeader : constant unsigned := 26;  -- cimgui.h:269

   subtype ImGuiPopupFlags_u is unsigned;
   ImGuiPopupFlags_None : constant unsigned := 0;
   ImGuiPopupFlags_MouseButtonLeft : constant unsigned := 0;
   ImGuiPopupFlags_MouseButtonRight : constant unsigned := 1;
   ImGuiPopupFlags_MouseButtonMiddle : constant unsigned := 2;
   ImGuiPopupFlags_MouseButtonMask_u : constant unsigned := 31;
   ImGuiPopupFlags_MouseButtonDefault_u : constant unsigned := 1;
   ImGuiPopupFlags_NoOpenOverExistingPopup : constant unsigned := 32;
   ImGuiPopupFlags_NoOpenOverItems : constant unsigned := 64;
   ImGuiPopupFlags_AnyPopupId : constant unsigned := 128;
   ImGuiPopupFlags_AnyPopupLevel : constant unsigned := 256;
   ImGuiPopupFlags_AnyPopup : constant unsigned := 384;  -- cimgui.h:282

   subtype ImGuiSelectableFlags_u is unsigned;
   ImGuiSelectableFlags_None : constant unsigned := 0;
   ImGuiSelectableFlags_DontClosePopups : constant unsigned := 1;
   ImGuiSelectableFlags_SpanAllColumns : constant unsigned := 2;
   ImGuiSelectableFlags_AllowDoubleClick : constant unsigned := 4;
   ImGuiSelectableFlags_Disabled : constant unsigned := 8;
   ImGuiSelectableFlags_AllowItemOverlap : constant unsigned := 16;  -- cimgui.h:290

   subtype ImGuiComboFlags_u is unsigned;
   ImGuiComboFlags_None : constant unsigned := 0;
   ImGuiComboFlags_PopupAlignLeft : constant unsigned := 1;
   ImGuiComboFlags_HeightSmall : constant unsigned := 2;
   ImGuiComboFlags_HeightRegular : constant unsigned := 4;
   ImGuiComboFlags_HeightLarge : constant unsigned := 8;
   ImGuiComboFlags_HeightLargest : constant unsigned := 16;
   ImGuiComboFlags_NoArrowButton : constant unsigned := 32;
   ImGuiComboFlags_NoPreview : constant unsigned := 64;
   ImGuiComboFlags_HeightMask_u : constant unsigned := 30;  -- cimgui.h:301

   subtype ImGuiTabBarFlags_u is unsigned;
   ImGuiTabBarFlags_None : constant unsigned := 0;
   ImGuiTabBarFlags_Reorderable : constant unsigned := 1;
   ImGuiTabBarFlags_AutoSelectNewTabs : constant unsigned := 2;
   ImGuiTabBarFlags_TabListPopupButton : constant unsigned := 4;
   ImGuiTabBarFlags_NoCloseWithMiddleMouseButton : constant unsigned := 8;
   ImGuiTabBarFlags_NoTabListScrollingButtons : constant unsigned := 16;
   ImGuiTabBarFlags_NoTooltip : constant unsigned := 32;
   ImGuiTabBarFlags_FittingPolicyResizeDown : constant unsigned := 64;
   ImGuiTabBarFlags_FittingPolicyScroll : constant unsigned := 128;
   ImGuiTabBarFlags_FittingPolicyMask_u : constant unsigned := 192;
   ImGuiTabBarFlags_FittingPolicyDefault_u : constant unsigned := 64;  -- cimgui.h:314

   subtype ImGuiTabItemFlags_u is unsigned;
   ImGuiTabItemFlags_None : constant unsigned := 0;
   ImGuiTabItemFlags_UnsavedDocument : constant unsigned := 1;
   ImGuiTabItemFlags_SetSelected : constant unsigned := 2;
   ImGuiTabItemFlags_NoCloseWithMiddleMouseButton : constant unsigned := 4;
   ImGuiTabItemFlags_NoPushId : constant unsigned := 8;
   ImGuiTabItemFlags_NoTooltip : constant unsigned := 16;
   ImGuiTabItemFlags_NoReorder : constant unsigned := 32;
   ImGuiTabItemFlags_Leading : constant unsigned := 64;
   ImGuiTabItemFlags_Trailing : constant unsigned := 128;  -- cimgui.h:325

   subtype ImGuiTableFlags_u is unsigned;
   ImGuiTableFlags_None : constant unsigned := 0;
   ImGuiTableFlags_Resizable : constant unsigned := 1;
   ImGuiTableFlags_Reorderable : constant unsigned := 2;
   ImGuiTableFlags_Hideable : constant unsigned := 4;
   ImGuiTableFlags_Sortable : constant unsigned := 8;
   ImGuiTableFlags_NoSavedSettings : constant unsigned := 16;
   ImGuiTableFlags_ContextMenuInBody : constant unsigned := 32;
   ImGuiTableFlags_RowBg : constant unsigned := 64;
   ImGuiTableFlags_BordersInnerH : constant unsigned := 128;
   ImGuiTableFlags_BordersOuterH : constant unsigned := 256;
   ImGuiTableFlags_BordersInnerV : constant unsigned := 512;
   ImGuiTableFlags_BordersOuterV : constant unsigned := 1024;
   ImGuiTableFlags_BordersH : constant unsigned := 384;
   ImGuiTableFlags_BordersV : constant unsigned := 1536;
   ImGuiTableFlags_BordersInner : constant unsigned := 640;
   ImGuiTableFlags_BordersOuter : constant unsigned := 1280;
   ImGuiTableFlags_Borders : constant unsigned := 1920;
   ImGuiTableFlags_NoBordersInBody : constant unsigned := 2048;
   ImGuiTableFlags_NoBordersInBodyUntilResize : constant unsigned := 4096;
   ImGuiTableFlags_SizingFixedFit : constant unsigned := 8192;
   ImGuiTableFlags_SizingFixedSame : constant unsigned := 16384;
   ImGuiTableFlags_SizingStretchProp : constant unsigned := 24576;
   ImGuiTableFlags_SizingStretchSame : constant unsigned := 32768;
   ImGuiTableFlags_NoHostExtendX : constant unsigned := 65536;
   ImGuiTableFlags_NoHostExtendY : constant unsigned := 131072;
   ImGuiTableFlags_NoKeepColumnsVisible : constant unsigned := 262144;
   ImGuiTableFlags_PreciseWidths : constant unsigned := 524288;
   ImGuiTableFlags_NoClip : constant unsigned := 1048576;
   ImGuiTableFlags_PadOuterX : constant unsigned := 2097152;
   ImGuiTableFlags_NoPadOuterX : constant unsigned := 4194304;
   ImGuiTableFlags_NoPadInnerX : constant unsigned := 8388608;
   ImGuiTableFlags_ScrollX : constant unsigned := 16777216;
   ImGuiTableFlags_ScrollY : constant unsigned := 33554432;
   ImGuiTableFlags_SortMulti : constant unsigned := 67108864;
   ImGuiTableFlags_SortTristate : constant unsigned := 134217728;
   ImGuiTableFlags_SizingMask_u : constant unsigned := 57344;  -- cimgui.h:363

   subtype ImGuiTableColumnFlags_u is unsigned;
   ImGuiTableColumnFlags_None : constant unsigned := 0;
   ImGuiTableColumnFlags_Disabled : constant unsigned := 1;
   ImGuiTableColumnFlags_DefaultHide : constant unsigned := 2;
   ImGuiTableColumnFlags_DefaultSort : constant unsigned := 4;
   ImGuiTableColumnFlags_WidthStretch : constant unsigned := 8;
   ImGuiTableColumnFlags_WidthFixed : constant unsigned := 16;
   ImGuiTableColumnFlags_NoResize : constant unsigned := 32;
   ImGuiTableColumnFlags_NoReorder : constant unsigned := 64;
   ImGuiTableColumnFlags_NoHide : constant unsigned := 128;
   ImGuiTableColumnFlags_NoClip : constant unsigned := 256;
   ImGuiTableColumnFlags_NoSort : constant unsigned := 512;
   ImGuiTableColumnFlags_NoSortAscending : constant unsigned := 1024;
   ImGuiTableColumnFlags_NoSortDescending : constant unsigned := 2048;
   ImGuiTableColumnFlags_NoHeaderLabel : constant unsigned := 4096;
   ImGuiTableColumnFlags_NoHeaderWidth : constant unsigned := 8192;
   ImGuiTableColumnFlags_PreferSortAscending : constant unsigned := 16384;
   ImGuiTableColumnFlags_PreferSortDescending : constant unsigned := 32768;
   ImGuiTableColumnFlags_IndentEnable : constant unsigned := 65536;
   ImGuiTableColumnFlags_IndentDisable : constant unsigned := 131072;
   ImGuiTableColumnFlags_IsEnabled : constant unsigned := 16777216;
   ImGuiTableColumnFlags_IsVisible : constant unsigned := 33554432;
   ImGuiTableColumnFlags_IsSorted : constant unsigned := 67108864;
   ImGuiTableColumnFlags_IsHovered : constant unsigned := 134217728;
   ImGuiTableColumnFlags_WidthMask_u : constant unsigned := 24;
   ImGuiTableColumnFlags_IndentMask_u : constant unsigned := 196608;
   ImGuiTableColumnFlags_StatusMask_u : constant unsigned := 251658240;
   ImGuiTableColumnFlags_NoDirectResize_u : constant unsigned := 1073741824;  -- cimgui.h:392

   type ImGuiTableRowFlags_u is
     (ImGuiTableRowFlags_None,
      ImGuiTableRowFlags_Headers)
   with Convention => C;  -- cimgui.h:396

   type ImGuiTableBgTarget_u is
     (ImGuiTableBgTarget_None,
      ImGuiTableBgTarget_RowBg0,
      ImGuiTableBgTarget_RowBg1,
      ImGuiTableBgTarget_CellBg)
   with Convention => C;  -- cimgui.h:402

   subtype ImGuiFocusedFlags_u is unsigned;
   ImGuiFocusedFlags_None : constant unsigned := 0;
   ImGuiFocusedFlags_ChildWindows : constant unsigned := 1;
   ImGuiFocusedFlags_RootWindow : constant unsigned := 2;
   ImGuiFocusedFlags_AnyWindow : constant unsigned := 4;
   ImGuiFocusedFlags_NoPopupHierarchy : constant unsigned := 8;
   ImGuiFocusedFlags_RootAndChildWindows : constant unsigned := 3;  -- cimgui.h:410

   subtype ImGuiHoveredFlags_u is unsigned;
   ImGuiHoveredFlags_None : constant unsigned := 0;
   ImGuiHoveredFlags_ChildWindows : constant unsigned := 1;
   ImGuiHoveredFlags_RootWindow : constant unsigned := 2;
   ImGuiHoveredFlags_AnyWindow : constant unsigned := 4;
   ImGuiHoveredFlags_NoPopupHierarchy : constant unsigned := 8;
   ImGuiHoveredFlags_AllowWhenBlockedByPopup : constant unsigned := 32;
   ImGuiHoveredFlags_AllowWhenBlockedByActiveItem : constant unsigned := 128;
   ImGuiHoveredFlags_AllowWhenOverlapped : constant unsigned := 256;
   ImGuiHoveredFlags_AllowWhenDisabled : constant unsigned := 512;
   ImGuiHoveredFlags_NoNavOverride : constant unsigned := 1024;
   ImGuiHoveredFlags_RectOnly : constant unsigned := 416;
   ImGuiHoveredFlags_RootAndChildWindows : constant unsigned := 3;  -- cimgui.h:424

   subtype ImGuiDragDropFlags_u is unsigned;
   ImGuiDragDropFlags_None : constant unsigned := 0;
   ImGuiDragDropFlags_SourceNoPreviewTooltip : constant unsigned := 1;
   ImGuiDragDropFlags_SourceNoDisableHover : constant unsigned := 2;
   ImGuiDragDropFlags_SourceNoHoldToOpenOthers : constant unsigned := 4;
   ImGuiDragDropFlags_SourceAllowNullID : constant unsigned := 8;
   ImGuiDragDropFlags_SourceExtern : constant unsigned := 16;
   ImGuiDragDropFlags_SourceAutoExpirePayload : constant unsigned := 32;
   ImGuiDragDropFlags_AcceptBeforeDelivery : constant unsigned := 1024;
   ImGuiDragDropFlags_AcceptNoDrawDefaultRect : constant unsigned := 2048;
   ImGuiDragDropFlags_AcceptNoPreviewTooltip : constant unsigned := 4096;
   ImGuiDragDropFlags_AcceptPeekOnly : constant unsigned := 3072;  -- cimgui.h:437

   type ImGuiDataType_u is
     (ImGuiDataType_S8,
      ImGuiDataType_U8,
      ImGuiDataType_S16,
      ImGuiDataType_U16,
      ImGuiDataType_S32,
      ImGuiDataType_U32,
      ImGuiDataType_S64,
      ImGuiDataType_U64,
      ImGuiDataType_Float,
      ImGuiDataType_Double,
      ImGuiDataType_COUNT)
   with Convention => C;  -- cimgui.h:450

   subtype ImGuiDir_u is int;
   ImGuiDir_None : constant int := -1;
   ImGuiDir_Left : constant int := 0;
   ImGuiDir_Right : constant int := 1;
   ImGuiDir_Up : constant int := 2;
   ImGuiDir_Down : constant int := 3;
   ImGuiDir_COUNT : constant int := 4;  -- cimgui.h:458

   type ImGuiSortDirection_u is
     (ImGuiSortDirection_None,
      ImGuiSortDirection_Ascending,
      ImGuiSortDirection_Descending)
   with Convention => C;  -- cimgui.h:463

   --subtype ImGuiKey_u is unsigned;
   ImGuiKey_None : constant unsigned := 0;
   ImGuiKey_Tab : constant unsigned := 512;
   ImGuiKey_LeftArrow : constant unsigned := 513;
   ImGuiKey_RightArrow : constant unsigned := 514;
   ImGuiKey_UpArrow : constant unsigned := 515;
   ImGuiKey_DownArrow : constant unsigned := 516;
   ImGuiKey_PageUp : constant unsigned := 517;
   ImGuiKey_PageDown : constant unsigned := 518;
   ImGuiKey_Home : constant unsigned := 519;
   ImGuiKey_End : constant unsigned := 520;
   ImGuiKey_Insert : constant unsigned := 521;
   ImGuiKey_Delete : constant unsigned := 522;
   ImGuiKey_Backspace : constant unsigned := 523;
   ImGuiKey_Space : constant unsigned := 524;
   ImGuiKey_Enter : constant unsigned := 525;
   ImGuiKey_Escape : constant unsigned := 526;
   ImGuiKey_LeftCtrl : constant unsigned := 527;
   ImGuiKey_LeftShift : constant unsigned := 528;
   ImGuiKey_LeftAlt : constant unsigned := 529;
   ImGuiKey_LeftSuper : constant unsigned := 530;
   ImGuiKey_RightCtrl : constant unsigned := 531;
   ImGuiKey_RightShift : constant unsigned := 532;
   ImGuiKey_RightAlt : constant unsigned := 533;
   ImGuiKey_RightSuper : constant unsigned := 534;
   ImGuiKey_Menu : constant unsigned := 535;
   ImGuiKey_0 : constant unsigned := 536;
   ImGuiKey_1 : constant unsigned := 537;
   ImGuiKey_2 : constant unsigned := 538;
   ImGuiKey_3 : constant unsigned := 539;
   ImGuiKey_4 : constant unsigned := 540;
   ImGuiKey_5 : constant unsigned := 541;
   ImGuiKey_6 : constant unsigned := 542;
   ImGuiKey_7 : constant unsigned := 543;
   ImGuiKey_8 : constant unsigned := 544;
   ImGuiKey_9 : constant unsigned := 545;
   ImGuiKey_A : constant unsigned := 546;
   ImGuiKey_B : constant unsigned := 547;
   ImGuiKey_C : constant unsigned := 548;
   ImGuiKey_D : constant unsigned := 549;
   ImGuiKey_E : constant unsigned := 550;
   ImGuiKey_F : constant unsigned := 551;
   ImGuiKey_G : constant unsigned := 552;
   ImGuiKey_H : constant unsigned := 553;
   ImGuiKey_I : constant unsigned := 554;
   ImGuiKey_J : constant unsigned := 555;
   ImGuiKey_K : constant unsigned := 556;
   ImGuiKey_L : constant unsigned := 557;
   ImGuiKey_M : constant unsigned := 558;
   ImGuiKey_N : constant unsigned := 559;
   ImGuiKey_O : constant unsigned := 560;
   ImGuiKey_P : constant unsigned := 561;
   ImGuiKey_Q : constant unsigned := 562;
   ImGuiKey_R : constant unsigned := 563;
   ImGuiKey_S : constant unsigned := 564;
   ImGuiKey_T : constant unsigned := 565;
   ImGuiKey_U : constant unsigned := 566;
   ImGuiKey_V : constant unsigned := 567;
   ImGuiKey_W : constant unsigned := 568;
   ImGuiKey_X : constant unsigned := 569;
   ImGuiKey_Y : constant unsigned := 570;
   ImGuiKey_Z : constant unsigned := 571;
   ImGuiKey_F1 : constant unsigned := 572;
   ImGuiKey_F2 : constant unsigned := 573;
   ImGuiKey_F3 : constant unsigned := 574;
   ImGuiKey_F4 : constant unsigned := 575;
   ImGuiKey_F5 : constant unsigned := 576;
   ImGuiKey_F6 : constant unsigned := 577;
   ImGuiKey_F7 : constant unsigned := 578;
   ImGuiKey_F8 : constant unsigned := 579;
   ImGuiKey_F9 : constant unsigned := 580;
   ImGuiKey_F10 : constant unsigned := 581;
   ImGuiKey_F11 : constant unsigned := 582;
   ImGuiKey_F12 : constant unsigned := 583;
   ImGuiKey_Apostrophe : constant unsigned := 584;
   ImGuiKey_Comma : constant unsigned := 585;
   ImGuiKey_Minus : constant unsigned := 586;
   ImGuiKey_Period : constant unsigned := 587;
   ImGuiKey_Slash : constant unsigned := 588;
   ImGuiKey_Semicolon : constant unsigned := 589;
   ImGuiKey_Equal : constant unsigned := 590;
   ImGuiKey_LeftBracket : constant unsigned := 591;
   ImGuiKey_Backslash : constant unsigned := 592;
   ImGuiKey_RightBracket : constant unsigned := 593;
   ImGuiKey_GraveAccent : constant unsigned := 594;
   ImGuiKey_CapsLock : constant unsigned := 595;
   ImGuiKey_ScrollLock : constant unsigned := 596;
   ImGuiKey_NumLock : constant unsigned := 597;
   ImGuiKey_PrintScreen : constant unsigned := 598;
   ImGuiKey_Pause : constant unsigned := 599;
   ImGuiKey_Keypad0 : constant unsigned := 600;
   ImGuiKey_Keypad1 : constant unsigned := 601;
   ImGuiKey_Keypad2 : constant unsigned := 602;
   ImGuiKey_Keypad3 : constant unsigned := 603;
   ImGuiKey_Keypad4 : constant unsigned := 604;
   ImGuiKey_Keypad5 : constant unsigned := 605;
   ImGuiKey_Keypad6 : constant unsigned := 606;
   ImGuiKey_Keypad7 : constant unsigned := 607;
   ImGuiKey_Keypad8 : constant unsigned := 608;
   ImGuiKey_Keypad9 : constant unsigned := 609;
   ImGuiKey_KeypadDecimal : constant unsigned := 610;
   ImGuiKey_KeypadDivide : constant unsigned := 611;
   ImGuiKey_KeypadMultiply : constant unsigned := 612;
   ImGuiKey_KeypadSubtract : constant unsigned := 613;
   ImGuiKey_KeypadAdd : constant unsigned := 614;
   ImGuiKey_KeypadEnter : constant unsigned := 615;
   ImGuiKey_KeypadEqual : constant unsigned := 616;
   ImGuiKey_GamepadStart : constant unsigned := 617;
   ImGuiKey_GamepadBack : constant unsigned := 618;
   ImGuiKey_GamepadFaceUp : constant unsigned := 619;
   ImGuiKey_GamepadFaceDown : constant unsigned := 620;
   ImGuiKey_GamepadFaceLeft : constant unsigned := 621;
   ImGuiKey_GamepadFaceRight : constant unsigned := 622;
   ImGuiKey_GamepadDpadUp : constant unsigned := 623;
   ImGuiKey_GamepadDpadDown : constant unsigned := 624;
   ImGuiKey_GamepadDpadLeft : constant unsigned := 625;
   ImGuiKey_GamepadDpadRight : constant unsigned := 626;
   ImGuiKey_GamepadL1 : constant unsigned := 627;
   ImGuiKey_GamepadR1 : constant unsigned := 628;
   ImGuiKey_GamepadL2 : constant unsigned := 629;
   ImGuiKey_GamepadR2 : constant unsigned := 630;
   ImGuiKey_GamepadL3 : constant unsigned := 631;
   ImGuiKey_GamepadR3 : constant unsigned := 632;
   ImGuiKey_GamepadLStickUp : constant unsigned := 633;
   ImGuiKey_GamepadLStickDown : constant unsigned := 634;
   ImGuiKey_GamepadLStickLeft : constant unsigned := 635;
   ImGuiKey_GamepadLStickRight : constant unsigned := 636;
   ImGuiKey_GamepadRStickUp : constant unsigned := 637;
   ImGuiKey_GamepadRStickDown : constant unsigned := 638;
   ImGuiKey_GamepadRStickLeft : constant unsigned := 639;
   ImGuiKey_GamepadRStickRight : constant unsigned := 640;
   ImGuiKey_ModCtrl : constant unsigned := 641;
   ImGuiKey_ModShift : constant unsigned := 642;
   ImGuiKey_ModAlt : constant unsigned := 643;
   ImGuiKey_ModSuper : constant unsigned := 644;
   ImGuiKey_COUNT : constant unsigned := 645;
   ImGuiKey_NamedKey_BEGIN : constant unsigned := 512;
   ImGuiKey_NamedKey_END : constant unsigned := 645;
   ImGuiKey_NamedKey_COUNT : constant unsigned := 133;
   ImGuiKey_KeysData_SIZE : constant unsigned := 645;
   ImGuiKey_KeysData_OFFSET : constant unsigned := 0;  -- cimgui.h:546

   subtype ImGuiModFlags_u is unsigned;
   ImGuiModFlags_None : constant unsigned := 0;
   ImGuiModFlags_Ctrl : constant unsigned := 1;
   ImGuiModFlags_Shift : constant unsigned := 2;
   ImGuiModFlags_Alt : constant unsigned := 4;
   ImGuiModFlags_Super : constant unsigned := 8;  -- cimgui.h:553

   type ImGuiNavInput_u is
     (ImGuiNavInput_Activate,
      ImGuiNavInput_Cancel,
      ImGuiNavInput_Input,
      ImGuiNavInput_Menu,
      ImGuiNavInput_DpadLeft,
      ImGuiNavInput_DpadRight,
      ImGuiNavInput_DpadUp,
      ImGuiNavInput_DpadDown,
      ImGuiNavInput_LStickLeft,
      ImGuiNavInput_LStickRight,
      ImGuiNavInput_LStickUp,
      ImGuiNavInput_LStickDown,
      ImGuiNavInput_FocusPrev,
      ImGuiNavInput_FocusNext,
      ImGuiNavInput_TweakSlow,
      ImGuiNavInput_TweakFast,
      ImGuiNavInput_KeyLeft_u,
      ImGuiNavInput_KeyRight_u,
      ImGuiNavInput_KeyUp_u,
      ImGuiNavInput_KeyDown_u,
      ImGuiNavInput_COUNT)
   with Convention => C;  -- cimgui.h:576

   subtype ImGuiConfigFlags_u is unsigned;
   ImGuiConfigFlags_None : constant unsigned := 0;
   ImGuiConfigFlags_NavEnableKeyboard : constant unsigned := 1;
   ImGuiConfigFlags_NavEnableGamepad : constant unsigned := 2;
   ImGuiConfigFlags_NavEnableSetMousePos : constant unsigned := 4;
   ImGuiConfigFlags_NavNoCaptureKeyboard : constant unsigned := 8;
   ImGuiConfigFlags_NoMouse : constant unsigned := 16;
   ImGuiConfigFlags_NoMouseCursorChange : constant unsigned := 32;
   ImGuiConfigFlags_IsSRGB : constant unsigned := 1048576;
   ImGuiConfigFlags_IsTouchScreen : constant unsigned := 2097152;  -- cimgui.h:587

   subtype ImGuiBackendFlags_u is unsigned;
   ImGuiBackendFlags_None : constant unsigned := 0;
   ImGuiBackendFlags_HasGamepad : constant unsigned := 1;
   ImGuiBackendFlags_HasMouseCursors : constant unsigned := 2;
   ImGuiBackendFlags_HasSetMousePos : constant unsigned := 4;
   ImGuiBackendFlags_RendererHasVtxOffset : constant unsigned := 8;  -- cimgui.h:594

   type ImGuiCol_u is
     (ImGuiCol_Text,
      ImGuiCol_TextDisabled,
      ImGuiCol_WindowBg,
      ImGuiCol_ChildBg,
      ImGuiCol_PopupBg,
      ImGuiCol_Border,
      ImGuiCol_BorderShadow,
      ImGuiCol_FrameBg,
      ImGuiCol_FrameBgHovered,
      ImGuiCol_FrameBgActive,
      ImGuiCol_TitleBg,
      ImGuiCol_TitleBgActive,
      ImGuiCol_TitleBgCollapsed,
      ImGuiCol_MenuBarBg,
      ImGuiCol_ScrollbarBg,
      ImGuiCol_ScrollbarGrab,
      ImGuiCol_ScrollbarGrabHovered,
      ImGuiCol_ScrollbarGrabActive,
      ImGuiCol_CheckMark,
      ImGuiCol_SliderGrab,
      ImGuiCol_SliderGrabActive,
      ImGuiCol_Button,
      ImGuiCol_ButtonHovered,
      ImGuiCol_ButtonActive,
      ImGuiCol_Header,
      ImGuiCol_HeaderHovered,
      ImGuiCol_HeaderActive,
      ImGuiCol_Separator,
      ImGuiCol_SeparatorHovered,
      ImGuiCol_SeparatorActive,
      ImGuiCol_ResizeGrip,
      ImGuiCol_ResizeGripHovered,
      ImGuiCol_ResizeGripActive,
      ImGuiCol_Tab,
      ImGuiCol_TabHovered,
      ImGuiCol_TabActive,
      ImGuiCol_TabUnfocused,
      ImGuiCol_TabUnfocusedActive,
      ImGuiCol_PlotLines,
      ImGuiCol_PlotLinesHovered,
      ImGuiCol_PlotHistogram,
      ImGuiCol_PlotHistogramHovered,
      ImGuiCol_TableHeaderBg,
      ImGuiCol_TableBorderStrong,
      ImGuiCol_TableBorderLight,
      ImGuiCol_TableRowBg,
      ImGuiCol_TableRowBgAlt,
      ImGuiCol_TextSelectedBg,
      ImGuiCol_DragDropTarget,
      ImGuiCol_NavHighlight,
      ImGuiCol_NavWindowingHighlight,
      ImGuiCol_NavWindowingDimBg,
      ImGuiCol_ModalWindowDimBg,
      ImGuiCol_COUNT)
   with Convention => C;  -- cimgui.h:650

   type ImGuiStyleVar_u is
     (ImGuiStyleVar_Alpha,
      ImGuiStyleVar_DisabledAlpha,
      ImGuiStyleVar_WindowPadding,
      ImGuiStyleVar_WindowRounding,
      ImGuiStyleVar_WindowBorderSize,
      ImGuiStyleVar_WindowMinSize,
      ImGuiStyleVar_WindowTitleAlign,
      ImGuiStyleVar_ChildRounding,
      ImGuiStyleVar_ChildBorderSize,
      ImGuiStyleVar_PopupRounding,
      ImGuiStyleVar_PopupBorderSize,
      ImGuiStyleVar_FramePadding,
      ImGuiStyleVar_FrameRounding,
      ImGuiStyleVar_FrameBorderSize,
      ImGuiStyleVar_ItemSpacing,
      ImGuiStyleVar_ItemInnerSpacing,
      ImGuiStyleVar_IndentSpacing,
      ImGuiStyleVar_CellPadding,
      ImGuiStyleVar_ScrollbarSize,
      ImGuiStyleVar_ScrollbarRounding,
      ImGuiStyleVar_GrabMinSize,
      ImGuiStyleVar_GrabRounding,
      ImGuiStyleVar_TabRounding,
      ImGuiStyleVar_ButtonTextAlign,
      ImGuiStyleVar_SelectableTextAlign,
      ImGuiStyleVar_COUNT)
   with Convention => C;  -- cimgui.h:678

   subtype ImGuiButtonFlags_u is unsigned;
   ImGuiButtonFlags_None : constant unsigned := 0;
   ImGuiButtonFlags_MouseButtonLeft : constant unsigned := 1;
   ImGuiButtonFlags_MouseButtonRight : constant unsigned := 2;
   ImGuiButtonFlags_MouseButtonMiddle : constant unsigned := 4;
   ImGuiButtonFlags_MouseButtonMask_u : constant unsigned := 7;
   ImGuiButtonFlags_MouseButtonDefault_u : constant unsigned := 1;  -- cimgui.h:686

   subtype ImGuiColorEditFlags_u is unsigned;
   ImGuiColorEditFlags_None : constant unsigned := 0;
   ImGuiColorEditFlags_NoAlpha : constant unsigned := 2;
   ImGuiColorEditFlags_NoPicker : constant unsigned := 4;
   ImGuiColorEditFlags_NoOptions : constant unsigned := 8;
   ImGuiColorEditFlags_NoSmallPreview : constant unsigned := 16;
   ImGuiColorEditFlags_NoInputs : constant unsigned := 32;
   ImGuiColorEditFlags_NoTooltip : constant unsigned := 64;
   ImGuiColorEditFlags_NoLabel : constant unsigned := 128;
   ImGuiColorEditFlags_NoSidePreview : constant unsigned := 256;
   ImGuiColorEditFlags_NoDragDrop : constant unsigned := 512;
   ImGuiColorEditFlags_NoBorder : constant unsigned := 1024;
   ImGuiColorEditFlags_AlphaBar : constant unsigned := 65536;
   ImGuiColorEditFlags_AlphaPreview : constant unsigned := 131072;
   ImGuiColorEditFlags_AlphaPreviewHalf : constant unsigned := 262144;
   ImGuiColorEditFlags_HDR : constant unsigned := 524288;
   ImGuiColorEditFlags_DisplayRGB : constant unsigned := 1048576;
   ImGuiColorEditFlags_DisplayHSV : constant unsigned := 2097152;
   ImGuiColorEditFlags_DisplayHex : constant unsigned := 4194304;
   ImGuiColorEditFlags_Uint8 : constant unsigned := 8388608;
   ImGuiColorEditFlags_Float : constant unsigned := 16777216;
   ImGuiColorEditFlags_PickerHueBar : constant unsigned := 33554432;
   ImGuiColorEditFlags_PickerHueWheel : constant unsigned := 67108864;
   ImGuiColorEditFlags_InputRGB : constant unsigned := 134217728;
   ImGuiColorEditFlags_InputHSV : constant unsigned := 268435456;
   ImGuiColorEditFlags_DefaultOptions_u : constant unsigned := 177209344;
   ImGuiColorEditFlags_DisplayMask_u : constant unsigned := 7340032;
   ImGuiColorEditFlags_DataTypeMask_u : constant unsigned := 25165824;
   ImGuiColorEditFlags_PickerMask_u : constant unsigned := 100663296;
   ImGuiColorEditFlags_InputMask_u : constant unsigned := 402653184;  -- cimgui.h:717

   subtype ImGuiSliderFlags_u is unsigned;
   ImGuiSliderFlags_None : constant unsigned := 0;
   ImGuiSliderFlags_AlwaysClamp : constant unsigned := 16;
   ImGuiSliderFlags_Logarithmic : constant unsigned := 32;
   ImGuiSliderFlags_NoRoundToFormat : constant unsigned := 64;
   ImGuiSliderFlags_NoInput : constant unsigned := 128;
   ImGuiSliderFlags_InvalidMask_u : constant unsigned := 1879048207;  -- cimgui.h:725

   subtype ImGuiMouseButton_u is unsigned;
   ImGuiMouseButton_Left : constant unsigned := 0;
   ImGuiMouseButton_Right : constant unsigned := 1;
   ImGuiMouseButton_Middle : constant unsigned := 2;
   ImGuiMouseButton_COUNT : constant unsigned := 5;  -- cimgui.h:731

   subtype ImGuiMouseCursor_u is int;
   ImGuiMouseCursor_None : constant int := -1;
   ImGuiMouseCursor_Arrow : constant int := 0;
   ImGuiMouseCursor_TextInput : constant int := 1;
   ImGuiMouseCursor_ResizeAll : constant int := 2;
   ImGuiMouseCursor_ResizeNS : constant int := 3;
   ImGuiMouseCursor_ResizeEW : constant int := 4;
   ImGuiMouseCursor_ResizeNESW : constant int := 5;
   ImGuiMouseCursor_ResizeNWSE : constant int := 6;
   ImGuiMouseCursor_Hand : constant int := 7;
   ImGuiMouseCursor_NotAllowed : constant int := 8;
   ImGuiMouseCursor_COUNT : constant int := 9;  -- cimgui.h:744

   --subtype ImGuiCond_u is unsigned;
   ImGuiCond_None : constant  := 0;
   ImGuiCond_Always : constant ImGuiCond := 1;
   ImGuiCond_Once : constant ImGuiCond := 2;
   ImGuiCond_FirstUseEver : constant ImGuiCond := 4;
   ImGuiCond_Appearing : constant ImGuiCond := 8;  -- cimgui.h:751

   type ImGuiStyle_array1601 is array (0 .. 52) of aliased ImVec4;
   type ImGuiStyle is record
      Alpha : aliased float;  -- cimgui.h:754
      DisabledAlpha : aliased float;  -- cimgui.h:755
      WindowPadding : aliased ImVec2;  -- cimgui.h:756
      WindowRounding : aliased float;  -- cimgui.h:757
      WindowBorderSize : aliased float;  -- cimgui.h:758
      WindowMinSize : aliased ImVec2;  -- cimgui.h:759
      WindowTitleAlign : aliased ImVec2;  -- cimgui.h:760
      WindowMenuButtonPosition : aliased ImGuiDir;  -- cimgui.h:761
      ChildRounding : aliased float;  -- cimgui.h:762
      ChildBorderSize : aliased float;  -- cimgui.h:763
      PopupRounding : aliased float;  -- cimgui.h:764
      PopupBorderSize : aliased float;  -- cimgui.h:765
      FramePadding : aliased ImVec2;  -- cimgui.h:766
      FrameRounding : aliased float;  -- cimgui.h:767
      FrameBorderSize : aliased float;  -- cimgui.h:768
      ItemSpacing : aliased ImVec2;  -- cimgui.h:769
      ItemInnerSpacing : aliased ImVec2;  -- cimgui.h:770
      CellPadding : aliased ImVec2;  -- cimgui.h:771
      TouchExtraPadding : aliased ImVec2;  -- cimgui.h:772
      IndentSpacing : aliased float;  -- cimgui.h:773
      ColumnsMinSpacing : aliased float;  -- cimgui.h:774
      ScrollbarSize : aliased float;  -- cimgui.h:775
      ScrollbarRounding : aliased float;  -- cimgui.h:776
      GrabMinSize : aliased float;  -- cimgui.h:777
      GrabRounding : aliased float;  -- cimgui.h:778
      LogSliderDeadzone : aliased float;  -- cimgui.h:779
      TabRounding : aliased float;  -- cimgui.h:780
      TabBorderSize : aliased float;  -- cimgui.h:781
      TabMinWidthForCloseButton : aliased float;  -- cimgui.h:782
      ColorButtonPosition : aliased ImGuiDir;  -- cimgui.h:783
      ButtonTextAlign : aliased ImVec2;  -- cimgui.h:784
      SelectableTextAlign : aliased ImVec2;  -- cimgui.h:785
      DisplayWindowPadding : aliased ImVec2;  -- cimgui.h:786
      DisplaySafeAreaPadding : aliased ImVec2;  -- cimgui.h:787
      MouseCursorScale : aliased float;  -- cimgui.h:788
      AntiAliasedLines : aliased Extensions.bool;  -- cimgui.h:789
      AntiAliasedLinesUseTex : aliased Extensions.bool;  -- cimgui.h:790
      AntiAliasedFill : aliased Extensions.bool;  -- cimgui.h:791
      CurveTessellationTol : aliased float;  -- cimgui.h:792
      CircleTessellationMaxError : aliased float;  -- cimgui.h:793
      Colors : aliased ImGuiStyle_array1601;  -- cimgui.h:794
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:752

   type ImGuiKeyData is record
      Down : aliased Extensions.bool;  -- cimgui.h:798
      DownDuration : aliased float;  -- cimgui.h:799
      DownDurationPrev : aliased float;  -- cimgui.h:800
      AnalogValue : aliased float;  -- cimgui.h:801
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:796

   type ImVector_ImWchar is record
      Size : aliased int;  -- cimgui.h:803
      Capacity : aliased int;  -- cimgui.h:803
      Data : access ImWchar;  -- cimgui.h:803
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:803

   type ImGuiIO_array1625 is array (0 .. 644) of aliased int;
   type ImGuiIO_array1626 is array (0 .. 644) of aliased Extensions.bool;
   type ImGuiIO_array1628 is array (0 .. 4) of aliased Extensions.bool;
   type ImGuiIO_array1630 is array (0 .. 19) of aliased float;
   type ImGuiIO_array1632 is array (0 .. 644) of aliased ImGuiKeyData;
   type ImGuiIO_array1634 is array (0 .. 4) of aliased ImVec2;
   type ImGuiIO_array1635 is array (0 .. 4) of aliased double;
   type ImGuiIO_array1637 is array (0 .. 4) of aliased ImU16;
   type ImGuiIO_array1638 is array (0 .. 4) of aliased float;
   type ImGuiIO is record
      ConfigFlags : aliased ImGuiConfigFlags;  -- cimgui.h:807
      BackendFlags : aliased ImGuiBackendFlags;  -- cimgui.h:808
      DisplaySize : aliased ImVec2;  -- cimgui.h:809
      DeltaTime : aliased float;  -- cimgui.h:810
      IniSavingRate : aliased float;  -- cimgui.h:811
      IniFilename : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:812
      LogFilename : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:813
      MouseDoubleClickTime : aliased float;  -- cimgui.h:814
      MouseDoubleClickMaxDist : aliased float;  -- cimgui.h:815
      MouseDragThreshold : aliased float;  -- cimgui.h:816
      KeyRepeatDelay : aliased float;  -- cimgui.h:817
      KeyRepeatRate : aliased float;  -- cimgui.h:818
      UserData : System.Address;  -- cimgui.h:819
      Fonts : access ImFontAtlas;  -- cimgui.h:820
      FontGlobalScale : aliased float;  -- cimgui.h:821
      FontAllowUserScaling : aliased Extensions.bool;  -- cimgui.h:822
      FontDefault : access ImFont;  -- cimgui.h:823
      DisplayFramebufferScale : aliased ImVec2;  -- cimgui.h:824
      MouseDrawCursor : aliased Extensions.bool;  -- cimgui.h:825
      ConfigMacOSXBehaviors : aliased Extensions.bool;  -- cimgui.h:826
      ConfigInputTrickleEventQueue : aliased Extensions.bool;  -- cimgui.h:827
      ConfigInputTextCursorBlink : aliased Extensions.bool;  -- cimgui.h:828
      ConfigDragClickToInputText : aliased Extensions.bool;  -- cimgui.h:829
      ConfigWindowsResizeFromEdges : aliased Extensions.bool;  -- cimgui.h:830
      ConfigWindowsMoveFromTitleBarOnly : aliased Extensions.bool;  -- cimgui.h:831
      ConfigMemoryCompactTimer : aliased float;  -- cimgui.h:832
      BackendPlatformName : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:833
      BackendRendererName : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:834
      BackendPlatformUserData : System.Address;  -- cimgui.h:835
      BackendRendererUserData : System.Address;  -- cimgui.h:836
      BackendLanguageUserData : System.Address;  -- cimgui.h:837
      GetClipboardTextFn : access function (arg1 : System.Address) return Interfaces.C.Strings.chars_ptr;  -- cimgui.h:838
      SetClipboardTextFn : access procedure (arg1 : System.Address; arg2 : Interfaces.C.Strings.chars_ptr);  -- cimgui.h:839
      ClipboardUserData : System.Address;  -- cimgui.h:840
      SetPlatformImeDataFn : access procedure (arg1 : access ImGuiViewport; arg2 : access ImGuiPlatformImeData);  -- cimgui.h:841
      u_UnusedPadding : System.Address;  -- cimgui.h:842
      WantCaptureMouse : aliased Extensions.bool;  -- cimgui.h:843
      WantCaptureKeyboard : aliased Extensions.bool;  -- cimgui.h:844
      WantTextInput : aliased Extensions.bool;  -- cimgui.h:845
      WantSetMousePos : aliased Extensions.bool;  -- cimgui.h:846
      WantSaveIniSettings : aliased Extensions.bool;  -- cimgui.h:847
      NavActive : aliased Extensions.bool;  -- cimgui.h:848
      NavVisible : aliased Extensions.bool;  -- cimgui.h:849
      Framerate : aliased float;  -- cimgui.h:850
      MetricsRenderVertices : aliased int;  -- cimgui.h:851
      MetricsRenderIndices : aliased int;  -- cimgui.h:852
      MetricsRenderWindows : aliased int;  -- cimgui.h:853
      MetricsActiveWindows : aliased int;  -- cimgui.h:854
      MetricsActiveAllocations : aliased int;  -- cimgui.h:855
      MouseDelta : aliased ImVec2;  -- cimgui.h:856
      KeyMap : aliased ImGuiIO_array1625;  -- cimgui.h:857
      KeysDown : aliased ImGuiIO_array1626;  -- cimgui.h:858
      MousePos : aliased ImVec2;  -- cimgui.h:859
      MouseDown : aliased ImGuiIO_array1628;  -- cimgui.h:860
      MouseWheel : aliased float;  -- cimgui.h:861
      MouseWheelH : aliased float;  -- cimgui.h:862
      KeyCtrl : aliased Extensions.bool;  -- cimgui.h:863
      KeyShift : aliased Extensions.bool;  -- cimgui.h:864
      KeyAlt : aliased Extensions.bool;  -- cimgui.h:865
      KeySuper : aliased Extensions.bool;  -- cimgui.h:866
      NavInputs : aliased ImGuiIO_array1630;  -- cimgui.h:867
      KeyMods : aliased ImGuiModFlags;  -- cimgui.h:868
      KeysData : aliased ImGuiIO_array1632;  -- cimgui.h:869
      WantCaptureMouseUnlessPopupClose : aliased Extensions.bool;  -- cimgui.h:870
      MousePosPrev : aliased ImVec2;  -- cimgui.h:871
      MouseClickedPos : aliased ImGuiIO_array1634;  -- cimgui.h:872
      MouseClickedTime : aliased ImGuiIO_array1635;  -- cimgui.h:873
      MouseClicked : aliased ImGuiIO_array1628;  -- cimgui.h:874
      MouseDoubleClicked : aliased ImGuiIO_array1628;  -- cimgui.h:875
      MouseClickedCount : aliased ImGuiIO_array1637;  -- cimgui.h:876
      MouseClickedLastCount : aliased ImGuiIO_array1637;  -- cimgui.h:877
      MouseReleased : aliased ImGuiIO_array1628;  -- cimgui.h:878
      MouseDownOwned : aliased ImGuiIO_array1628;  -- cimgui.h:879
      MouseDownOwnedUnlessPopupClose : aliased ImGuiIO_array1628;  -- cimgui.h:880
      MouseDownDuration : aliased ImGuiIO_array1638;  -- cimgui.h:881
      MouseDownDurationPrev : aliased ImGuiIO_array1638;  -- cimgui.h:882
      MouseDragMaxDistanceSqr : aliased ImGuiIO_array1638;  -- cimgui.h:883
      NavInputsDownDuration : aliased ImGuiIO_array1630;  -- cimgui.h:884
      NavInputsDownDurationPrev : aliased ImGuiIO_array1630;  -- cimgui.h:885
      PenPressure : aliased float;  -- cimgui.h:886
      AppFocusLost : aliased Extensions.bool;  -- cimgui.h:887
      AppAcceptingEvents : aliased Extensions.bool;  -- cimgui.h:888
      BackendUsingLegacyKeyArrays : aliased ImS8;  -- cimgui.h:889
      BackendUsingLegacyNavInputArray : aliased Extensions.bool;  -- cimgui.h:890
      InputQueueSurrogate : aliased ImWchar16;  -- cimgui.h:891
      InputQueueCharacters : aliased ImVector_ImWchar;  -- cimgui.h:892
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:805

   type ImGuiInputTextCallbackData is record
      EventFlag : aliased ImGuiInputTextFlags;  -- cimgui.h:896
      Flags : aliased ImGuiInputTextFlags;  -- cimgui.h:897
      UserData : System.Address;  -- cimgui.h:898
      EventChar : aliased ImWchar;  -- cimgui.h:899
      EventKey : aliased ImGuiKey;  -- cimgui.h:900
      Buf : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:901
      BufTextLen : aliased int;  -- cimgui.h:902
      BufSize : aliased int;  -- cimgui.h:903
      BufDirty : aliased Extensions.bool;  -- cimgui.h:904
      CursorPos : aliased int;  -- cimgui.h:905
      SelectionStart : aliased int;  -- cimgui.h:906
      SelectionEnd : aliased int;  -- cimgui.h:907
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:894

   type ImGuiSizeCallbackData is record
      UserData : System.Address;  -- cimgui.h:911
      Pos : aliased ImVec2;  -- cimgui.h:912
      CurrentSize : aliased ImVec2;  -- cimgui.h:913
      DesiredSize : aliased ImVec2;  -- cimgui.h:914
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:909

   subtype ImGuiPayload_array1643 is Interfaces.C.char_array (0 .. 32);
   type ImGuiPayload is record
      Data : System.Address;  -- cimgui.h:918
      DataSize : aliased int;  -- cimgui.h:919
      SourceId : aliased ImGuiID;  -- cimgui.h:920
      SourceParentId : aliased ImGuiID;  -- cimgui.h:921
      DataFrameCount : aliased int;  -- cimgui.h:922
      DataType : aliased ImGuiPayload_array1643;  -- cimgui.h:923
      Preview : aliased Extensions.bool;  -- cimgui.h:924
      Delivery : aliased Extensions.bool;  -- cimgui.h:925
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:916

   type ImGuiTableColumnSortSpecs is record
      ColumnUserID : aliased ImGuiID;  -- cimgui.h:929
      ColumnIndex : aliased ImS16;  -- cimgui.h:930
      SortOrder : aliased ImS16;  -- cimgui.h:931
      SortDirection : aliased signed_char;  -- cimgui.h:932
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:927

   type ImGuiTableSortSpecs is record
      Specs : access constant ImGuiTableColumnSortSpecs;  -- cimgui.h:936
      SpecsCount : aliased int;  -- cimgui.h:937
      SpecsDirty : aliased Extensions.bool;  -- cimgui.h:938
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:934

   type ImGuiOnceUponAFrame is record
      RefFrame : aliased int;  -- cimgui.h:942
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:940

   type ImGuiTextRange is record
      b : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:946
      e : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:947
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:944

   type ImVector_ImGuiTextRange is record
      Size : aliased int;  -- cimgui.h:951
      Capacity : aliased int;  -- cimgui.h:951
      Data : access ImGuiTextRange;  -- cimgui.h:951
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:951

   subtype ImGuiTextFilter_array1661 is Interfaces.C.char_array (0 .. 255);
   type ImGuiTextFilter is record
      InputBuf : aliased ImGuiTextFilter_array1661;  -- cimgui.h:955
      Filters : aliased ImVector_ImGuiTextRange;  -- cimgui.h:956
      CountGrep : aliased int;  -- cimgui.h:957
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:953

   type ImVector_char is record
      Size : aliased int;  -- cimgui.h:960
      Capacity : aliased int;  -- cimgui.h:960
      Data : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:960
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:960

   type ImGuiTextBuffer is record
      Buf : aliased ImVector_char;  -- cimgui.h:964
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:962

   type anon_32 (discr : unsigned := 0) is record
      case discr is
         when 0 =>
            val_i : aliased int;  -- cimgui.h:969
         when 1 =>
            val_f : aliased float;  -- cimgui.h:969
         when others =>
            val_p : System.Address;  -- cimgui.h:969
      end case;
   end record
   with Convention => C_Pass_By_Copy,
        Unchecked_Union => True;
   type ImGuiStoragePair is record
      key : aliased ImGuiID;  -- cimgui.h:968
      field_2 : aliased anon_32;
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:966

   type ImVector_ImGuiStoragePair is record
      Size : aliased int;  -- cimgui.h:973
      Capacity : aliased int;  -- cimgui.h:973
      Data : access ImGuiStoragePair;  -- cimgui.h:973
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:973

   type ImGuiStorage is record
      Data : aliased ImVector_ImGuiStoragePair;  -- cimgui.h:977
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:975

   type ImGuiListClipper is record
      DisplayStart : aliased int;  -- cimgui.h:982
      DisplayEnd : aliased int;  -- cimgui.h:983
      ItemsCount : aliased int;  -- cimgui.h:984
      ItemsHeight : aliased float;  -- cimgui.h:985
      StartPosY : aliased float;  -- cimgui.h:986
      TempData : System.Address;  -- cimgui.h:987
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:980

   type ImColor is record
      Value : aliased ImVec4;  -- cimgui.h:991
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:989

   type ImDrawCallback is access procedure (arg1 : access constant ImDrawList; arg2 : access constant ImDrawCmd)
   with Convention => C;  -- cimgui.h:993

   type ImDrawCmd is record
      ClipRect : aliased ImVec4;  -- cimgui.h:996
      TextureId : ImTextureID;  -- cimgui.h:997
      VtxOffset : aliased unsigned;  -- cimgui.h:998
      IdxOffset : aliased unsigned;  -- cimgui.h:999
      ElemCount : aliased unsigned;  -- cimgui.h:1000
      UserCallback : ImDrawCallback;  -- cimgui.h:1001
      UserCallbackData : System.Address;  -- cimgui.h:1002
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:994

   type ImDrawVert is record
      pos : aliased ImVec2;  -- cimgui.h:1006
      uv : aliased ImVec2;  -- cimgui.h:1007
      col : aliased ImU32;  -- cimgui.h:1008
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1004

   type ImDrawCmdHeader;
   type ImDrawCmdHeader is record
      ClipRect : aliased ImVec4;  -- cimgui.h:1013
      TextureId : ImTextureID;  -- cimgui.h:1014
      VtxOffset : aliased unsigned;  -- cimgui.h:1015
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1011

   type ImVector_ImDrawCmd is record
      Size : aliased int;  -- cimgui.h:1017
      Capacity : aliased int;  -- cimgui.h:1017
      Data : access ImDrawCmd;  -- cimgui.h:1017
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1017

   type ImVector_ImDrawIdx is record
      Size : aliased int;  -- cimgui.h:1019
      Capacity : aliased int;  -- cimgui.h:1019
      Data : access ImDrawIdx;  -- cimgui.h:1019
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1019

   type ImDrawChannel is record
      u_CmdBuffer : aliased ImVector_ImDrawCmd;  -- cimgui.h:1023
      u_IdxBuffer : aliased ImVector_ImDrawIdx;  -- cimgui.h:1024
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1021

   type ImVector_ImDrawChannel is record
      Size : aliased int;  -- cimgui.h:1026
      Capacity : aliased int;  -- cimgui.h:1026
      Data : access ImDrawChannel;  -- cimgui.h:1026
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1026

   type ImDrawListSplitter is record
      u_Current : aliased int;  -- cimgui.h:1030
      u_Count : aliased int;  -- cimgui.h:1031
      u_Channels : aliased ImVector_ImDrawChannel;  -- cimgui.h:1032
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1028

   subtype ImDrawFlags_u is unsigned;
   ImDrawFlags_None : constant unsigned := 0;
   ImDrawFlags_Closed : constant unsigned := 1;
   ImDrawFlags_RoundCornersTopLeft : constant unsigned := 16;
   ImDrawFlags_RoundCornersTopRight : constant unsigned := 32;
   ImDrawFlags_RoundCornersBottomLeft : constant unsigned := 64;
   ImDrawFlags_RoundCornersBottomRight : constant unsigned := 128;
   ImDrawFlags_RoundCornersNone : constant unsigned := 256;
   ImDrawFlags_RoundCornersTop : constant unsigned := 48;
   ImDrawFlags_RoundCornersBottom : constant unsigned := 192;
   ImDrawFlags_RoundCornersLeft : constant unsigned := 80;
   ImDrawFlags_RoundCornersRight : constant unsigned := 160;
   ImDrawFlags_RoundCornersAll : constant unsigned := 240;
   ImDrawFlags_RoundCornersDefault_u : constant unsigned := 240;
   ImDrawFlags_RoundCornersMask_u : constant unsigned := 496;  -- cimgui.h:1049

   subtype ImDrawListFlags_u is unsigned;
   ImDrawListFlags_None : constant unsigned := 0;
   ImDrawListFlags_AntiAliasedLines : constant unsigned := 1;
   ImDrawListFlags_AntiAliasedLinesUseTex : constant unsigned := 2;
   ImDrawListFlags_AntiAliasedFill : constant unsigned := 4;
   ImDrawListFlags_AllowVtxOffset : constant unsigned := 8;  -- cimgui.h:1056

   type ImVector_ImDrawVert is record
      Size : aliased int;  -- cimgui.h:1057
      Capacity : aliased int;  -- cimgui.h:1057
      Data : access ImDrawVert;  -- cimgui.h:1057
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1057

   type ImVector_ImVec4 is record
      Size : aliased int;  -- cimgui.h:1059
      Capacity : aliased int;  -- cimgui.h:1059
      Data : access ImVec4;  -- cimgui.h:1059
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1059

   type ImVector_ImTextureID is record
      Size : aliased int;  -- cimgui.h:1061
      Capacity : aliased int;  -- cimgui.h:1061
      Data : System.Address;  -- cimgui.h:1061
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1061

   type ImVector_ImVec2 is record
      Size : aliased int;  -- cimgui.h:1063
      Capacity : aliased int;  -- cimgui.h:1063
      Data : access ImVec2;  -- cimgui.h:1063
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1063

   type ImDrawList is record
      CmdBuffer : aliased ImVector_ImDrawCmd;  -- cimgui.h:1067
      IdxBuffer : aliased ImVector_ImDrawIdx;  -- cimgui.h:1068
      VtxBuffer : aliased ImVector_ImDrawVert;  -- cimgui.h:1069
      Flags : aliased ImDrawListFlags;  -- cimgui.h:1070
      u_VtxCurrentIdx : aliased unsigned;  -- cimgui.h:1071
      u_Data : access constant ImDrawListSharedData;  -- cimgui.h:1072
      u_OwnerName : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:1073
      u_VtxWritePtr : access ImDrawVert;  -- cimgui.h:1074
      u_IdxWritePtr : access ImDrawIdx;  -- cimgui.h:1075
      u_ClipRectStack : aliased ImVector_ImVec4;  -- cimgui.h:1076
      u_TextureIdStack : aliased ImVector_ImTextureID;  -- cimgui.h:1077
      u_Path : aliased ImVector_ImVec2;  -- cimgui.h:1078
      u_CmdHeader : aliased ImDrawCmdHeader;  -- cimgui.h:1079
      u_Splitter : aliased ImDrawListSplitter;  -- cimgui.h:1080
      u_FringeScale : aliased float;  -- cimgui.h:1081
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1065

   type ImDrawData is record
      Valid : aliased Extensions.bool;  -- cimgui.h:1085
      CmdListsCount : aliased int;  -- cimgui.h:1086
      TotalIdxCount : aliased int;  -- cimgui.h:1087
      TotalVtxCount : aliased int;  -- cimgui.h:1088
      CmdLists : System.Address;  -- cimgui.h:1089
      DisplayPos : aliased ImVec2;  -- cimgui.h:1090
      DisplaySize : aliased ImVec2;  -- cimgui.h:1091
      FramebufferScale : aliased ImVec2;  -- cimgui.h:1092
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1083

   subtype ImFontConfig_array1750 is Interfaces.C.char_array (0 .. 39);
   type ImFontConfig is record
      FontData : System.Address;  -- cimgui.h:1096
      FontDataSize : aliased int;  -- cimgui.h:1097
      FontDataOwnedByAtlas : aliased Extensions.bool;  -- cimgui.h:1098
      FontNo : aliased int;  -- cimgui.h:1099
      SizePixels : aliased float;  -- cimgui.h:1100
      OversampleH : aliased int;  -- cimgui.h:1101
      OversampleV : aliased int;  -- cimgui.h:1102
      PixelSnapH : aliased Extensions.bool;  -- cimgui.h:1103
      GlyphExtraSpacing : aliased ImVec2;  -- cimgui.h:1104
      GlyphOffset : aliased ImVec2;  -- cimgui.h:1105
      GlyphRanges : access ImWchar;  -- cimgui.h:1106
      GlyphMinAdvanceX : aliased float;  -- cimgui.h:1107
      GlyphMaxAdvanceX : aliased float;  -- cimgui.h:1108
      MergeMode : aliased Extensions.bool;  -- cimgui.h:1109
      FontBuilderFlags : aliased unsigned;  -- cimgui.h:1110
      RasterizerMultiply : aliased float;  -- cimgui.h:1111
      EllipsisChar : aliased ImWchar;  -- cimgui.h:1112
      Name : aliased ImFontConfig_array1750;  -- cimgui.h:1113
      DstFont : access ImFont;  -- cimgui.h:1114
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1094

   type ImFontGlyph is record
      Colored : Extensions.Unsigned_1;  -- cimgui.h:1118
      Visible : Extensions.Unsigned_1;  -- cimgui.h:1119
      Codepoint : Extensions.Unsigned_30;  -- cimgui.h:1120
      AdvanceX : aliased float;  -- cimgui.h:1121
      X0 : aliased float;  -- cimgui.h:1122
      Y0 : aliased float;  -- cimgui.h:1122
      X1 : aliased float;  -- cimgui.h:1122
      Y1 : aliased float;  -- cimgui.h:1122
      U0 : aliased float;  -- cimgui.h:1123
      V0 : aliased float;  -- cimgui.h:1123
      U1 : aliased float;  -- cimgui.h:1123
      V1 : aliased float;  -- cimgui.h:1123
   end record
   with Convention => C_Pass_By_Copy,
        Pack => True;  -- cimgui.h:1116

   type ImVector_ImU32 is record
      Size : aliased int;  -- cimgui.h:1125
      Capacity : aliased int;  -- cimgui.h:1125
      Data : access ImU32;  -- cimgui.h:1125
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1125

   type ImFontGlyphRangesBuilder is record
      UsedChars : aliased ImVector_ImU32;  -- cimgui.h:1129
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1127

   type ImFontAtlasCustomRect;
   type ImFontAtlasCustomRect is record
      Width : aliased unsigned_short;  -- cimgui.h:1134
      Height : aliased unsigned_short;  -- cimgui.h:1134
      X : aliased unsigned_short;  -- cimgui.h:1135
      Y : aliased unsigned_short;  -- cimgui.h:1135
      GlyphID : aliased unsigned;  -- cimgui.h:1136
      GlyphAdvanceX : aliased float;  -- cimgui.h:1137
      GlyphOffset : aliased ImVec2;  -- cimgui.h:1138
      Font : access ImFont;  -- cimgui.h:1139
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1132

   subtype ImFontAtlasFlags_u is unsigned;
   ImFontAtlasFlags_None : constant unsigned := 0;
   ImFontAtlasFlags_NoPowerOfTwoHeight : constant unsigned := 1;
   ImFontAtlasFlags_NoMouseCursors : constant unsigned := 2;
   ImFontAtlasFlags_NoBakedLines : constant unsigned := 4;  -- cimgui.h:1146

   type ImVector_ImFontPtr is record
      Size : aliased int;  -- cimgui.h:1147
      Capacity : aliased int;  -- cimgui.h:1147
      Data : System.Address;  -- cimgui.h:1147
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1147

   type ImVector_ImFontAtlasCustomRect is record
      Size : aliased int;  -- cimgui.h:1149
      Capacity : aliased int;  -- cimgui.h:1149
      Data : access ImFontAtlasCustomRect;  -- cimgui.h:1149
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1149

   type ImVector_ImFontConfig is record
      Size : aliased int;  -- cimgui.h:1151
      Capacity : aliased int;  -- cimgui.h:1151
      Data : access ImFontConfig;  -- cimgui.h:1151
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1151

   type ImFontAtlas_array1783 is array (0 .. 63) of aliased ImVec4;
   type ImFontAtlas is record
      Flags : aliased ImFontAtlasFlags;  -- cimgui.h:1155
      TexID : ImTextureID;  -- cimgui.h:1156
      TexDesiredWidth : aliased int;  -- cimgui.h:1157
      TexGlyphPadding : aliased int;  -- cimgui.h:1158
      Locked : aliased Extensions.bool;  -- cimgui.h:1159
      TexReady : aliased Extensions.bool;  -- cimgui.h:1160
      TexPixelsUseColors : aliased Extensions.bool;  -- cimgui.h:1161
      TexPixelsAlpha8 : access unsigned_char;  -- cimgui.h:1162
      TexPixelsRGBA32 : access unsigned;  -- cimgui.h:1163
      TexWidth : aliased int;  -- cimgui.h:1164
      TexHeight : aliased int;  -- cimgui.h:1165
      TexUvScale : aliased ImVec2;  -- cimgui.h:1166
      TexUvWhitePixel : aliased ImVec2;  -- cimgui.h:1167
      Fonts : aliased ImVector_ImFontPtr;  -- cimgui.h:1168
      CustomRects : aliased ImVector_ImFontAtlasCustomRect;  -- cimgui.h:1169
      ConfigData : aliased ImVector_ImFontConfig;  -- cimgui.h:1170
      TexUvLines : aliased ImFontAtlas_array1783;  -- cimgui.h:1171
      FontBuilderIO : access constant ImFontBuilderIO;  -- cimgui.h:1172
      FontBuilderFlags : aliased unsigned;  -- cimgui.h:1173
      PackIdMouseCursors : aliased int;  -- cimgui.h:1174
      PackIdLines : aliased int;  -- cimgui.h:1175
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1153

   type ImVector_float is record
      Size : aliased int;  -- cimgui.h:1177
      Capacity : aliased int;  -- cimgui.h:1177
      Data : access float;  -- cimgui.h:1177
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1177

   type ImVector_ImFontGlyph is record
      Size : aliased int;  -- cimgui.h:1179
      Capacity : aliased int;  -- cimgui.h:1179
      Data : access ImFontGlyph;  -- cimgui.h:1179
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1179

   type ImFont_array1806 is array (0 .. 1) of aliased ImU8;
   type ImFont is record
      IndexAdvanceX : aliased ImVector_float;  -- cimgui.h:1183
      FallbackAdvanceX : aliased float;  -- cimgui.h:1184
      FontSize : aliased float;  -- cimgui.h:1185
      IndexLookup : aliased ImVector_ImWchar;  -- cimgui.h:1186
      Glyphs : aliased ImVector_ImFontGlyph;  -- cimgui.h:1187
      FallbackGlyph : access constant ImFontGlyph;  -- cimgui.h:1188
      ContainerAtlas : access ImFontAtlas;  -- cimgui.h:1189
      ConfigData : access constant ImFontConfig;  -- cimgui.h:1190
      ConfigDataCount : aliased short;  -- cimgui.h:1191
      FallbackChar : aliased ImWchar;  -- cimgui.h:1192
      EllipsisChar : aliased ImWchar;  -- cimgui.h:1193
      DotChar : aliased ImWchar;  -- cimgui.h:1194
      DirtyLookupTables : aliased Extensions.bool;  -- cimgui.h:1195
      Scale : aliased float;  -- cimgui.h:1196
      Ascent : aliased float;  -- cimgui.h:1197
      Descent : aliased float;  -- cimgui.h:1197
      MetricsTotalSurface : aliased int;  -- cimgui.h:1198
      Used4kPagesMap : aliased ImFont_array1806;  -- cimgui.h:1199
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1181

   subtype ImGuiViewportFlags_u is unsigned;
   ImGuiViewportFlags_None : constant unsigned := 0;
   ImGuiViewportFlags_IsPlatformWindow : constant unsigned := 1;
   ImGuiViewportFlags_IsPlatformMonitor : constant unsigned := 2;
   ImGuiViewportFlags_OwnedByApp : constant unsigned := 4;  -- cimgui.h:1206

   type ImGuiViewport is record
      Flags : aliased ImGuiViewportFlags;  -- cimgui.h:1209
      Pos : aliased ImVec2;  -- cimgui.h:1210
      Size : aliased ImVec2;  -- cimgui.h:1211
      WorkPos : aliased ImVec2;  -- cimgui.h:1212
      WorkSize : aliased ImVec2;  -- cimgui.h:1213
      PlatformHandleRaw : System.Address;  -- cimgui.h:1214
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1207

   type ImGuiPlatformImeData is record
      WantVisible : aliased Extensions.bool;  -- cimgui.h:1218
      InputPos : aliased ImVec2;  -- cimgui.h:1219
      InputLineHeight : aliased float;  -- cimgui.h:1220
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1216

   subtype ImGuiLayoutType is int;  -- cimgui.h:1255

   subtype ImGuiActivateFlags is int;  -- cimgui.h:1256

   subtype ImGuiDebugLogFlags is int;  -- cimgui.h:1257

   subtype ImGuiItemFlags is int;  -- cimgui.h:1258

   subtype ImGuiItemStatusFlags is int;  -- cimgui.h:1259

   subtype ImGuiOldColumnFlags is int;  -- cimgui.h:1260

   subtype ImGuiNavHighlightFlags is int;  -- cimgui.h:1261

   subtype ImGuiNavDirSourceFlags is int;  -- cimgui.h:1262

   subtype ImGuiNavMoveFlags is int;  -- cimgui.h:1263

   subtype ImGuiNextItemDataFlags is int;  -- cimgui.h:1264

   subtype ImGuiNextWindowDataFlags is int;  -- cimgui.h:1265

   subtype ImGuiScrollFlags is int;  -- cimgui.h:1266

   subtype ImGuiSeparatorFlags is int;  -- cimgui.h:1267

   subtype ImGuiTextFlags is int;  -- cimgui.h:1268

   subtype ImGuiTooltipFlags is int;  -- cimgui.h:1269

   type ImGuiErrorLogCallback is access procedure (arg1 : System.Address; arg2 : Interfaces.C.Strings.chars_ptr  -- , ...
         )
   with Convention => C;  -- cimgui.h:1270

   GImGui : access ImGuiContext  -- cimgui.h:1271
   with Import => True,
        Convention => C,
        External_Name => "GImGui";

   type StbUndoRecord;
   type StbUndoRecord is record
      where : aliased int;  -- cimgui.h:1275
      insert_length : aliased int;  -- cimgui.h:1276
      delete_length : aliased int;  -- cimgui.h:1277
      char_storage : aliased int;  -- cimgui.h:1278
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1273

   type StbUndoState;
   type StbUndoState_array1839 is array (0 .. 98) of aliased StbUndoRecord;
   type StbUndoState_array1842 is array (0 .. 998) of aliased ImWchar;
   type StbUndoState is record
      undo_rec : aliased StbUndoState_array1839;  -- cimgui.h:1283
      undo_char : aliased StbUndoState_array1842;  -- cimgui.h:1284
      undo_point : aliased short;  -- cimgui.h:1285
      redo_point : aliased short;  -- cimgui.h:1285
      undo_char_point : aliased int;  -- cimgui.h:1286
      redo_char_point : aliased int;  -- cimgui.h:1286
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1281

   type STB_TexteditState;
   type STB_TexteditState is record
      cursor : aliased int;  -- cimgui.h:1291
      select_start : aliased int;  -- cimgui.h:1292
      select_end : aliased int;  -- cimgui.h:1293
      insert_mode : aliased unsigned_char;  -- cimgui.h:1294
      row_count_per_page : aliased int;  -- cimgui.h:1295
      cursor_at_end_of_line : aliased unsigned_char;  -- cimgui.h:1296
      initialized : aliased unsigned_char;  -- cimgui.h:1297
      has_preferred_x : aliased unsigned_char;  -- cimgui.h:1298
      single_line : aliased unsigned_char;  -- cimgui.h:1299
      padding1 : aliased unsigned_char;  -- cimgui.h:1300
      padding2 : aliased unsigned_char;  -- cimgui.h:1300
      padding3 : aliased unsigned_char;  -- cimgui.h:1300
      preferred_x : aliased float;  -- cimgui.h:1301
      undostate : aliased StbUndoState;  -- cimgui.h:1302
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1289

   type StbTexteditRow;
   type StbTexteditRow is record
      x0 : aliased float;  -- cimgui.h:1307
      x1 : aliased float;  -- cimgui.h:1307
      baseline_y_delta : aliased float;  -- cimgui.h:1308
      ymin : aliased float;  -- cimgui.h:1309
      ymax : aliased float;  -- cimgui.h:1309
      num_chars : aliased int;  -- cimgui.h:1310
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1305

   type ImFileHandle is access all T_File;  -- cimgui.h:1312

   type ImVec1;
   type ImVec1 is record
      x : aliased float;  -- cimgui.h:1316
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1314

   type ImVec2ih;
   type ImVec2ih is record
      x : aliased short;  -- cimgui.h:1321
      y : aliased short;  -- cimgui.h:1321
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1319

   type ImRect is record
      Min : aliased ImVec2;  -- cimgui.h:1325
      Max : aliased ImVec2;  -- cimgui.h:1326
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1323

   type ImBitVector is record
      Storage : aliased ImVector_ImU32;  -- cimgui.h:1330
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1328

   subtype ImPoolIdx is int;  -- cimgui.h:1332

   type ImDrawListSharedData_array1862 is array (0 .. 47) of aliased ImVec2;
   type ImDrawListSharedData_array1864 is array (0 .. 63) of aliased ImU8;
   type ImDrawListSharedData is record
      TexUvWhitePixel : aliased ImVec2;  -- cimgui.h:1335
      Font : access ImFont;  -- cimgui.h:1336
      FontSize : aliased float;  -- cimgui.h:1337
      CurveTessellationTol : aliased float;  -- cimgui.h:1338
      CircleSegmentMaxError : aliased float;  -- cimgui.h:1339
      ClipRectFullscreen : aliased ImVec4;  -- cimgui.h:1340
      InitialFlags : aliased ImDrawListFlags;  -- cimgui.h:1341
      ArcFastVtx : aliased ImDrawListSharedData_array1862;  -- cimgui.h:1342
      ArcFastRadiusCutoff : aliased float;  -- cimgui.h:1343
      CircleSegmentCounts : aliased ImDrawListSharedData_array1864;  -- cimgui.h:1344
      TexUvLines : access constant ImVec4;  -- cimgui.h:1345
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1333

   type ImVector_ImDrawListPtr is record
      Size : aliased int;  -- cimgui.h:1347
      Capacity : aliased int;  -- cimgui.h:1347
      Data : System.Address;  -- cimgui.h:1347
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1347

   type ImDrawDataBuilder_array1874 is array (0 .. 1) of aliased ImVector_ImDrawListPtr;
   type ImDrawDataBuilder is record
      Layers : aliased ImDrawDataBuilder_array1874;  -- cimgui.h:1351
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1349

   subtype ImGuiItemFlags_u is unsigned;
   ImGuiItemFlags_None : constant unsigned := 0;
   ImGuiItemFlags_NoTabStop : constant unsigned := 1;
   ImGuiItemFlags_ButtonRepeat : constant unsigned := 2;
   ImGuiItemFlags_Disabled : constant unsigned := 4;
   ImGuiItemFlags_NoNav : constant unsigned := 8;
   ImGuiItemFlags_NoNavDefaultFocus : constant unsigned := 16;
   ImGuiItemFlags_SelectableDontClosePopup : constant unsigned := 32;
   ImGuiItemFlags_MixedValue : constant unsigned := 64;
   ImGuiItemFlags_ReadOnly : constant unsigned := 128;
   ImGuiItemFlags_Inputable : constant unsigned := 256;  -- cimgui.h:1364

   subtype ImGuiItemStatusFlags_u is unsigned;
   ImGuiItemStatusFlags_None : constant unsigned := 0;
   ImGuiItemStatusFlags_HoveredRect : constant unsigned := 1;
   ImGuiItemStatusFlags_HasDisplayRect : constant unsigned := 2;
   ImGuiItemStatusFlags_Edited : constant unsigned := 4;
   ImGuiItemStatusFlags_ToggledSelection : constant unsigned := 8;
   ImGuiItemStatusFlags_ToggledOpen : constant unsigned := 16;
   ImGuiItemStatusFlags_HasDeactivated : constant unsigned := 32;
   ImGuiItemStatusFlags_Deactivated : constant unsigned := 64;
   ImGuiItemStatusFlags_HoveredWindow : constant unsigned := 128;
   ImGuiItemStatusFlags_FocusedByTabbing : constant unsigned := 256;  -- cimgui.h:1376

   subtype ImGuiInputTextFlagsPrivate_u is unsigned;
   ImGuiInputTextFlags_Multiline : constant unsigned := 67108864;
   ImGuiInputTextFlags_NoMarkEdited : constant unsigned := 134217728;
   ImGuiInputTextFlags_MergedItem : constant unsigned := 268435456;  -- cimgui.h:1381

   subtype ImGuiButtonFlagsPrivate_u is unsigned;
   ImGuiButtonFlags_PressedOnClick : constant unsigned := 16;
   ImGuiButtonFlags_PressedOnClickRelease : constant unsigned := 32;
   ImGuiButtonFlags_PressedOnClickReleaseAnywhere : constant unsigned := 64;
   ImGuiButtonFlags_PressedOnRelease : constant unsigned := 128;
   ImGuiButtonFlags_PressedOnDoubleClick : constant unsigned := 256;
   ImGuiButtonFlags_PressedOnDragDropHold : constant unsigned := 512;
   ImGuiButtonFlags_Repeat : constant unsigned := 1024;
   ImGuiButtonFlags_FlattenChildren : constant unsigned := 2048;
   ImGuiButtonFlags_AllowItemOverlap : constant unsigned := 4096;
   ImGuiButtonFlags_DontClosePopups : constant unsigned := 8192;
   ImGuiButtonFlags_AlignTextBaseLine : constant unsigned := 32768;
   ImGuiButtonFlags_NoKeyModifiers : constant unsigned := 65536;
   ImGuiButtonFlags_NoHoldingActiveId : constant unsigned := 131072;
   ImGuiButtonFlags_NoNavFocus : constant unsigned := 262144;
   ImGuiButtonFlags_NoHoveredOnFocus : constant unsigned := 524288;
   ImGuiButtonFlags_PressedOnMask_u : constant unsigned := 1008;
   ImGuiButtonFlags_PressedOnDefault_u : constant unsigned := 32;  -- cimgui.h:1400

   subtype ImGuiComboFlagsPrivate_u is unsigned;
   ImGuiComboFlags_CustomPreview : constant unsigned := 1048576;  -- cimgui.h:1403

   subtype ImGuiSliderFlagsPrivate_u is unsigned;
   ImGuiSliderFlags_Vertical : constant unsigned := 1048576;
   ImGuiSliderFlags_ReadOnly : constant unsigned := 2097152;  -- cimgui.h:1407

   subtype ImGuiSelectableFlagsPrivate_u is unsigned;
   ImGuiSelectableFlags_NoHoldingActiveID : constant unsigned := 1048576;
   ImGuiSelectableFlags_SelectOnNav : constant unsigned := 2097152;
   ImGuiSelectableFlags_SelectOnClick : constant unsigned := 4194304;
   ImGuiSelectableFlags_SelectOnRelease : constant unsigned := 8388608;
   ImGuiSelectableFlags_SpanAvailWidth : constant unsigned := 16777216;
   ImGuiSelectableFlags_DrawHoveredWhenHeld : constant unsigned := 33554432;
   ImGuiSelectableFlags_SetNavIdOnHover : constant unsigned := 67108864;
   ImGuiSelectableFlags_NoPadWithHalfSpacing : constant unsigned := 134217728;  -- cimgui.h:1417

   subtype ImGuiTreeNodeFlagsPrivate_u is unsigned;
   ImGuiTreeNodeFlags_ClipLabelForTrailingButton : constant unsigned := 1048576;  -- cimgui.h:1420

   subtype ImGuiSeparatorFlags_u is unsigned;
   ImGuiSeparatorFlags_None : constant unsigned := 0;
   ImGuiSeparatorFlags_Horizontal : constant unsigned := 1;
   ImGuiSeparatorFlags_Vertical : constant unsigned := 2;
   ImGuiSeparatorFlags_SpanAllColumns : constant unsigned := 4;  -- cimgui.h:1426

   type ImGuiTextFlags_u is
     (ImGuiTextFlags_None,
      ImGuiTextFlags_NoWidthForLargeClippedText)
   with Convention => C;  -- cimgui.h:1430

   type ImGuiTooltipFlags_u is
     (ImGuiTooltipFlags_None,
      ImGuiTooltipFlags_OverridePreviousTooltip)
   with Convention => C;  -- cimgui.h:1434

   type ImGuiLayoutType_u is
     (ImGuiLayoutType_Horizontal,
      ImGuiLayoutType_Vertical)
   with Convention => C;  -- cimgui.h:1438

   type ImGuiLogType is
     (ImGuiLogType_None,
      ImGuiLogType_TTY,
      ImGuiLogType_File,
      ImGuiLogType_Buffer,
      ImGuiLogType_Clipboard)
   with Convention => C;  -- cimgui.h:1445

   subtype ImGuiAxis is int;
   ImGuiAxis_None : constant int := -1;
   ImGuiAxis_X : constant int := 0;
   ImGuiAxis_Y : constant int := 1;  -- cimgui.h:1450

   type ImGuiPlotType is
     (ImGuiPlotType_Lines,
      ImGuiPlotType_Histogram)
   with Convention => C;  -- cimgui.h:1454

   type ImGuiPopupPositionPolicy is
     (ImGuiPopupPositionPolicy_Default,
      ImGuiPopupPositionPolicy_ComboBox,
      ImGuiPopupPositionPolicy_Tooltip)
   with Convention => C;  -- cimgui.h:1459

   type ImGuiDataTypeTempStorage;
   type ImGuiDataTypeTempStorage_array1912 is array (0 .. 7) of aliased ImU8;
   type ImGuiDataTypeTempStorage is record
      Data : aliased ImGuiDataTypeTempStorage_array1912;  -- cimgui.h:1463
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1461

   type ImGuiDataTypeInfo is record
      Size : aliased T_Size;  -- cimgui.h:1467
      Name : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:1468
      PrintFmt : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:1469
      ScanFmt : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:1470
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1465

   subtype ImGuiDataTypePrivate_u is unsigned;
   ImGuiDataType_String : constant unsigned := 11;
   ImGuiDataType_Pointer : constant unsigned := 12;
   ImGuiDataType_ID : constant unsigned := 13;  -- cimgui.h:1476

   type ImGuiColorMod is record
      Col : aliased ImGuiCol;  -- cimgui.h:1479
      BackupValue : aliased ImVec4;  -- cimgui.h:1480
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1477

   type ImGuiStyleMod_array1920 is array (0 .. 1) of aliased int;
   type ImGuiStyleMod_array1921 is array (0 .. 1) of aliased float;
   type anon_54 (discr : unsigned := 0) is record
      case discr is
         when 0 =>
            BackupInt : aliased ImGuiStyleMod_array1920;  -- cimgui.h:1485
         when others =>
            BackupFloat : aliased ImGuiStyleMod_array1921;  -- cimgui.h:1485
      end case;
   end record
   with Convention => C_Pass_By_Copy,
        Unchecked_Union => True;
   type ImGuiStyleMod is record
      VarIdx : aliased ImGuiStyleVar;  -- cimgui.h:1484
      field_2 : aliased anon_54;
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1482

   type ImGuiComboPreviewData;
   type ImGuiComboPreviewData is record
      PreviewRect : aliased ImRect;  -- cimgui.h:1490
      BackupCursorPos : aliased ImVec2;  -- cimgui.h:1491
      BackupCursorMaxPos : aliased ImVec2;  -- cimgui.h:1492
      BackupCursorPosPrevLine : aliased ImVec2;  -- cimgui.h:1493
      BackupPrevLineTextBaseOffset : aliased float;  -- cimgui.h:1494
      BackupLayout : aliased ImGuiLayoutType;  -- cimgui.h:1495
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1488

   type ImGuiGroupData is record
      WindowID : aliased ImGuiID;  -- cimgui.h:1499
      BackupCursorPos : aliased ImVec2;  -- cimgui.h:1500
      BackupCursorMaxPos : aliased ImVec2;  -- cimgui.h:1501
      BackupIndent : aliased ImVec1;  -- cimgui.h:1502
      BackupGroupOffset : aliased ImVec1;  -- cimgui.h:1503
      BackupCurrLineSize : aliased ImVec2;  -- cimgui.h:1504
      BackupCurrLineTextBaseOffset : aliased float;  -- cimgui.h:1505
      BackupActiveIdIsAlive : aliased ImGuiID;  -- cimgui.h:1506
      BackupActiveIdPreviousFrameIsAlive : aliased Extensions.bool;  -- cimgui.h:1507
      BackupHoveredIdIsAlive : aliased Extensions.bool;  -- cimgui.h:1508
      EmitItem : aliased Extensions.bool;  -- cimgui.h:1509
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1497

   type ImGuiMenuColumns_array1928 is array (0 .. 3) of aliased ImU16;
   type ImGuiMenuColumns is record
      TotalWidth : aliased ImU32;  -- cimgui.h:1513
      NextTotalWidth : aliased ImU32;  -- cimgui.h:1514
      Spacing : aliased ImU16;  -- cimgui.h:1515
      OffsetIcon : aliased ImU16;  -- cimgui.h:1516
      OffsetLabel : aliased ImU16;  -- cimgui.h:1517
      OffsetShortcut : aliased ImU16;  -- cimgui.h:1518
      OffsetMark : aliased ImU16;  -- cimgui.h:1519
      Widths : aliased ImGuiMenuColumns_array1928;  -- cimgui.h:1520
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1511

   type ImGuiInputTextState is record
      ID : aliased ImGuiID;  -- cimgui.h:1524
      CurLenW : aliased int;  -- cimgui.h:1525
      CurLenA : aliased int;  -- cimgui.h:1525
      TextW : aliased ImVector_ImWchar;  -- cimgui.h:1526
      TextA : aliased ImVector_char;  -- cimgui.h:1527
      InitialTextA : aliased ImVector_char;  -- cimgui.h:1528
      TextAIsValid : aliased Extensions.bool;  -- cimgui.h:1529
      BufCapacityA : aliased int;  -- cimgui.h:1530
      ScrollX : aliased float;  -- cimgui.h:1531
      Stb : aliased STB_TexteditState;  -- cimgui.h:1532
      CursorAnim : aliased float;  -- cimgui.h:1533
      CursorFollow : aliased Extensions.bool;  -- cimgui.h:1534
      SelectedAllMouseLock : aliased Extensions.bool;  -- cimgui.h:1535
      Edited : aliased Extensions.bool;  -- cimgui.h:1536
      Flags : aliased ImGuiInputTextFlags;  -- cimgui.h:1537
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1522

   type ImGuiPopupData is record
      PopupId : aliased ImGuiID;  -- cimgui.h:1541
      Window : access ImGuiWindow;  -- cimgui.h:1542
      SourceWindow : access ImGuiWindow;  -- cimgui.h:1543
      ParentNavLayer : aliased int;  -- cimgui.h:1544
      OpenFrameCount : aliased int;  -- cimgui.h:1545
      OpenParentId : aliased ImGuiID;  -- cimgui.h:1546
      OpenPopupPos : aliased ImVec2;  -- cimgui.h:1547
      OpenMousePos : aliased ImVec2;  -- cimgui.h:1548
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1539

   subtype ImGuiNextWindowDataFlags_u is unsigned;
   ImGuiNextWindowDataFlags_None : constant unsigned := 0;
   ImGuiNextWindowDataFlags_HasPos : constant unsigned := 1;
   ImGuiNextWindowDataFlags_HasSize : constant unsigned := 2;
   ImGuiNextWindowDataFlags_HasContentSize : constant unsigned := 4;
   ImGuiNextWindowDataFlags_HasCollapsed : constant unsigned := 8;
   ImGuiNextWindowDataFlags_HasSizeConstraint : constant unsigned := 16;
   ImGuiNextWindowDataFlags_HasFocus : constant unsigned := 32;
   ImGuiNextWindowDataFlags_HasBgAlpha : constant unsigned := 64;
   ImGuiNextWindowDataFlags_HasScroll : constant unsigned := 128;  -- cimgui.h:1560

   type ImGuiNextWindowData is record
      Flags : aliased ImGuiNextWindowDataFlags;  -- cimgui.h:1563
      PosCond : aliased ImGuiCond;  -- cimgui.h:1564
      SizeCond : aliased ImGuiCond;  -- cimgui.h:1565
      CollapsedCond : aliased ImGuiCond;  -- cimgui.h:1566
      PosVal : aliased ImVec2;  -- cimgui.h:1567
      PosPivotVal : aliased ImVec2;  -- cimgui.h:1568
      SizeVal : aliased ImVec2;  -- cimgui.h:1569
      ContentSizeVal : aliased ImVec2;  -- cimgui.h:1570
      ScrollVal : aliased ImVec2;  -- cimgui.h:1571
      CollapsedVal : aliased Extensions.bool;  -- cimgui.h:1572
      SizeConstraintRect : aliased ImRect;  -- cimgui.h:1573
      SizeCallback : ImGuiSizeCallback;  -- cimgui.h:1574
      SizeCallbackUserData : System.Address;  -- cimgui.h:1575
      BgAlphaVal : aliased float;  -- cimgui.h:1576
      MenuBarOffsetMinVal : aliased ImVec2;  -- cimgui.h:1577
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1561

   type ImGuiNextItemDataFlags_u is
     (ImGuiNextItemDataFlags_None,
      ImGuiNextItemDataFlags_HasWidth,
      ImGuiNextItemDataFlags_HasOpen)
   with Convention => C;  -- cimgui.h:1583

   type ImGuiNextItemData is record
      Flags : aliased ImGuiNextItemDataFlags;  -- cimgui.h:1586
      Width : aliased float;  -- cimgui.h:1587
      FocusScopeId : aliased ImGuiID;  -- cimgui.h:1588
      OpenCond : aliased ImGuiCond;  -- cimgui.h:1589
      OpenVal : aliased Extensions.bool;  -- cimgui.h:1590
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1584

   type ImGuiLastItemData is record
      ID : aliased ImGuiID;  -- cimgui.h:1594
      InFlags : aliased ImGuiItemFlags;  -- cimgui.h:1595
      StatusFlags : aliased ImGuiItemStatusFlags;  -- cimgui.h:1596
      Rect : aliased ImRect;  -- cimgui.h:1597
      NavRect : aliased ImRect;  -- cimgui.h:1598
      DisplayRect : aliased ImRect;  -- cimgui.h:1599
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1592

   type ImGuiStackSizes is record
      SizeOfIDStack : aliased short;  -- cimgui.h:1603
      SizeOfColorStack : aliased short;  -- cimgui.h:1604
      SizeOfStyleVarStack : aliased short;  -- cimgui.h:1605
      SizeOfFontStack : aliased short;  -- cimgui.h:1606
      SizeOfFocusScopeStack : aliased short;  -- cimgui.h:1607
      SizeOfGroupStack : aliased short;  -- cimgui.h:1608
      SizeOfItemFlagsStack : aliased short;  -- cimgui.h:1609
      SizeOfBeginPopupStack : aliased short;  -- cimgui.h:1610
      SizeOfDisabledStack : aliased short;  -- cimgui.h:1611
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1601

   type ImGuiWindowStackData;
   type ImGuiWindowStackData is record
      Window : access ImGuiWindow;  -- cimgui.h:1616
      ParentLastItemDataBackup : aliased ImGuiLastItemData;  -- cimgui.h:1617
      StackSizesOnBegin : aliased ImGuiStackSizes;  -- cimgui.h:1618
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1614

   type ImGuiShrinkWidthItem;
   type ImGuiShrinkWidthItem is record
      Index : aliased int;  -- cimgui.h:1623
      Width : aliased float;  -- cimgui.h:1624
      InitialWidth : aliased float;  -- cimgui.h:1625
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1621

   type ImGuiPtrOrIndex;
   type ImGuiPtrOrIndex is record
      Ptr : System.Address;  -- cimgui.h:1630
      Index : aliased int;  -- cimgui.h:1631
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1628

   type ImBitArray_ImGuiKey_NamedKey_COUNT_u_lessImGuiKey_NamedKey_BEGIN_array1953 is array (0 .. 4) of aliased ImU32;
   type ImBitArray_ImGuiKey_NamedKey_COUNT_u_lessImGuiKey_NamedKey_BEGIN is record
      Storage : aliased ImBitArray_ImGuiKey_NamedKey_COUNT_u_lessImGuiKey_NamedKey_BEGIN_array1953;  -- cimgui.h:1633
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1633

   subtype ImBitArrayForNamedKeys is ImBitArray_ImGuiKey_NamedKey_COUNT_u_lessImGuiKey_NamedKey_BEGIN;  -- cimgui.h:1635

   subtype ImGuiKeyPrivate_u is unsigned;
   ImGuiKey_LegacyNativeKey_BEGIN : constant unsigned := 0;
   ImGuiKey_LegacyNativeKey_END : constant unsigned := 512;
   ImGuiKey_Gamepad_BEGIN : constant unsigned := 617;
   ImGuiKey_Gamepad_END : constant unsigned := 641;  -- cimgui.h:1641

   type ImGuiInputEventType is
     (ImGuiInputEventType_None,
      ImGuiInputEventType_MousePos,
      ImGuiInputEventType_MouseWheel,
      ImGuiInputEventType_MouseButton,
      ImGuiInputEventType_Key,
      ImGuiInputEventType_Text,
      ImGuiInputEventType_Focus,
      ImGuiInputEventType_COUNT)
   with Convention => C;  -- cimgui.h:1651

   type ImGuiInputSource is
     (ImGuiInputSource_None,
      ImGuiInputSource_Mouse,
      ImGuiInputSource_Keyboard,
      ImGuiInputSource_Gamepad,
      ImGuiInputSource_Clipboard,
      ImGuiInputSource_Nav,
      ImGuiInputSource_COUNT)
   with Convention => C;  -- cimgui.h:1660

   type ImGuiInputEventMousePos;
   type ImGuiInputEventMousePos is record
      PosX : aliased float;  -- cimgui.h:1663
      PosY : aliased float;  -- cimgui.h:1663
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1662

   type ImGuiInputEventMouseWheel;
   type ImGuiInputEventMouseWheel is record
      WheelX : aliased float;  -- cimgui.h:1667
      WheelY : aliased float;  -- cimgui.h:1667
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1666

   type ImGuiInputEventMouseButton;
   type ImGuiInputEventMouseButton is record
      Button : aliased int;  -- cimgui.h:1671
      Down : aliased Extensions.bool;  -- cimgui.h:1671
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1670

   type ImGuiInputEventKey;
   type ImGuiInputEventKey is record
      Key : aliased ImGuiKey;  -- cimgui.h:1675
      Down : aliased Extensions.bool;  -- cimgui.h:1675
      AnalogValue : aliased float;  -- cimgui.h:1675
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1674

   type ImGuiInputEventText;
   type ImGuiInputEventText is record
      Char : aliased unsigned;  -- cimgui.h:1679
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1678

   type ImGuiInputEventAppFocused;
   type ImGuiInputEventAppFocused is record
      Focused : aliased Extensions.bool;  -- cimgui.h:1683
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1682

   type ImGuiInputEvent;
   type anon_60 (discr : unsigned := 0) is record
      case discr is
         when 0 =>
            MousePos : aliased ImGuiInputEventMousePos;  -- cimgui.h:1692
         when 1 =>
            MouseWheel : aliased ImGuiInputEventMouseWheel;  -- cimgui.h:1693
         when 2 =>
            MouseButton : aliased ImGuiInputEventMouseButton;  -- cimgui.h:1694
         when 3 =>
            Key : aliased ImGuiInputEventKey;  -- cimgui.h:1695
         when 4 =>
            Text : aliased ImGuiInputEventText;  -- cimgui.h:1696
         when others =>
            AppFocused : aliased ImGuiInputEventAppFocused;  -- cimgui.h:1697
      end case;
   end record
   with Convention => C_Pass_By_Copy,
        Unchecked_Union => True;
   type ImGuiInputEvent is record
      c_Type : aliased ImGuiInputEventType;  -- cimgui.h:1688
      Source : aliased ImGuiInputSource;  -- cimgui.h:1689
      field_3 : aliased anon_60;
      AddedByTestEngine : aliased Extensions.bool;  -- cimgui.h:1699
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1686

   type ImGuiNavReadMode is
     (ImGuiNavReadMode_Down,
      ImGuiNavReadMode_Pressed,
      ImGuiNavReadMode_Released,
      ImGuiNavReadMode_Repeat,
      ImGuiNavReadMode_RepeatSlow,
      ImGuiNavReadMode_RepeatFast)
   with Convention => C;  -- cimgui.h:1708

   type ImGuiListClipperRange;
   type ImGuiListClipperRange is record
      Min : aliased int;  -- cimgui.h:1712
      Max : aliased int;  -- cimgui.h:1713
      PosToIndexConvert : aliased Extensions.bool;  -- cimgui.h:1714
      PosToIndexOffsetMin : aliased ImS8;  -- cimgui.h:1715
      PosToIndexOffsetMax : aliased ImS8;  -- cimgui.h:1716
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1710

   type ImGuiListClipperData;
   type ImVector_ImGuiListClipperRange is record
      Size : aliased int;  -- cimgui.h:1719
      Capacity : aliased int;  -- cimgui.h:1719
      Data : access ImGuiListClipperRange;  -- cimgui.h:1719
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1719

   type ImGuiListClipperData is record
      ListClipper : access ImGuiListClipper;  -- cimgui.h:1723
      LossynessOffset : aliased float;  -- cimgui.h:1724
      StepNo : aliased int;  -- cimgui.h:1725
      ItemsFrozen : aliased int;  -- cimgui.h:1726
      Ranges : aliased ImVector_ImGuiListClipperRange;  -- cimgui.h:1727
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1721

   subtype ImGuiActivateFlags_u is unsigned;
   ImGuiActivateFlags_None : constant unsigned := 0;
   ImGuiActivateFlags_PreferInput : constant unsigned := 1;
   ImGuiActivateFlags_PreferTweak : constant unsigned := 2;
   ImGuiActivateFlags_TryToPreserveState : constant unsigned := 4;  -- cimgui.h:1734

   subtype ImGuiScrollFlags_u is unsigned;
   ImGuiScrollFlags_None : constant unsigned := 0;
   ImGuiScrollFlags_KeepVisibleEdgeX : constant unsigned := 1;
   ImGuiScrollFlags_KeepVisibleEdgeY : constant unsigned := 2;
   ImGuiScrollFlags_KeepVisibleCenterX : constant unsigned := 4;
   ImGuiScrollFlags_KeepVisibleCenterY : constant unsigned := 8;
   ImGuiScrollFlags_AlwaysCenterX : constant unsigned := 16;
   ImGuiScrollFlags_AlwaysCenterY : constant unsigned := 32;
   ImGuiScrollFlags_NoScrollParent : constant unsigned := 64;
   ImGuiScrollFlags_MaskX_u : constant unsigned := 21;
   ImGuiScrollFlags_MaskY_u : constant unsigned := 42;  -- cimgui.h:1746

   subtype ImGuiNavHighlightFlags_u is unsigned;
   ImGuiNavHighlightFlags_None : constant unsigned := 0;
   ImGuiNavHighlightFlags_TypeDefault : constant unsigned := 1;
   ImGuiNavHighlightFlags_TypeThin : constant unsigned := 2;
   ImGuiNavHighlightFlags_AlwaysDraw : constant unsigned := 4;
   ImGuiNavHighlightFlags_NoRounding : constant unsigned := 8;  -- cimgui.h:1753

   subtype ImGuiNavDirSourceFlags_u is unsigned;
   ImGuiNavDirSourceFlags_None : constant unsigned := 0;
   ImGuiNavDirSourceFlags_RawKeyboard : constant unsigned := 1;
   ImGuiNavDirSourceFlags_Keyboard : constant unsigned := 2;
   ImGuiNavDirSourceFlags_PadDPad : constant unsigned := 4;
   ImGuiNavDirSourceFlags_PadLStick : constant unsigned := 8;  -- cimgui.h:1760

   subtype ImGuiNavMoveFlags_u is unsigned;
   ImGuiNavMoveFlags_None : constant unsigned := 0;
   ImGuiNavMoveFlags_LoopX : constant unsigned := 1;
   ImGuiNavMoveFlags_LoopY : constant unsigned := 2;
   ImGuiNavMoveFlags_WrapX : constant unsigned := 4;
   ImGuiNavMoveFlags_WrapY : constant unsigned := 8;
   ImGuiNavMoveFlags_AllowCurrentNavId : constant unsigned := 16;
   ImGuiNavMoveFlags_AlsoScoreVisibleSet : constant unsigned := 32;
   ImGuiNavMoveFlags_ScrollToEdgeY : constant unsigned := 64;
   ImGuiNavMoveFlags_Forwarded : constant unsigned := 128;
   ImGuiNavMoveFlags_DebugNoResult : constant unsigned := 256;
   ImGuiNavMoveFlags_FocusApi : constant unsigned := 512;
   ImGuiNavMoveFlags_Tabbing : constant unsigned := 1024;
   ImGuiNavMoveFlags_Activate : constant unsigned := 2048;
   ImGuiNavMoveFlags_DontSetNavHighlight : constant unsigned := 4096;  -- cimgui.h:1776

   type ImGuiNavLayer is
     (ImGuiNavLayer_Main,
      ImGuiNavLayer_Menu,
      ImGuiNavLayer_COUNT)
   with Convention => C;  -- cimgui.h:1781

   type ImGuiNavItemData is record
      Window : access ImGuiWindow;  -- cimgui.h:1784
      ID : aliased ImGuiID;  -- cimgui.h:1785
      FocusScopeId : aliased ImGuiID;  -- cimgui.h:1786
      RectRel : aliased ImRect;  -- cimgui.h:1787
      InFlags : aliased ImGuiItemFlags;  -- cimgui.h:1788
      DistBox : aliased float;  -- cimgui.h:1789
      DistCenter : aliased float;  -- cimgui.h:1790
      DistAxial : aliased float;  -- cimgui.h:1791
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1782

   subtype ImGuiOldColumnFlags_u is unsigned;
   ImGuiOldColumnFlags_None : constant unsigned := 0;
   ImGuiOldColumnFlags_NoBorder : constant unsigned := 1;
   ImGuiOldColumnFlags_NoResize : constant unsigned := 2;
   ImGuiOldColumnFlags_NoPreserveWidths : constant unsigned := 4;
   ImGuiOldColumnFlags_NoForceWithinWindow : constant unsigned := 8;
   ImGuiOldColumnFlags_GrowParentContentsSize : constant unsigned := 16;  -- cimgui.h:1800

   type ImGuiOldColumnData is record
      OffsetNorm : aliased float;  -- cimgui.h:1803
      OffsetNormBeforeResize : aliased float;  -- cimgui.h:1804
      Flags : aliased ImGuiOldColumnFlags;  -- cimgui.h:1805
      ClipRect : aliased ImRect;  -- cimgui.h:1806
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1801

   type ImVector_ImGuiOldColumnData is record
      Size : aliased int;  -- cimgui.h:1808
      Capacity : aliased int;  -- cimgui.h:1808
      Data : access ImGuiOldColumnData;  -- cimgui.h:1808
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1808

   type ImGuiOldColumns is record
      ID : aliased ImGuiID;  -- cimgui.h:1812
      Flags : aliased ImGuiOldColumnFlags;  -- cimgui.h:1813
      IsFirstFrame : aliased Extensions.bool;  -- cimgui.h:1814
      IsBeingResized : aliased Extensions.bool;  -- cimgui.h:1815
      Current : aliased int;  -- cimgui.h:1816
      Count : aliased int;  -- cimgui.h:1817
      OffMinX : aliased float;  -- cimgui.h:1818
      OffMaxX : aliased float;  -- cimgui.h:1818
      LineMinY : aliased float;  -- cimgui.h:1819
      LineMaxY : aliased float;  -- cimgui.h:1819
      HostCursorPosY : aliased float;  -- cimgui.h:1820
      HostCursorMaxPosX : aliased float;  -- cimgui.h:1821
      HostInitialClipRect : aliased ImRect;  -- cimgui.h:1822
      HostBackupClipRect : aliased ImRect;  -- cimgui.h:1823
      HostBackupParentWorkRect : aliased ImRect;  -- cimgui.h:1824
      Columns : aliased ImVector_ImGuiOldColumnData;  -- cimgui.h:1825
      Splitter : aliased ImDrawListSplitter;  -- cimgui.h:1826
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1810

   type ImGuiViewportP;
   type ImGuiViewportP_array1920 is array (0 .. 1) of aliased int;
   type ImGuiViewportP_array2025 is array (0 .. 1) of access ImDrawList;
   type ImGuiViewportP is record
      u_ImGuiViewport : aliased ImGuiViewport;  -- cimgui.h:1831
      DrawListsLastFrame : aliased ImGuiViewportP_array1920;  -- cimgui.h:1832
      DrawLists : ImGuiViewportP_array2025;  -- cimgui.h:1833
      DrawDataP : aliased ImDrawData;  -- cimgui.h:1834
      DrawDataBuilder : aliased ImDrawDataBuilder;  -- cimgui.h:1835
      WorkOffsetMin : aliased ImVec2;  -- cimgui.h:1836
      WorkOffsetMax : aliased ImVec2;  -- cimgui.h:1837
      BuildWorkOffsetMin : aliased ImVec2;  -- cimgui.h:1838
      BuildWorkOffsetMax : aliased ImVec2;  -- cimgui.h:1839
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1829

   type ImGuiWindowSettings is record
      ID : aliased ImGuiID;  -- cimgui.h:1843
      Pos : aliased ImVec2ih;  -- cimgui.h:1844
      Size : aliased ImVec2ih;  -- cimgui.h:1845
      Collapsed : aliased Extensions.bool;  -- cimgui.h:1846
      WantApply : aliased Extensions.bool;  -- cimgui.h:1847
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1841

   type ImGuiSettingsHandler is record
      TypeName : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:1851
      TypeHash : aliased ImGuiID;  -- cimgui.h:1852
      ClearAllFn : access procedure (arg1 : access ImGuiContext; arg2 : access ImGuiSettingsHandler);  -- cimgui.h:1853
      ReadInitFn : access procedure (arg1 : access ImGuiContext; arg2 : access ImGuiSettingsHandler);  -- cimgui.h:1854
      ReadOpenFn : access function
           (arg1 : access ImGuiContext;
            arg2 : access ImGuiSettingsHandler;
            arg3 : Interfaces.C.Strings.chars_ptr) return System.Address;  -- cimgui.h:1855
      ReadLineFn : access procedure
           (arg1 : access ImGuiContext;
            arg2 : access ImGuiSettingsHandler;
            arg3 : System.Address;
            arg4 : Interfaces.C.Strings.chars_ptr);  -- cimgui.h:1856
      ApplyAllFn : access procedure (arg1 : access ImGuiContext; arg2 : access ImGuiSettingsHandler);  -- cimgui.h:1857
      WriteAllFn : access procedure
           (arg1 : access ImGuiContext;
            arg2 : access ImGuiSettingsHandler;
            arg3 : access ImGuiTextBuffer);  -- cimgui.h:1858
      UserData : System.Address;  -- cimgui.h:1859
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1849

   subtype ImGuiDebugLogFlags_u is unsigned;
   ImGuiDebugLogFlags_None : constant unsigned := 0;
   ImGuiDebugLogFlags_EventActiveId : constant unsigned := 1;
   ImGuiDebugLogFlags_EventFocus : constant unsigned := 2;
   ImGuiDebugLogFlags_EventPopup : constant unsigned := 4;
   ImGuiDebugLogFlags_EventNav : constant unsigned := 8;
   ImGuiDebugLogFlags_EventIO : constant unsigned := 16;
   ImGuiDebugLogFlags_EventMask_u : constant unsigned := 31;
   ImGuiDebugLogFlags_OutputToTTY : constant unsigned := 1024;  -- cimgui.h:1870

   type ImGuiMetricsConfig is record
      ShowDebugLog : aliased Extensions.bool;  -- cimgui.h:1873
      ShowStackTool : aliased Extensions.bool;  -- cimgui.h:1874
      ShowWindowsRects : aliased Extensions.bool;  -- cimgui.h:1875
      ShowWindowsBeginOrder : aliased Extensions.bool;  -- cimgui.h:1876
      ShowTablesRects : aliased Extensions.bool;  -- cimgui.h:1877
      ShowDrawCmdMesh : aliased Extensions.bool;  -- cimgui.h:1878
      ShowDrawCmdBoundingBoxes : aliased Extensions.bool;  -- cimgui.h:1879
      ShowWindowsRectsType : aliased int;  -- cimgui.h:1880
      ShowTablesRectsType : aliased int;  -- cimgui.h:1881
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1871

   type ImGuiStackLevelInfo;
   subtype ImGuiStackLevelInfo_array2055 is Interfaces.C.char_array (0 .. 56);
   type ImGuiStackLevelInfo is record
      ID : aliased ImGuiID;  -- cimgui.h:1886
      QueryFrameCount : aliased ImS8;  -- cimgui.h:1887
      QuerySuccess : aliased Extensions.bool;  -- cimgui.h:1888
      DataType : aliased signed_char;  -- cimgui.h:1889
      Desc : aliased ImGuiStackLevelInfo_array2055;  -- cimgui.h:1890
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1884

   type ImGuiStackTool;
   type ImVector_ImGuiStackLevelInfo is record
      Size : aliased int;  -- cimgui.h:1893
      Capacity : aliased int;  -- cimgui.h:1893
      Data : access ImGuiStackLevelInfo;  -- cimgui.h:1893
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1893

   type ImGuiStackTool is record
      LastActiveFrame : aliased int;  -- cimgui.h:1897
      StackLevel : aliased int;  -- cimgui.h:1898
      QueryId : aliased ImGuiID;  -- cimgui.h:1899
      Results : aliased ImVector_ImGuiStackLevelInfo;  -- cimgui.h:1900
      CopyToClipboardOnCtrlC : aliased Extensions.bool;  -- cimgui.h:1901
      CopyToClipboardLastTime : aliased float;  -- cimgui.h:1902
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1895

   type ImGuiContextHookCallback is access procedure (arg1 : access ImGuiContext; arg2 : access ImGuiContextHook)
   with Convention => C;  -- cimgui.h:1904

   type ImGuiContextHookType is
     (ImGuiContextHookType_NewFramePre,
      ImGuiContextHookType_NewFramePost,
      ImGuiContextHookType_EndFramePre,
      ImGuiContextHookType_EndFramePost,
      ImGuiContextHookType_RenderPre,
      ImGuiContextHookType_RenderPost,
      ImGuiContextHookType_Shutdown,
      ImGuiContextHookType_PendingRemoval_u)
   with Convention => C;  -- cimgui.h:1905

   type ImGuiContextHook is record
      HookId : aliased ImGuiID;  -- cimgui.h:1908
      c_Type : aliased ImGuiContextHookType;  -- cimgui.h:1909
      Owner : aliased ImGuiID;  -- cimgui.h:1910
      Callback : ImGuiContextHookCallback;  -- cimgui.h:1911
      UserData : System.Address;  -- cimgui.h:1912
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1906

   type ImVector_ImGuiInputEvent is record
      Size : aliased int;  -- cimgui.h:1914
      Capacity : aliased int;  -- cimgui.h:1914
      Data : access ImGuiInputEvent;  -- cimgui.h:1914
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1914

   type ImVector_ImGuiWindowPtr is record
      Size : aliased int;  -- cimgui.h:1916
      Capacity : aliased int;  -- cimgui.h:1916
      Data : System.Address;  -- cimgui.h:1916
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1916

   type ImVector_ImGuiWindowStackData is record
      Size : aliased int;  -- cimgui.h:1918
      Capacity : aliased int;  -- cimgui.h:1918
      Data : access ImGuiWindowStackData;  -- cimgui.h:1918
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1918

   type ImVector_ImGuiColorMod is record
      Size : aliased int;  -- cimgui.h:1920
      Capacity : aliased int;  -- cimgui.h:1920
      Data : access ImGuiColorMod;  -- cimgui.h:1920
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1920

   type ImVector_ImGuiStyleMod is record
      Size : aliased int;  -- cimgui.h:1922
      Capacity : aliased int;  -- cimgui.h:1922
      Data : access ImGuiStyleMod;  -- cimgui.h:1922
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1922

   type ImVector_ImGuiID is record
      Size : aliased int;  -- cimgui.h:1924
      Capacity : aliased int;  -- cimgui.h:1924
      Data : access ImGuiID;  -- cimgui.h:1924
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1924

   type ImVector_ImGuiItemFlags is record
      Size : aliased int;  -- cimgui.h:1926
      Capacity : aliased int;  -- cimgui.h:1926
      Data : access ImGuiItemFlags;  -- cimgui.h:1926
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1926

   type ImVector_ImGuiGroupData is record
      Size : aliased int;  -- cimgui.h:1928
      Capacity : aliased int;  -- cimgui.h:1928
      Data : access ImGuiGroupData;  -- cimgui.h:1928
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1928

   type ImVector_ImGuiPopupData is record
      Size : aliased int;  -- cimgui.h:1930
      Capacity : aliased int;  -- cimgui.h:1930
      Data : access ImGuiPopupData;  -- cimgui.h:1930
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1930

   type ImVector_ImGuiViewportPPtr is record
      Size : aliased int;  -- cimgui.h:1932
      Capacity : aliased int;  -- cimgui.h:1932
      Data : System.Address;  -- cimgui.h:1932
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1932

   type ImVector_unsigned_char is record
      Size : aliased int;  -- cimgui.h:1934
      Capacity : aliased int;  -- cimgui.h:1934
      Data : access unsigned_char;  -- cimgui.h:1934
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1934

   type ImVector_ImGuiListClipperData is record
      Size : aliased int;  -- cimgui.h:1936
      Capacity : aliased int;  -- cimgui.h:1936
      Data : access ImGuiListClipperData;  -- cimgui.h:1936
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1936

   type ImVector_ImGuiTableTempData is record
      Size : aliased int;  -- cimgui.h:1938
      Capacity : aliased int;  -- cimgui.h:1938
      Data : access ImGuiTableTempData;  -- cimgui.h:1938
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1938

   type ImVector_ImGuiTable is record
      Size : aliased int;  -- cimgui.h:1940
      Capacity : aliased int;  -- cimgui.h:1940
      Data : access ImGuiTable;  -- cimgui.h:1940
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1940

   type ImPool_ImGuiTable is record
      Buf : aliased ImVector_ImGuiTable;  -- cimgui.h:1942
      Map : aliased ImGuiStorage;  -- cimgui.h:1942
      FreeIdx : aliased ImPoolIdx;  -- cimgui.h:1942
      AliveCount : aliased ImPoolIdx;  -- cimgui.h:1942
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1942

   type ImVector_ImGuiTabBar is record
      Size : aliased int;  -- cimgui.h:1944
      Capacity : aliased int;  -- cimgui.h:1944
      Data : access ImGuiTabBar;  -- cimgui.h:1944
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1944

   type ImPool_ImGuiTabBar is record
      Buf : aliased ImVector_ImGuiTabBar;  -- cimgui.h:1946
      Map : aliased ImGuiStorage;  -- cimgui.h:1946
      FreeIdx : aliased ImPoolIdx;  -- cimgui.h:1946
      AliveCount : aliased ImPoolIdx;  -- cimgui.h:1946
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1946

   type ImVector_ImGuiPtrOrIndex is record
      Size : aliased int;  -- cimgui.h:1948
      Capacity : aliased int;  -- cimgui.h:1948
      Data : access ImGuiPtrOrIndex;  -- cimgui.h:1948
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1948

   type ImVector_ImGuiShrinkWidthItem is record
      Size : aliased int;  -- cimgui.h:1950
      Capacity : aliased int;  -- cimgui.h:1950
      Data : access ImGuiShrinkWidthItem;  -- cimgui.h:1950
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1950

   type ImVector_ImGuiSettingsHandler is record
      Size : aliased int;  -- cimgui.h:1952
      Capacity : aliased int;  -- cimgui.h:1952
      Data : access ImGuiSettingsHandler;  -- cimgui.h:1952
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1952

   type ImChunkStream_ImGuiWindowSettings is record
      Buf : aliased ImVector_char;  -- cimgui.h:1954
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1954

   type ImChunkStream_ImGuiTableSettings is record
      Buf : aliased ImVector_char;  -- cimgui.h:1956
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1956

   type ImVector_ImGuiContextHook is record
      Size : aliased int;  -- cimgui.h:1958
      Capacity : aliased int;  -- cimgui.h:1958
      Data : access ImGuiContextHook;  -- cimgui.h:1958
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1958

   type ImGuiContext_array2178 is array (0 .. 15) of aliased unsigned_char;
   type ImGuiContext_array2180 is array (0 .. 119) of aliased float;
   type ImGuiContext is record
      Initialized : aliased Extensions.bool;  -- cimgui.h:1962
      FontAtlasOwnedByContext : aliased Extensions.bool;  -- cimgui.h:1963
      IO : aliased ImGuiIO;  -- cimgui.h:1964
      InputEventsQueue : aliased ImVector_ImGuiInputEvent;  -- cimgui.h:1965
      InputEventsTrail : aliased ImVector_ImGuiInputEvent;  -- cimgui.h:1966
      Style : aliased ImGuiStyle;  -- cimgui.h:1967
      Font : access ImFont;  -- cimgui.h:1968
      FontSize : aliased float;  -- cimgui.h:1969
      FontBaseSize : aliased float;  -- cimgui.h:1970
      DrawListSharedData : aliased ImDrawListSharedData;  -- cimgui.h:1971
      Time : aliased double;  -- cimgui.h:1972
      FrameCount : aliased int;  -- cimgui.h:1973
      FrameCountEnded : aliased int;  -- cimgui.h:1974
      FrameCountRendered : aliased int;  -- cimgui.h:1975
      WithinFrameScope : aliased Extensions.bool;  -- cimgui.h:1976
      WithinFrameScopeWithImplicitWindow : aliased Extensions.bool;  -- cimgui.h:1977
      WithinEndChild : aliased Extensions.bool;  -- cimgui.h:1978
      GcCompactAll : aliased Extensions.bool;  -- cimgui.h:1979
      TestEngineHookItems : aliased Extensions.bool;  -- cimgui.h:1980
      TestEngine : System.Address;  -- cimgui.h:1981
      Windows : aliased ImVector_ImGuiWindowPtr;  -- cimgui.h:1982
      WindowsFocusOrder : aliased ImVector_ImGuiWindowPtr;  -- cimgui.h:1983
      WindowsTempSortBuffer : aliased ImVector_ImGuiWindowPtr;  -- cimgui.h:1984
      CurrentWindowStack : aliased ImVector_ImGuiWindowStackData;  -- cimgui.h:1985
      WindowsById : aliased ImGuiStorage;  -- cimgui.h:1986
      WindowsActiveCount : aliased int;  -- cimgui.h:1987
      WindowsHoverPadding : aliased ImVec2;  -- cimgui.h:1988
      CurrentWindow : access ImGuiWindow;  -- cimgui.h:1989
      HoveredWindow : access ImGuiWindow;  -- cimgui.h:1990
      HoveredWindowUnderMovingWindow : access ImGuiWindow;  -- cimgui.h:1991
      MovingWindow : access ImGuiWindow;  -- cimgui.h:1992
      WheelingWindow : access ImGuiWindow;  -- cimgui.h:1993
      WheelingWindowRefMousePos : aliased ImVec2;  -- cimgui.h:1994
      WheelingWindowTimer : aliased float;  -- cimgui.h:1995
      DebugHookIdInfo : aliased ImGuiID;  -- cimgui.h:1996
      HoveredId : aliased ImGuiID;  -- cimgui.h:1997
      HoveredIdPreviousFrame : aliased ImGuiID;  -- cimgui.h:1998
      HoveredIdAllowOverlap : aliased Extensions.bool;  -- cimgui.h:1999
      HoveredIdUsingMouseWheel : aliased Extensions.bool;  -- cimgui.h:2000
      HoveredIdPreviousFrameUsingMouseWheel : aliased Extensions.bool;  -- cimgui.h:2001
      HoveredIdDisabled : aliased Extensions.bool;  -- cimgui.h:2002
      HoveredIdTimer : aliased float;  -- cimgui.h:2003
      HoveredIdNotActiveTimer : aliased float;  -- cimgui.h:2004
      ActiveId : aliased ImGuiID;  -- cimgui.h:2005
      ActiveIdIsAlive : aliased ImGuiID;  -- cimgui.h:2006
      ActiveIdTimer : aliased float;  -- cimgui.h:2007
      ActiveIdIsJustActivated : aliased Extensions.bool;  -- cimgui.h:2008
      ActiveIdAllowOverlap : aliased Extensions.bool;  -- cimgui.h:2009
      ActiveIdNoClearOnFocusLoss : aliased Extensions.bool;  -- cimgui.h:2010
      ActiveIdHasBeenPressedBefore : aliased Extensions.bool;  -- cimgui.h:2011
      ActiveIdHasBeenEditedBefore : aliased Extensions.bool;  -- cimgui.h:2012
      ActiveIdHasBeenEditedThisFrame : aliased Extensions.bool;  -- cimgui.h:2013
      ActiveIdClickOffset : aliased ImVec2;  -- cimgui.h:2014
      ActiveIdWindow : access ImGuiWindow;  -- cimgui.h:2015
      ActiveIdSource : aliased ImGuiInputSource;  -- cimgui.h:2016
      ActiveIdMouseButton : aliased int;  -- cimgui.h:2017
      ActiveIdPreviousFrame : aliased ImGuiID;  -- cimgui.h:2018
      ActiveIdPreviousFrameIsAlive : aliased Extensions.bool;  -- cimgui.h:2019
      ActiveIdPreviousFrameHasBeenEditedBefore : aliased Extensions.bool;  -- cimgui.h:2020
      ActiveIdPreviousFrameWindow : access ImGuiWindow;  -- cimgui.h:2021
      LastActiveId : aliased ImGuiID;  -- cimgui.h:2022
      LastActiveIdTimer : aliased float;  -- cimgui.h:2023
      ActiveIdUsingMouseWheel : aliased Extensions.bool;  -- cimgui.h:2024
      ActiveIdUsingNavDirMask : aliased ImU32;  -- cimgui.h:2025
      ActiveIdUsingNavInputMask : aliased ImU32;  -- cimgui.h:2026
      ActiveIdUsingKeyInputMask : aliased ImBitArrayForNamedKeys;  -- cimgui.h:2027
      CurrentItemFlags : aliased ImGuiItemFlags;  -- cimgui.h:2028
      NextItemData : aliased ImGuiNextItemData;  -- cimgui.h:2029
      LastItemData : aliased ImGuiLastItemData;  -- cimgui.h:2030
      NextWindowData : aliased ImGuiNextWindowData;  -- cimgui.h:2031
      ColorStack : aliased ImVector_ImGuiColorMod;  -- cimgui.h:2032
      StyleVarStack : aliased ImVector_ImGuiStyleMod;  -- cimgui.h:2033
      FontStack : aliased ImVector_ImFontPtr;  -- cimgui.h:2034
      FocusScopeStack : aliased ImVector_ImGuiID;  -- cimgui.h:2035
      ItemFlagsStack : aliased ImVector_ImGuiItemFlags;  -- cimgui.h:2036
      GroupStack : aliased ImVector_ImGuiGroupData;  -- cimgui.h:2037
      OpenPopupStack : aliased ImVector_ImGuiPopupData;  -- cimgui.h:2038
      BeginPopupStack : aliased ImVector_ImGuiPopupData;  -- cimgui.h:2039
      BeginMenuCount : aliased int;  -- cimgui.h:2040
      Viewports : aliased ImVector_ImGuiViewportPPtr;  -- cimgui.h:2041
      NavWindow : access ImGuiWindow;  -- cimgui.h:2042
      NavId : aliased ImGuiID;  -- cimgui.h:2043
      NavFocusScopeId : aliased ImGuiID;  -- cimgui.h:2044
      NavActivateId : aliased ImGuiID;  -- cimgui.h:2045
      NavActivateDownId : aliased ImGuiID;  -- cimgui.h:2046
      NavActivatePressedId : aliased ImGuiID;  -- cimgui.h:2047
      NavActivateInputId : aliased ImGuiID;  -- cimgui.h:2048
      NavActivateFlags : aliased ImGuiActivateFlags;  -- cimgui.h:2049
      NavJustMovedToId : aliased ImGuiID;  -- cimgui.h:2050
      NavJustMovedToFocusScopeId : aliased ImGuiID;  -- cimgui.h:2051
      NavJustMovedToKeyMods : aliased ImGuiModFlags;  -- cimgui.h:2052
      NavNextActivateId : aliased ImGuiID;  -- cimgui.h:2053
      NavNextActivateFlags : aliased ImGuiActivateFlags;  -- cimgui.h:2054
      NavInputSource : aliased ImGuiInputSource;  -- cimgui.h:2055
      NavLayer : aliased ImGuiNavLayer;  -- cimgui.h:2056
      NavIdIsAlive : aliased Extensions.bool;  -- cimgui.h:2057
      NavMousePosDirty : aliased Extensions.bool;  -- cimgui.h:2058
      NavDisableHighlight : aliased Extensions.bool;  -- cimgui.h:2059
      NavDisableMouseHover : aliased Extensions.bool;  -- cimgui.h:2060
      NavAnyRequest : aliased Extensions.bool;  -- cimgui.h:2061
      NavInitRequest : aliased Extensions.bool;  -- cimgui.h:2062
      NavInitRequestFromMove : aliased Extensions.bool;  -- cimgui.h:2063
      NavInitResultId : aliased ImGuiID;  -- cimgui.h:2064
      NavInitResultRectRel : aliased ImRect;  -- cimgui.h:2065
      NavMoveSubmitted : aliased Extensions.bool;  -- cimgui.h:2066
      NavMoveScoringItems : aliased Extensions.bool;  -- cimgui.h:2067
      NavMoveForwardToNextFrame : aliased Extensions.bool;  -- cimgui.h:2068
      NavMoveFlags : aliased ImGuiNavMoveFlags;  -- cimgui.h:2069
      NavMoveScrollFlags : aliased ImGuiScrollFlags;  -- cimgui.h:2070
      NavMoveKeyMods : aliased ImGuiModFlags;  -- cimgui.h:2071
      NavMoveDir : aliased ImGuiDir;  -- cimgui.h:2072
      NavMoveDirForDebug : aliased ImGuiDir;  -- cimgui.h:2073
      NavMoveClipDir : aliased ImGuiDir;  -- cimgui.h:2074
      NavScoringRect : aliased ImRect;  -- cimgui.h:2075
      NavScoringNoClipRect : aliased ImRect;  -- cimgui.h:2076
      NavScoringDebugCount : aliased int;  -- cimgui.h:2077
      NavTabbingDir : aliased int;  -- cimgui.h:2078
      NavTabbingCounter : aliased int;  -- cimgui.h:2079
      NavMoveResultLocal : aliased ImGuiNavItemData;  -- cimgui.h:2080
      NavMoveResultLocalVisible : aliased ImGuiNavItemData;  -- cimgui.h:2081
      NavMoveResultOther : aliased ImGuiNavItemData;  -- cimgui.h:2082
      NavTabbingResultFirst : aliased ImGuiNavItemData;  -- cimgui.h:2083
      NavWindowingTarget : access ImGuiWindow;  -- cimgui.h:2084
      NavWindowingTargetAnim : access ImGuiWindow;  -- cimgui.h:2085
      NavWindowingListWindow : access ImGuiWindow;  -- cimgui.h:2086
      NavWindowingTimer : aliased float;  -- cimgui.h:2087
      NavWindowingHighlightAlpha : aliased float;  -- cimgui.h:2088
      NavWindowingToggleLayer : aliased Extensions.bool;  -- cimgui.h:2089
      DimBgRatio : aliased float;  -- cimgui.h:2090
      MouseCursor : aliased ImGuiMouseCursor;  -- cimgui.h:2091
      DragDropActive : aliased Extensions.bool;  -- cimgui.h:2092
      DragDropWithinSource : aliased Extensions.bool;  -- cimgui.h:2093
      DragDropWithinTarget : aliased Extensions.bool;  -- cimgui.h:2094
      DragDropSourceFlags : aliased ImGuiDragDropFlags;  -- cimgui.h:2095
      DragDropSourceFrameCount : aliased int;  -- cimgui.h:2096
      DragDropMouseButton : aliased int;  -- cimgui.h:2097
      DragDropPayload : aliased ImGuiPayload;  -- cimgui.h:2098
      DragDropTargetRect : aliased ImRect;  -- cimgui.h:2099
      DragDropTargetId : aliased ImGuiID;  -- cimgui.h:2100
      DragDropAcceptFlags : aliased ImGuiDragDropFlags;  -- cimgui.h:2101
      DragDropAcceptIdCurrRectSurface : aliased float;  -- cimgui.h:2102
      DragDropAcceptIdCurr : aliased ImGuiID;  -- cimgui.h:2103
      DragDropAcceptIdPrev : aliased ImGuiID;  -- cimgui.h:2104
      DragDropAcceptFrameCount : aliased int;  -- cimgui.h:2105
      DragDropHoldJustPressedId : aliased ImGuiID;  -- cimgui.h:2106
      DragDropPayloadBufHeap : aliased ImVector_unsigned_char;  -- cimgui.h:2107
      DragDropPayloadBufLocal : aliased ImGuiContext_array2178;  -- cimgui.h:2108
      ClipperTempDataStacked : aliased int;  -- cimgui.h:2109
      ClipperTempData : aliased ImVector_ImGuiListClipperData;  -- cimgui.h:2110
      CurrentTable : access ImGuiTable;  -- cimgui.h:2111
      TablesTempDataStacked : aliased int;  -- cimgui.h:2112
      TablesTempData : aliased ImVector_ImGuiTableTempData;  -- cimgui.h:2113
      Tables : aliased ImPool_ImGuiTable;  -- cimgui.h:2114
      TablesLastTimeActive : aliased ImVector_float;  -- cimgui.h:2115
      DrawChannelsTempMergeBuffer : aliased ImVector_ImDrawChannel;  -- cimgui.h:2116
      CurrentTabBar : access ImGuiTabBar;  -- cimgui.h:2117
      TabBars : aliased ImPool_ImGuiTabBar;  -- cimgui.h:2118
      CurrentTabBarStack : aliased ImVector_ImGuiPtrOrIndex;  -- cimgui.h:2119
      ShrinkWidthBuffer : aliased ImVector_ImGuiShrinkWidthItem;  -- cimgui.h:2120
      MouseLastValidPos : aliased ImVec2;  -- cimgui.h:2121
      InputTextState : aliased ImGuiInputTextState;  -- cimgui.h:2122
      InputTextPasswordFont : aliased ImFont;  -- cimgui.h:2123
      TempInputId : aliased ImGuiID;  -- cimgui.h:2124
      ColorEditOptions : aliased ImGuiColorEditFlags;  -- cimgui.h:2125
      ColorEditLastHue : aliased float;  -- cimgui.h:2126
      ColorEditLastSat : aliased float;  -- cimgui.h:2127
      ColorEditLastColor : aliased ImU32;  -- cimgui.h:2128
      ColorPickerRef : aliased ImVec4;  -- cimgui.h:2129
      ComboPreviewData : aliased ImGuiComboPreviewData;  -- cimgui.h:2130
      SliderGrabClickOffset : aliased float;  -- cimgui.h:2131
      SliderCurrentAccum : aliased float;  -- cimgui.h:2132
      SliderCurrentAccumDirty : aliased Extensions.bool;  -- cimgui.h:2133
      DragCurrentAccumDirty : aliased Extensions.bool;  -- cimgui.h:2134
      DragCurrentAccum : aliased float;  -- cimgui.h:2135
      DragSpeedDefaultRatio : aliased float;  -- cimgui.h:2136
      ScrollbarClickDeltaToGrabCenter : aliased float;  -- cimgui.h:2137
      DisabledAlphaBackup : aliased float;  -- cimgui.h:2138
      DisabledStackSize : aliased short;  -- cimgui.h:2139
      TooltipOverrideCount : aliased short;  -- cimgui.h:2140
      TooltipSlowDelay : aliased float;  -- cimgui.h:2141
      ClipboardHandlerData : aliased ImVector_char;  -- cimgui.h:2142
      MenusIdSubmittedThisFrame : aliased ImVector_ImGuiID;  -- cimgui.h:2143
      PlatformImeData : aliased ImGuiPlatformImeData;  -- cimgui.h:2144
      PlatformImeDataPrev : aliased ImGuiPlatformImeData;  -- cimgui.h:2145
      PlatformLocaleDecimalPoint : aliased char;  -- cimgui.h:2146
      SettingsLoaded : aliased Extensions.bool;  -- cimgui.h:2147
      SettingsDirtyTimer : aliased float;  -- cimgui.h:2148
      SettingsIniData : aliased ImGuiTextBuffer;  -- cimgui.h:2149
      SettingsHandlers : aliased ImVector_ImGuiSettingsHandler;  -- cimgui.h:2150
      SettingsWindows : aliased ImChunkStream_ImGuiWindowSettings;  -- cimgui.h:2151
      SettingsTables : aliased ImChunkStream_ImGuiTableSettings;  -- cimgui.h:2152
      Hooks : aliased ImVector_ImGuiContextHook;  -- cimgui.h:2153
      HookIdNext : aliased ImGuiID;  -- cimgui.h:2154
      LogEnabled : aliased Extensions.bool;  -- cimgui.h:2155
      LogType : aliased ImGuiLogType;  -- cimgui.h:2156
      LogFile : ImFileHandle;  -- cimgui.h:2157
      LogBuffer : aliased ImGuiTextBuffer;  -- cimgui.h:2158
      LogNextPrefix : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:2159
      LogNextSuffix : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:2160
      LogLinePosY : aliased float;  -- cimgui.h:2161
      LogLineFirstItem : aliased Extensions.bool;  -- cimgui.h:2162
      LogDepthRef : aliased int;  -- cimgui.h:2163
      LogDepthToExpand : aliased int;  -- cimgui.h:2164
      LogDepthToExpandDefault : aliased int;  -- cimgui.h:2165
      DebugLogFlags : aliased ImGuiDebugLogFlags;  -- cimgui.h:2166
      DebugLogBuf : aliased ImGuiTextBuffer;  -- cimgui.h:2167
      DebugItemPickerActive : aliased Extensions.bool;  -- cimgui.h:2168
      DebugItemPickerBreakId : aliased ImGuiID;  -- cimgui.h:2169
      DebugMetricsConfig : aliased ImGuiMetricsConfig;  -- cimgui.h:2170
      DebugStackTool : aliased ImGuiStackTool;  -- cimgui.h:2171
      FramerateSecPerFrame : aliased ImGuiContext_array2180;  -- cimgui.h:2172
      FramerateSecPerFrameIdx : aliased int;  -- cimgui.h:2173
      FramerateSecPerFrameCount : aliased int;  -- cimgui.h:2174
      FramerateSecPerFrameAccum : aliased float;  -- cimgui.h:2175
      WantCaptureMouseNextFrame : aliased int;  -- cimgui.h:2176
      WantCaptureKeyboardNextFrame : aliased int;  -- cimgui.h:2177
      WantTextInputNextFrame : aliased int;  -- cimgui.h:2178
      TempBuffer : aliased ImVector_char;  -- cimgui.h:2179
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:1960

   type ImGuiWindowTempData is record
      CursorPos : aliased ImVec2;  -- cimgui.h:2183
      CursorPosPrevLine : aliased ImVec2;  -- cimgui.h:2184
      CursorStartPos : aliased ImVec2;  -- cimgui.h:2185
      CursorMaxPos : aliased ImVec2;  -- cimgui.h:2186
      IdealMaxPos : aliased ImVec2;  -- cimgui.h:2187
      CurrLineSize : aliased ImVec2;  -- cimgui.h:2188
      PrevLineSize : aliased ImVec2;  -- cimgui.h:2189
      CurrLineTextBaseOffset : aliased float;  -- cimgui.h:2190
      PrevLineTextBaseOffset : aliased float;  -- cimgui.h:2191
      IsSameLine : aliased Extensions.bool;  -- cimgui.h:2192
      Indent : aliased ImVec1;  -- cimgui.h:2193
      ColumnsOffset : aliased ImVec1;  -- cimgui.h:2194
      GroupOffset : aliased ImVec1;  -- cimgui.h:2195
      CursorStartPosLossyness : aliased ImVec2;  -- cimgui.h:2196
      NavLayerCurrent : aliased ImGuiNavLayer;  -- cimgui.h:2197
      NavLayersActiveMask : aliased short;  -- cimgui.h:2198
      NavLayersActiveMaskNext : aliased short;  -- cimgui.h:2199
      NavFocusScopeIdCurrent : aliased ImGuiID;  -- cimgui.h:2200
      NavHideHighlightOneFrame : aliased Extensions.bool;  -- cimgui.h:2201
      NavHasScroll : aliased Extensions.bool;  -- cimgui.h:2202
      MenuBarAppending : aliased Extensions.bool;  -- cimgui.h:2203
      MenuBarOffset : aliased ImVec2;  -- cimgui.h:2204
      MenuColumns : aliased ImGuiMenuColumns;  -- cimgui.h:2205
      TreeDepth : aliased int;  -- cimgui.h:2206
      TreeJumpToParentOnPopMask : aliased ImU32;  -- cimgui.h:2207
      ChildWindows : aliased ImVector_ImGuiWindowPtr;  -- cimgui.h:2208
      StateStorage : access ImGuiStorage;  -- cimgui.h:2209
      CurrentColumns : access ImGuiOldColumns;  -- cimgui.h:2210
      CurrentTableIdx : aliased int;  -- cimgui.h:2211
      LayoutType : aliased ImGuiLayoutType;  -- cimgui.h:2212
      ParentLayoutType : aliased ImGuiLayoutType;  -- cimgui.h:2213
      ItemWidth : aliased float;  -- cimgui.h:2214
      TextWrapPos : aliased float;  -- cimgui.h:2215
      ItemWidthStack : aliased ImVector_float;  -- cimgui.h:2216
      TextWrapPosStack : aliased ImVector_float;  -- cimgui.h:2217
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2181

   type ImVector_ImGuiOldColumns is record
      Size : aliased int;  -- cimgui.h:2219
      Capacity : aliased int;  -- cimgui.h:2219
      Data : access ImGuiOldColumns;  -- cimgui.h:2219
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2219

   type ImGuiWindow_array2191 is array (0 .. 1) of aliased ImGuiID;
   type ImGuiWindow_array2193 is array (0 .. 1) of aliased ImRect;
   type ImGuiWindow is record
      Name : Interfaces.C.Strings.chars_ptr;  -- cimgui.h:2223
      ID : aliased ImGuiID;  -- cimgui.h:2224
      Flags : aliased ImGuiWindowFlags;  -- cimgui.h:2225
      Viewport : access ImGuiViewportP;  -- cimgui.h:2226
      Pos : aliased ImVec2;  -- cimgui.h:2227
      Size : aliased ImVec2;  -- cimgui.h:2228
      SizeFull : aliased ImVec2;  -- cimgui.h:2229
      ContentSize : aliased ImVec2;  -- cimgui.h:2230
      ContentSizeIdeal : aliased ImVec2;  -- cimgui.h:2231
      ContentSizeExplicit : aliased ImVec2;  -- cimgui.h:2232
      WindowPadding : aliased ImVec2;  -- cimgui.h:2233
      WindowRounding : aliased float;  -- cimgui.h:2234
      WindowBorderSize : aliased float;  -- cimgui.h:2235
      NameBufLen : aliased int;  -- cimgui.h:2236
      MoveId : aliased ImGuiID;  -- cimgui.h:2237
      ChildId : aliased ImGuiID;  -- cimgui.h:2238
      Scroll : aliased ImVec2;  -- cimgui.h:2239
      ScrollMax : aliased ImVec2;  -- cimgui.h:2240
      ScrollTarget : aliased ImVec2;  -- cimgui.h:2241
      ScrollTargetCenterRatio : aliased ImVec2;  -- cimgui.h:2242
      ScrollTargetEdgeSnapDist : aliased ImVec2;  -- cimgui.h:2243
      ScrollbarSizes : aliased ImVec2;  -- cimgui.h:2244
      ScrollbarX : aliased Extensions.bool;  -- cimgui.h:2245
      ScrollbarY : aliased Extensions.bool;  -- cimgui.h:2245
      Active : aliased Extensions.bool;  -- cimgui.h:2246
      WasActive : aliased Extensions.bool;  -- cimgui.h:2247
      WriteAccessed : aliased Extensions.bool;  -- cimgui.h:2248
      Collapsed : aliased Extensions.bool;  -- cimgui.h:2249
      WantCollapseToggle : aliased Extensions.bool;  -- cimgui.h:2250
      SkipItems : aliased Extensions.bool;  -- cimgui.h:2251
      Appearing : aliased Extensions.bool;  -- cimgui.h:2252
      Hidden : aliased Extensions.bool;  -- cimgui.h:2253
      IsFallbackWindow : aliased Extensions.bool;  -- cimgui.h:2254
      IsExplicitChild : aliased Extensions.bool;  -- cimgui.h:2255
      HasCloseButton : aliased Extensions.bool;  -- cimgui.h:2256
      ResizeBorderHeld : aliased signed_char;  -- cimgui.h:2257
      BeginCount : aliased short;  -- cimgui.h:2258
      BeginOrderWithinParent : aliased short;  -- cimgui.h:2259
      BeginOrderWithinContext : aliased short;  -- cimgui.h:2260
      FocusOrder : aliased short;  -- cimgui.h:2261
      PopupId : aliased ImGuiID;  -- cimgui.h:2262
      AutoFitFramesX : aliased ImS8;  -- cimgui.h:2263
      AutoFitFramesY : aliased ImS8;  -- cimgui.h:2263
      AutoFitChildAxises : aliased ImS8;  -- cimgui.h:2264
      AutoFitOnlyGrows : aliased Extensions.bool;  -- cimgui.h:2265
      AutoPosLastDirection : aliased ImGuiDir;  -- cimgui.h:2266
      HiddenFramesCanSkipItems : aliased ImS8;  -- cimgui.h:2267
      HiddenFramesCannotSkipItems : aliased ImS8;  -- cimgui.h:2268
      HiddenFramesForRenderOnly : aliased ImS8;  -- cimgui.h:2269
      DisableInputsFrames : aliased ImS8;  -- cimgui.h:2270
      SetWindowPosAllowFlags : aliased signed_char;  -- cimgui.h:2271
      SetWindowSizeAllowFlags : aliased signed_char;  -- cimgui.h:2272
      SetWindowCollapsedAllowFlags : aliased signed_char;  -- cimgui.h:2273
      SetWindowPosVal : aliased ImVec2;  -- cimgui.h:2274
      SetWindowPosPivot : aliased ImVec2;  -- cimgui.h:2275
      IDStack : aliased ImVector_ImGuiID;  -- cimgui.h:2276
      DC : aliased ImGuiWindowTempData;  -- cimgui.h:2277
      OuterRectClipped : aliased ImRect;  -- cimgui.h:2278
      InnerRect : aliased ImRect;  -- cimgui.h:2279
      InnerClipRect : aliased ImRect;  -- cimgui.h:2280
      WorkRect : aliased ImRect;  -- cimgui.h:2281
      ParentWorkRect : aliased ImRect;  -- cimgui.h:2282
      ClipRect : aliased ImRect;  -- cimgui.h:2283
      ContentRegionRect : aliased ImRect;  -- cimgui.h:2284
      HitTestHoleSize : aliased ImVec2ih;  -- cimgui.h:2285
      HitTestHoleOffset : aliased ImVec2ih;  -- cimgui.h:2286
      LastFrameActive : aliased int;  -- cimgui.h:2287
      LastTimeActive : aliased float;  -- cimgui.h:2288
      ItemWidthDefault : aliased float;  -- cimgui.h:2289
      StateStorage : aliased ImGuiStorage;  -- cimgui.h:2290
      ColumnsStorage : aliased ImVector_ImGuiOldColumns;  -- cimgui.h:2291
      FontWindowScale : aliased float;  -- cimgui.h:2292
      SettingsOffset : aliased int;  -- cimgui.h:2293
      DrawList : access ImDrawList;  -- cimgui.h:2294
      DrawListInst : aliased ImDrawList;  -- cimgui.h:2295
      ParentWindow : access ImGuiWindow;  -- cimgui.h:2296
      ParentWindowInBeginStack : access ImGuiWindow;  -- cimgui.h:2297
      RootWindow : access ImGuiWindow;  -- cimgui.h:2298
      RootWindowPopupTree : access ImGuiWindow;  -- cimgui.h:2299
      RootWindowForTitleBarHighlight : access ImGuiWindow;  -- cimgui.h:2300
      RootWindowForNav : access ImGuiWindow;  -- cimgui.h:2301
      NavLastChildNavWindow : access ImGuiWindow;  -- cimgui.h:2302
      NavLastIds : aliased ImGuiWindow_array2191;  -- cimgui.h:2303
      NavRectRel : aliased ImGuiWindow_array2193;  -- cimgui.h:2304
      MemoryDrawListIdxCapacity : aliased int;  -- cimgui.h:2305
      MemoryDrawListVtxCapacity : aliased int;  -- cimgui.h:2306
      MemoryCompacted : aliased Extensions.bool;  -- cimgui.h:2307
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2221

   subtype ImGuiTabBarFlagsPrivate_u is unsigned;
   ImGuiTabBarFlags_DockNode : constant unsigned := 1048576;
   ImGuiTabBarFlags_IsFocused : constant unsigned := 2097152;
   ImGuiTabBarFlags_SaveSettings : constant unsigned := 4194304;  -- cimgui.h:2313

   subtype ImGuiTabItemFlagsPrivate_u is unsigned;
   ImGuiTabItemFlags_SectionMask_u : constant unsigned := 192;
   ImGuiTabItemFlags_NoCloseButton : constant unsigned := 1048576;
   ImGuiTabItemFlags_Button : constant unsigned := 2097152;  -- cimgui.h:2318

   type ImGuiTabItem is record
      ID : aliased ImGuiID;  -- cimgui.h:2321
      Flags : aliased ImGuiTabItemFlags;  -- cimgui.h:2322
      LastFrameVisible : aliased int;  -- cimgui.h:2323
      LastFrameSelected : aliased int;  -- cimgui.h:2324
      Offset : aliased float;  -- cimgui.h:2325
      Width : aliased float;  -- cimgui.h:2326
      ContentWidth : aliased float;  -- cimgui.h:2327
      RequestedWidth : aliased float;  -- cimgui.h:2328
      NameOffset : aliased ImS32;  -- cimgui.h:2329
      BeginOrder : aliased ImS16;  -- cimgui.h:2330
      IndexDuringLayout : aliased ImS16;  -- cimgui.h:2331
      WantClose : aliased Extensions.bool;  -- cimgui.h:2332
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2319

   type ImVector_ImGuiTabItem is record
      Size : aliased int;  -- cimgui.h:2334
      Capacity : aliased int;  -- cimgui.h:2334
      Data : access ImGuiTabItem;  -- cimgui.h:2334
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2334

   type ImGuiTabBar is record
      Tabs : aliased ImVector_ImGuiTabItem;  -- cimgui.h:2338
      Flags : aliased ImGuiTabBarFlags;  -- cimgui.h:2339
      ID : aliased ImGuiID;  -- cimgui.h:2340
      SelectedTabId : aliased ImGuiID;  -- cimgui.h:2341
      NextSelectedTabId : aliased ImGuiID;  -- cimgui.h:2342
      VisibleTabId : aliased ImGuiID;  -- cimgui.h:2343
      CurrFrameVisible : aliased int;  -- cimgui.h:2344
      PrevFrameVisible : aliased int;  -- cimgui.h:2345
      BarRect : aliased ImRect;  -- cimgui.h:2346
      CurrTabsContentsHeight : aliased float;  -- cimgui.h:2347
      PrevTabsContentsHeight : aliased float;  -- cimgui.h:2348
      WidthAllTabs : aliased float;  -- cimgui.h:2349
      WidthAllTabsIdeal : aliased float;  -- cimgui.h:2350
      ScrollingAnim : aliased float;  -- cimgui.h:2351
      ScrollingTarget : aliased float;  -- cimgui.h:2352
      ScrollingTargetDistToVisibility : aliased float;  -- cimgui.h:2353
      ScrollingSpeed : aliased float;  -- cimgui.h:2354
      ScrollingRectMinX : aliased float;  -- cimgui.h:2355
      ScrollingRectMaxX : aliased float;  -- cimgui.h:2356
      ReorderRequestTabId : aliased ImGuiID;  -- cimgui.h:2357
      ReorderRequestOffset : aliased ImS16;  -- cimgui.h:2358
      BeginCount : aliased ImS8;  -- cimgui.h:2359
      WantLayout : aliased Extensions.bool;  -- cimgui.h:2360
      VisibleTabWasSubmitted : aliased Extensions.bool;  -- cimgui.h:2361
      TabsAddedNew : aliased Extensions.bool;  -- cimgui.h:2362
      TabsActiveCount : aliased ImS16;  -- cimgui.h:2363
      LastTabItemIdx : aliased ImS16;  -- cimgui.h:2364
      ItemSpacingY : aliased float;  -- cimgui.h:2365
      FramePadding : aliased ImVec2;  -- cimgui.h:2366
      BackupCursorPos : aliased ImVec2;  -- cimgui.h:2367
      TabsNames : aliased ImGuiTextBuffer;  -- cimgui.h:2368
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2336

   subtype ImGuiTableColumnIdx is ImS8;  -- cimgui.h:2370

   subtype ImGuiTableDrawChannelIdx is ImU8;  -- cimgui.h:2371

   type ImGuiTableColumn is record
      Flags : aliased ImGuiTableColumnFlags;  -- cimgui.h:2374
      WidthGiven : aliased float;  -- cimgui.h:2375
      MinX : aliased float;  -- cimgui.h:2376
      MaxX : aliased float;  -- cimgui.h:2377
      WidthRequest : aliased float;  -- cimgui.h:2378
      WidthAuto : aliased float;  -- cimgui.h:2379
      StretchWeight : aliased float;  -- cimgui.h:2380
      InitStretchWeightOrWidth : aliased float;  -- cimgui.h:2381
      ClipRect : aliased ImRect;  -- cimgui.h:2382
      UserID : aliased ImGuiID;  -- cimgui.h:2383
      WorkMinX : aliased float;  -- cimgui.h:2384
      WorkMaxX : aliased float;  -- cimgui.h:2385
      ItemWidth : aliased float;  -- cimgui.h:2386
      ContentMaxXFrozen : aliased float;  -- cimgui.h:2387
      ContentMaxXUnfrozen : aliased float;  -- cimgui.h:2388
      ContentMaxXHeadersUsed : aliased float;  -- cimgui.h:2389
      ContentMaxXHeadersIdeal : aliased float;  -- cimgui.h:2390
      NameOffset : aliased ImS16;  -- cimgui.h:2391
      DisplayOrder : aliased ImGuiTableColumnIdx;  -- cimgui.h:2392
      IndexWithinEnabledSet : aliased ImGuiTableColumnIdx;  -- cimgui.h:2393
      PrevEnabledColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2394
      NextEnabledColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2395
      SortOrder : aliased ImGuiTableColumnIdx;  -- cimgui.h:2396
      DrawChannelCurrent : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2397
      DrawChannelFrozen : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2398
      DrawChannelUnfrozen : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2399
      IsEnabled : aliased Extensions.bool;  -- cimgui.h:2400
      IsUserEnabled : aliased Extensions.bool;  -- cimgui.h:2401
      IsUserEnabledNextFrame : aliased Extensions.bool;  -- cimgui.h:2402
      IsVisibleX : aliased Extensions.bool;  -- cimgui.h:2403
      IsVisibleY : aliased Extensions.bool;  -- cimgui.h:2404
      IsRequestOutput : aliased Extensions.bool;  -- cimgui.h:2405
      IsSkipItems : aliased Extensions.bool;  -- cimgui.h:2406
      IsPreserveWidthAuto : aliased Extensions.bool;  -- cimgui.h:2407
      NavLayerCurrent : aliased ImS8;  -- cimgui.h:2408
      AutoFitQueue : aliased ImU8;  -- cimgui.h:2409
      CannotSkipItemsQueue : aliased ImU8;  -- cimgui.h:2410
      SortDirection : Extensions.Unsigned_2;  -- cimgui.h:2411
      SortDirectionsAvailCount : Extensions.Unsigned_2;  -- cimgui.h:2412
      SortDirectionsAvailMask : Extensions.Unsigned_4;  -- cimgui.h:2413
      SortDirectionsAvailList : aliased ImU8;  -- cimgui.h:2414
   end record
   with Convention => C_Pass_By_Copy,
        Pack => True;  -- cimgui.h:2372

   type ImGuiTableCellData;
   type ImGuiTableCellData is record
      BgColor : aliased ImU32;  -- cimgui.h:2419
      Column : aliased ImGuiTableColumnIdx;  -- cimgui.h:2420
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2417

   type ImGuiTableInstanceData is record
      LastOuterHeight : aliased float;  -- cimgui.h:2424
      LastFirstRowHeight : aliased float;  -- cimgui.h:2425
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2422

   type ImSpan_ImGuiTableColumn is record
      Data : access ImGuiTableColumn;  -- cimgui.h:2427
      DataEnd : access ImGuiTableColumn;  -- cimgui.h:2427
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2427

   type ImSpan_ImGuiTableColumnIdx is record
      Data : access ImGuiTableColumnIdx;  -- cimgui.h:2429
      DataEnd : access ImGuiTableColumnIdx;  -- cimgui.h:2429
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2429

   type ImSpan_ImGuiTableCellData is record
      Data : access ImGuiTableCellData;  -- cimgui.h:2431
      DataEnd : access ImGuiTableCellData;  -- cimgui.h:2431
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2431

   type ImVector_ImGuiTableInstanceData is record
      Size : aliased int;  -- cimgui.h:2433
      Capacity : aliased int;  -- cimgui.h:2433
      Data : access ImGuiTableInstanceData;  -- cimgui.h:2433
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2433

   type ImVector_ImGuiTableColumnSortSpecs is record
      Size : aliased int;  -- cimgui.h:2435
      Capacity : aliased int;  -- cimgui.h:2435
      Data : access ImGuiTableColumnSortSpecs;  -- cimgui.h:2435
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2435

   type ImGuiTable_array2240 is array (0 .. 1) of aliased ImU32;
   type ImGuiTable is record
      ID : aliased ImGuiID;  -- cimgui.h:2439
      Flags : aliased ImGuiTableFlags;  -- cimgui.h:2440
      RawData : System.Address;  -- cimgui.h:2441
      TempData : access ImGuiTableTempData;  -- cimgui.h:2442
      Columns : aliased ImSpan_ImGuiTableColumn;  -- cimgui.h:2443
      DisplayOrderToIndex : aliased ImSpan_ImGuiTableColumnIdx;  -- cimgui.h:2444
      RowCellData : aliased ImSpan_ImGuiTableCellData;  -- cimgui.h:2445
      EnabledMaskByDisplayOrder : aliased ImU64;  -- cimgui.h:2446
      EnabledMaskByIndex : aliased ImU64;  -- cimgui.h:2447
      VisibleMaskByIndex : aliased ImU64;  -- cimgui.h:2448
      RequestOutputMaskByIndex : aliased ImU64;  -- cimgui.h:2449
      SettingsLoadedFlags : aliased ImGuiTableFlags;  -- cimgui.h:2450
      SettingsOffset : aliased int;  -- cimgui.h:2451
      LastFrameActive : aliased int;  -- cimgui.h:2452
      ColumnsCount : aliased int;  -- cimgui.h:2453
      CurrentRow : aliased int;  -- cimgui.h:2454
      CurrentColumn : aliased int;  -- cimgui.h:2455
      InstanceCurrent : aliased ImS16;  -- cimgui.h:2456
      InstanceInteracted : aliased ImS16;  -- cimgui.h:2457
      RowPosY1 : aliased float;  -- cimgui.h:2458
      RowPosY2 : aliased float;  -- cimgui.h:2459
      RowMinHeight : aliased float;  -- cimgui.h:2460
      RowTextBaseline : aliased float;  -- cimgui.h:2461
      RowIndentOffsetX : aliased float;  -- cimgui.h:2462
      RowFlags : aliased short;  -- cimgui.h:2463
      LastRowFlags : aliased short;  -- cimgui.h:2464
      RowBgColorCounter : aliased int;  -- cimgui.h:2465
      RowBgColor : aliased ImGuiTable_array2240;  -- cimgui.h:2466
      BorderColorStrong : aliased ImU32;  -- cimgui.h:2467
      BorderColorLight : aliased ImU32;  -- cimgui.h:2468
      BorderX1 : aliased float;  -- cimgui.h:2469
      BorderX2 : aliased float;  -- cimgui.h:2470
      HostIndentX : aliased float;  -- cimgui.h:2471
      MinColumnWidth : aliased float;  -- cimgui.h:2472
      OuterPaddingX : aliased float;  -- cimgui.h:2473
      CellPaddingX : aliased float;  -- cimgui.h:2474
      CellPaddingY : aliased float;  -- cimgui.h:2475
      CellSpacingX1 : aliased float;  -- cimgui.h:2476
      CellSpacingX2 : aliased float;  -- cimgui.h:2477
      InnerWidth : aliased float;  -- cimgui.h:2478
      ColumnsGivenWidth : aliased float;  -- cimgui.h:2479
      ColumnsAutoFitWidth : aliased float;  -- cimgui.h:2480
      ColumnsStretchSumWeights : aliased float;  -- cimgui.h:2481
      ResizedColumnNextWidth : aliased float;  -- cimgui.h:2482
      ResizeLockMinContentsX2 : aliased float;  -- cimgui.h:2483
      RefScale : aliased float;  -- cimgui.h:2484
      OuterRect : aliased ImRect;  -- cimgui.h:2485
      InnerRect : aliased ImRect;  -- cimgui.h:2486
      WorkRect : aliased ImRect;  -- cimgui.h:2487
      InnerClipRect : aliased ImRect;  -- cimgui.h:2488
      BgClipRect : aliased ImRect;  -- cimgui.h:2489
      Bg0ClipRectForDrawCmd : aliased ImRect;  -- cimgui.h:2490
      Bg2ClipRectForDrawCmd : aliased ImRect;  -- cimgui.h:2491
      HostClipRect : aliased ImRect;  -- cimgui.h:2492
      HostBackupInnerClipRect : aliased ImRect;  -- cimgui.h:2493
      OuterWindow : access ImGuiWindow;  -- cimgui.h:2494
      InnerWindow : access ImGuiWindow;  -- cimgui.h:2495
      ColumnsNames : aliased ImGuiTextBuffer;  -- cimgui.h:2496
      DrawSplitter : access ImDrawListSplitter;  -- cimgui.h:2497
      InstanceDataFirst : aliased ImGuiTableInstanceData;  -- cimgui.h:2498
      InstanceDataExtra : aliased ImVector_ImGuiTableInstanceData;  -- cimgui.h:2499
      SortSpecsSingle : aliased ImGuiTableColumnSortSpecs;  -- cimgui.h:2500
      SortSpecsMulti : aliased ImVector_ImGuiTableColumnSortSpecs;  -- cimgui.h:2501
      SortSpecs : aliased ImGuiTableSortSpecs;  -- cimgui.h:2502
      SortSpecsCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2503
      ColumnsEnabledCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2504
      ColumnsEnabledFixedCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2505
      DeclColumnsCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2506
      HoveredColumnBody : aliased ImGuiTableColumnIdx;  -- cimgui.h:2507
      HoveredColumnBorder : aliased ImGuiTableColumnIdx;  -- cimgui.h:2508
      AutoFitSingleColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2509
      ResizedColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2510
      LastResizedColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2511
      HeldHeaderColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2512
      ReorderColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2513
      ReorderColumnDir : aliased ImGuiTableColumnIdx;  -- cimgui.h:2514
      LeftMostEnabledColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2515
      RightMostEnabledColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2516
      LeftMostStretchedColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2517
      RightMostStretchedColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2518
      ContextPopupColumn : aliased ImGuiTableColumnIdx;  -- cimgui.h:2519
      FreezeRowsRequest : aliased ImGuiTableColumnIdx;  -- cimgui.h:2520
      FreezeRowsCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2521
      FreezeColumnsRequest : aliased ImGuiTableColumnIdx;  -- cimgui.h:2522
      FreezeColumnsCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2523
      RowCellDataCurrent : aliased ImGuiTableColumnIdx;  -- cimgui.h:2524
      DummyDrawChannel : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2525
      Bg2DrawChannelCurrent : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2526
      Bg2DrawChannelUnfrozen : aliased ImGuiTableDrawChannelIdx;  -- cimgui.h:2527
      IsLayoutLocked : aliased Extensions.bool;  -- cimgui.h:2528
      IsInsideRow : aliased Extensions.bool;  -- cimgui.h:2529
      IsInitializing : aliased Extensions.bool;  -- cimgui.h:2530
      IsSortSpecsDirty : aliased Extensions.bool;  -- cimgui.h:2531
      IsUsingHeaders : aliased Extensions.bool;  -- cimgui.h:2532
      IsContextPopupOpen : aliased Extensions.bool;  -- cimgui.h:2533
      IsSettingsRequestLoad : aliased Extensions.bool;  -- cimgui.h:2534
      IsSettingsDirty : aliased Extensions.bool;  -- cimgui.h:2535
      IsDefaultDisplayOrder : aliased Extensions.bool;  -- cimgui.h:2536
      IsResetAllRequest : aliased Extensions.bool;  -- cimgui.h:2537
      IsResetDisplayOrderRequest : aliased Extensions.bool;  -- cimgui.h:2538
      IsUnfrozenRows : aliased Extensions.bool;  -- cimgui.h:2539
      IsDefaultSizingPolicy : aliased Extensions.bool;  -- cimgui.h:2540
      MemoryCompacted : aliased Extensions.bool;  -- cimgui.h:2541
      HostSkipItems : aliased Extensions.bool;  -- cimgui.h:2542
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2437

   type ImGuiTableTempData is record
      TableIndex : aliased int;  -- cimgui.h:2546
      LastTimeActive : aliased float;  -- cimgui.h:2547
      UserOuterSize : aliased ImVec2;  -- cimgui.h:2548
      DrawSplitter : aliased ImDrawListSplitter;  -- cimgui.h:2549
      HostBackupWorkRect : aliased ImRect;  -- cimgui.h:2550
      HostBackupParentWorkRect : aliased ImRect;  -- cimgui.h:2551
      HostBackupPrevLineSize : aliased ImVec2;  -- cimgui.h:2552
      HostBackupCurrLineSize : aliased ImVec2;  -- cimgui.h:2553
      HostBackupCursorMaxPos : aliased ImVec2;  -- cimgui.h:2554
      HostBackupColumnsOffset : aliased ImVec1;  -- cimgui.h:2555
      HostBackupItemWidth : aliased float;  -- cimgui.h:2556
      HostBackupItemWidthStackSize : aliased int;  -- cimgui.h:2557
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2544

   type ImGuiTableColumnSettings;
   type ImGuiTableColumnSettings is record
      WidthOrWeight : aliased float;  -- cimgui.h:2562
      UserID : aliased ImGuiID;  -- cimgui.h:2563
      Index : aliased ImGuiTableColumnIdx;  -- cimgui.h:2564
      DisplayOrder : aliased ImGuiTableColumnIdx;  -- cimgui.h:2565
      SortOrder : aliased ImGuiTableColumnIdx;  -- cimgui.h:2566
      SortDirection : Extensions.Unsigned_2;  -- cimgui.h:2567
      IsEnabled : Extensions.Unsigned_1;  -- cimgui.h:2568
      IsStretch : Extensions.Unsigned_1;  -- cimgui.h:2569
   end record
   with Convention => C_Pass_By_Copy,
        Pack => True;  -- cimgui.h:2560

   type ImGuiTableSettings is record
      ID : aliased ImGuiID;  -- cimgui.h:2573
      SaveFlags : aliased ImGuiTableFlags;  -- cimgui.h:2574
      RefScale : aliased float;  -- cimgui.h:2575
      ColumnsCount : aliased ImGuiTableColumnIdx;  -- cimgui.h:2576
      ColumnsCountMax : aliased ImGuiTableColumnIdx;  -- cimgui.h:2577
      WantApply : aliased Extensions.bool;  -- cimgui.h:2578
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2571

   type ImFontBuilderIO is record
      FontBuilder_Build : access function (arg1 : access ImFontAtlas) return Extensions.bool;  -- cimgui.h:2582
   end record
   with Convention => C_Pass_By_Copy;  -- cimgui.h:2580

   function ImVec2_ImVec2_Nil return access ImVec2  -- cimgui.h:2647
   with Import => True,
        Convention => C,
        External_Name => "ImVec2_ImVec2_Nil";

   procedure ImVec2_destroy (self : access ImVec2)  -- cimgui.h:2648
   with Import => True,
        Convention => C,
        External_Name => "ImVec2_destroy";

   function ImVec2_ImVec2_Float (u_x : float; u_y : float) return access ImVec2  -- cimgui.h:2649
   with Import => True,
        Convention => C,
        External_Name => "ImVec2_ImVec2_Float";

   function ImVec4_ImVec4_Nil return access ImVec4  -- cimgui.h:2650
   with Import => True,
        Convention => C,
        External_Name => "ImVec4_ImVec4_Nil";

   procedure ImVec4_destroy (self : access ImVec4)  -- cimgui.h:2651
   with Import => True,
        Convention => C,
        External_Name => "ImVec4_destroy";

   function ImVec4_ImVec4_Float
     (u_x : float;
      u_y : float;
      u_z : float;
      u_w : float) return access ImVec4  -- cimgui.h:2652
   with Import => True,
        Convention => C,
        External_Name => "ImVec4_ImVec4_Float";

   function igCreateContext (shared_font_atlas : access ImFontAtlas := null) return access ImGuiContext  -- cimgui.h:2653
   with Import => True,
        Convention => C,
        External_Name => "igCreateContext";

   procedure igDestroyContext (ctx : access ImGuiContext := null)  -- cimgui.h:2654
   with Import => True,
        Convention => C,
        External_Name => "igDestroyContext";

   function igGetCurrentContext return access ImGuiContext  -- cimgui.h:2655
   with Import => True,
        Convention => C,
        External_Name => "igGetCurrentContext";

   procedure igSetCurrentContext (ctx : access ImGuiContext)  -- cimgui.h:2656
   with Import => True,
        Convention => C,
        External_Name => "igSetCurrentContext";

   function igGetIO return access ImGuiIO  -- cimgui.h:2657
   with Import => True,
        Convention => C,
        External_Name => "igGetIO";

   function igGetStyle return access ImGuiStyle  -- cimgui.h:2658
   with Import => True,
        Convention => C,
        External_Name => "igGetStyle";

   procedure igNewFrame  -- cimgui.h:2659
   with Import => True,
        Convention => C,
        External_Name => "igNewFrame";

   procedure igEndFrame  -- cimgui.h:2660
   with Import => True,
        Convention => C,
        External_Name => "igEndFrame";

   procedure igRender  -- cimgui.h:2661
   with Import => True,
        Convention => C,
        External_Name => "igRender";

   function igGetDrawData return access ImDrawData  -- cimgui.h:2662
   with Import => True,
        Convention => C,
        External_Name => "igGetDrawData";

   procedure igShowDemoWindow (p_open : access Extensions.bool)  -- cimgui.h:2663
   with Import => True,
        Convention => C,
        External_Name => "igShowDemoWindow";

   procedure igShowMetricsWindow (p_open : access Extensions.bool)  -- cimgui.h:2664
   with Import => True,
        Convention => C,
        External_Name => "igShowMetricsWindow";

   procedure igShowDebugLogWindow (p_open : access Extensions.bool)  -- cimgui.h:2665
   with Import => True,
        Convention => C,
        External_Name => "igShowDebugLogWindow";

   procedure igShowStackToolWindow (p_open : access Extensions.bool)  -- cimgui.h:2666
   with Import => True,
        Convention => C,
        External_Name => "igShowStackToolWindow";

   procedure igShowAboutWindow (p_open : access Extensions.bool)  -- cimgui.h:2667
   with Import => True,
        Convention => C,
        External_Name => "igShowAboutWindow";

   procedure igShowStyleEditor (ref : access ImGuiStyle)  -- cimgui.h:2668
   with Import => True,
        Convention => C,
        External_Name => "igShowStyleEditor";

   function igShowStyleSelector (label : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:2669
   with Import => True,
        Convention => C,
        External_Name => "igShowStyleSelector";

   procedure igShowFontSelector (label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2670
   with Import => True,
        Convention => C,
        External_Name => "igShowFontSelector";

   procedure igShowUserGuide  -- cimgui.h:2671
   with Import => True,
        Convention => C,
        External_Name => "igShowUserGuide";

   function igGetVersion return Interfaces.C.Strings.chars_ptr  -- cimgui.h:2672
   with Import => True,
        Convention => C,
        External_Name => "igGetVersion";

   procedure igStyleColorsDark (dst : access ImGuiStyle := null)  -- cimgui.h:2673
   with Import => True,
        Convention => C,
        External_Name => "igStyleColorsDark";

   procedure igStyleColorsLight (dst : access ImGuiStyle := null)  -- cimgui.h:2674
   with Import => True,
        Convention => C,
        External_Name => "igStyleColorsLight";

   procedure igStyleColorsClassic (dst : access ImGuiStyle := null)  -- cimgui.h:2675
   with Import => True,
        Convention => C,
        External_Name => "igStyleColorsClassic";

   function igBegin
     (name : Interfaces.C.Strings.chars_ptr;
      p_open : access Extensions.bool := null;
      flags : ImGuiWindowFlags := 0) return Extensions.bool  -- cimgui.h:2676
   with Import => True,
        Convention => C,
        External_Name => "igBegin";

   procedure igEnd  -- cimgui.h:2677
   with Import => True,
        Convention => C,
        External_Name => "igEnd";

   function igBeginChild_Str
     (str_id : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      border : Extensions.bool;
      flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:2678
   with Import => True,
        Convention => C,
        External_Name => "igBeginChild_Str";

   function igBeginChild_ID
     (id : ImGuiID;
      size : ImVec2;
      border : Extensions.bool;
      flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:2679
   with Import => True,
        Convention => C,
        External_Name => "igBeginChild_ID";

   procedure igEndChild  -- cimgui.h:2680
   with Import => True,
        Convention => C,
        External_Name => "igEndChild";

   function igIsWindowAppearing return Extensions.bool  -- cimgui.h:2681
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowAppearing";

   function igIsWindowCollapsed return Extensions.bool  -- cimgui.h:2682
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowCollapsed";

   function igIsWindowFocused (flags : ImGuiFocusedFlags) return Extensions.bool  -- cimgui.h:2683
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowFocused";

   function igIsWindowHovered (flags : ImGuiHoveredFlags) return Extensions.bool  -- cimgui.h:2684
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowHovered";

   function igGetWindowDrawList return access ImDrawList  -- cimgui.h:2685
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowDrawList";

   procedure igGetWindowPos (pOut : access ImVec2)  -- cimgui.h:2686
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowPos";

   procedure igGetWindowSize (pOut : access ImVec2)  -- cimgui.h:2687
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowSize";

   function igGetWindowWidth return float  -- cimgui.h:2688
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowWidth";

   function igGetWindowHeight return float  -- cimgui.h:2689
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowHeight";

   procedure igSetNextWindowPos
     (pos : ImVec2;
      cond : ImGuiCond;
      pivot : ImVec2)  -- cimgui.h:2690
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowPos";

   procedure igSetNextWindowSize (size : ImVec2; cond : ImGuiCond)  -- cimgui.h:2691
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowSize";

   procedure igSetNextWindowSizeConstraints
     (size_min : ImVec2;
      size_max : ImVec2;
      custom_callback : ImGuiSizeCallback;
      custom_callback_data : System.Address)  -- cimgui.h:2692
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowSizeConstraints";

   procedure igSetNextWindowContentSize (size : ImVec2)  -- cimgui.h:2693
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowContentSize";

   procedure igSetNextWindowCollapsed (collapsed : Extensions.bool; cond : ImGuiCond)  -- cimgui.h:2694
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowCollapsed";

   procedure igSetNextWindowFocus  -- cimgui.h:2695
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowFocus";

   procedure igSetNextWindowBgAlpha (alpha : float)  -- cimgui.h:2696
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowBgAlpha";

   procedure igSetWindowPos_Vec2 (pos : ImVec2; cond : ImGuiCond)  -- cimgui.h:2697
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowPos_Vec2";

   procedure igSetWindowSize_Vec2 (size : ImVec2; cond : ImGuiCond)  -- cimgui.h:2698
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowSize_Vec2";

   procedure igSetWindowCollapsed_Bool (collapsed : Extensions.bool; cond : ImGuiCond)  -- cimgui.h:2699
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowCollapsed_Bool";

   procedure igSetWindowFocus_Nil  -- cimgui.h:2700
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowFocus_Nil";

   procedure igSetWindowFontScale (scale : float)  -- cimgui.h:2701
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowFontScale";

   procedure igSetWindowPos_Str
     (name : Interfaces.C.Strings.chars_ptr;
      pos : ImVec2;
      cond : ImGuiCond)  -- cimgui.h:2702
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowPos_Str";

   procedure igSetWindowSize_Str
     (name : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      cond : ImGuiCond)  -- cimgui.h:2703
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowSize_Str";

   procedure igSetWindowCollapsed_Str
     (name : Interfaces.C.Strings.chars_ptr;
      collapsed : Extensions.bool;
      cond : ImGuiCond)  -- cimgui.h:2704
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowCollapsed_Str";

   procedure igSetWindowFocus_Str (name : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2705
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowFocus_Str";

   procedure igGetContentRegionAvail (pOut : access ImVec2)  -- cimgui.h:2706
   with Import => True,
        Convention => C,
        External_Name => "igGetContentRegionAvail";

   procedure igGetContentRegionMax (pOut : access ImVec2)  -- cimgui.h:2707
   with Import => True,
        Convention => C,
        External_Name => "igGetContentRegionMax";

   procedure igGetWindowContentRegionMin (pOut : access ImVec2)  -- cimgui.h:2708
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowContentRegionMin";

   procedure igGetWindowContentRegionMax (pOut : access ImVec2)  -- cimgui.h:2709
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowContentRegionMax";

   function igGetScrollX return float  -- cimgui.h:2710
   with Import => True,
        Convention => C,
        External_Name => "igGetScrollX";

   function igGetScrollY return float  -- cimgui.h:2711
   with Import => True,
        Convention => C,
        External_Name => "igGetScrollY";

   procedure igSetScrollX_Float (scroll_x : float)  -- cimgui.h:2712
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollX_Float";

   procedure igSetScrollY_Float (scroll_y : float)  -- cimgui.h:2713
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollY_Float";

   function igGetScrollMaxX return float  -- cimgui.h:2714
   with Import => True,
        Convention => C,
        External_Name => "igGetScrollMaxX";

   function igGetScrollMaxY return float  -- cimgui.h:2715
   with Import => True,
        Convention => C,
        External_Name => "igGetScrollMaxY";

   procedure igSetScrollHereX (center_x_ratio : float)  -- cimgui.h:2716
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollHereX";

   procedure igSetScrollHereY (center_y_ratio : float)  -- cimgui.h:2717
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollHereY";

   procedure igSetScrollFromPosX_Float (local_x : float; center_x_ratio : float)  -- cimgui.h:2718
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollFromPosX_Float";

   procedure igSetScrollFromPosY_Float (local_y : float; center_y_ratio : float)  -- cimgui.h:2719
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollFromPosY_Float";

   procedure igPushFont (font : access ImFont)  -- cimgui.h:2720
   with Import => True,
        Convention => C,
        External_Name => "igPushFont";

   procedure igPopFont  -- cimgui.h:2721
   with Import => True,
        Convention => C,
        External_Name => "igPopFont";

   procedure igPushStyleColor_U32 (idx : ImGuiCol; col : ImU32)  -- cimgui.h:2722
   with Import => True,
        Convention => C,
        External_Name => "igPushStyleColor_U32";

   procedure igPushStyleColor_Vec4 (idx : ImGuiCol; col : ImVec4)  -- cimgui.h:2723
   with Import => True,
        Convention => C,
        External_Name => "igPushStyleColor_Vec4";

   procedure igPopStyleColor (count : int)  -- cimgui.h:2724
   with Import => True,
        Convention => C,
        External_Name => "igPopStyleColor";

   procedure igPushStyleVar_Float (idx : ImGuiStyleVar; val : float)  -- cimgui.h:2725
   with Import => True,
        Convention => C,
        External_Name => "igPushStyleVar_Float";

   procedure igPushStyleVar_Vec2 (idx : ImGuiStyleVar; val : ImVec2)  -- cimgui.h:2726
   with Import => True,
        Convention => C,
        External_Name => "igPushStyleVar_Vec2";

   procedure igPopStyleVar (count : int)  -- cimgui.h:2727
   with Import => True,
        Convention => C,
        External_Name => "igPopStyleVar";

   procedure igPushAllowKeyboardFocus (allow_keyboard_focus : Extensions.bool)  -- cimgui.h:2728
   with Import => True,
        Convention => C,
        External_Name => "igPushAllowKeyboardFocus";

   procedure igPopAllowKeyboardFocus  -- cimgui.h:2729
   with Import => True,
        Convention => C,
        External_Name => "igPopAllowKeyboardFocus";

   procedure igPushButtonRepeat (repeat : Extensions.bool)  -- cimgui.h:2730
   with Import => True,
        Convention => C,
        External_Name => "igPushButtonRepeat";

   procedure igPopButtonRepeat  -- cimgui.h:2731
   with Import => True,
        Convention => C,
        External_Name => "igPopButtonRepeat";

   procedure igPushItemWidth (item_width : float)  -- cimgui.h:2732
   with Import => True,
        Convention => C,
        External_Name => "igPushItemWidth";

   procedure igPopItemWidth  -- cimgui.h:2733
   with Import => True,
        Convention => C,
        External_Name => "igPopItemWidth";

   procedure igSetNextItemWidth (item_width : float)  -- cimgui.h:2734
   with Import => True,
        Convention => C,
        External_Name => "igSetNextItemWidth";

   function igCalcItemWidth return float  -- cimgui.h:2735
   with Import => True,
        Convention => C,
        External_Name => "igCalcItemWidth";

   procedure igPushTextWrapPos (wrap_local_pos_x : float)  -- cimgui.h:2736
   with Import => True,
        Convention => C,
        External_Name => "igPushTextWrapPos";

   procedure igPopTextWrapPos  -- cimgui.h:2737
   with Import => True,
        Convention => C,
        External_Name => "igPopTextWrapPos";

   function igGetFont return access ImFont  -- cimgui.h:2738
   with Import => True,
        Convention => C,
        External_Name => "igGetFont";

   function igGetFontSize return float  -- cimgui.h:2739
   with Import => True,
        Convention => C,
        External_Name => "igGetFontSize";

   procedure igGetFontTexUvWhitePixel (pOut : access ImVec2)  -- cimgui.h:2740
   with Import => True,
        Convention => C,
        External_Name => "igGetFontTexUvWhitePixel";

   function igGetColorU32_Col (idx : ImGuiCol; alpha_mul : float) return ImU32  -- cimgui.h:2741
   with Import => True,
        Convention => C,
        External_Name => "igGetColorU32_Col";

   function igGetColorU32_Vec4 (col : ImVec4) return ImU32  -- cimgui.h:2742
   with Import => True,
        Convention => C,
        External_Name => "igGetColorU32_Vec4";

   function igGetColorU32_U32 (col : ImU32) return ImU32  -- cimgui.h:2743
   with Import => True,
        Convention => C,
        External_Name => "igGetColorU32_U32";

   function igGetStyleColorVec4 (idx : ImGuiCol) return access constant ImVec4  -- cimgui.h:2744
   with Import => True,
        Convention => C,
        External_Name => "igGetStyleColorVec4";

   procedure igSeparator  -- cimgui.h:2745
   with Import => True,
        Convention => C,
        External_Name => "igSeparator";

   procedure igSameLine (offset_from_start_x : float; spacing : float)  -- cimgui.h:2746
   with Import => True,
        Convention => C,
        External_Name => "igSameLine";

   procedure igNewLine  -- cimgui.h:2747
   with Import => True,
        Convention => C,
        External_Name => "igNewLine";

   procedure igSpacing  -- cimgui.h:2748
   with Import => True,
        Convention => C,
        External_Name => "igSpacing";

   procedure igDummy (size : ImVec2)  -- cimgui.h:2749
   with Import => True,
        Convention => C,
        External_Name => "igDummy";

   procedure igIndent (indent_w : float)  -- cimgui.h:2750
   with Import => True,
        Convention => C,
        External_Name => "igIndent";

   procedure igUnindent (indent_w : float)  -- cimgui.h:2751
   with Import => True,
        Convention => C,
        External_Name => "igUnindent";

   procedure igBeginGroup  -- cimgui.h:2752
   with Import => True,
        Convention => C,
        External_Name => "igBeginGroup";

   procedure igEndGroup  -- cimgui.h:2753
   with Import => True,
        Convention => C,
        External_Name => "igEndGroup";

   procedure igGetCursorPos (pOut : access ImVec2)  -- cimgui.h:2754
   with Import => True,
        Convention => C,
        External_Name => "igGetCursorPos";

   function igGetCursorPosX return float  -- cimgui.h:2755
   with Import => True,
        Convention => C,
        External_Name => "igGetCursorPosX";

   function igGetCursorPosY return float  -- cimgui.h:2756
   with Import => True,
        Convention => C,
        External_Name => "igGetCursorPosY";

   procedure igSetCursorPos (local_pos : ImVec2)  -- cimgui.h:2757
   with Import => True,
        Convention => C,
        External_Name => "igSetCursorPos";

   procedure igSetCursorPosX (local_x : float)  -- cimgui.h:2758
   with Import => True,
        Convention => C,
        External_Name => "igSetCursorPosX";

   procedure igSetCursorPosY (local_y : float)  -- cimgui.h:2759
   with Import => True,
        Convention => C,
        External_Name => "igSetCursorPosY";

   procedure igGetCursorStartPos (pOut : access ImVec2)  -- cimgui.h:2760
   with Import => True,
        Convention => C,
        External_Name => "igGetCursorStartPos";

   procedure igGetCursorScreenPos (pOut : access ImVec2)  -- cimgui.h:2761
   with Import => True,
        Convention => C,
        External_Name => "igGetCursorScreenPos";

   procedure igSetCursorScreenPos (pos : ImVec2)  -- cimgui.h:2762
   with Import => True,
        Convention => C,
        External_Name => "igSetCursorScreenPos";

   procedure igAlignTextToFramePadding  -- cimgui.h:2763
   with Import => True,
        Convention => C,
        External_Name => "igAlignTextToFramePadding";

   function igGetTextLineHeight return float  -- cimgui.h:2764
   with Import => True,
        Convention => C,
        External_Name => "igGetTextLineHeight";

   function igGetTextLineHeightWithSpacing return float  -- cimgui.h:2765
   with Import => True,
        Convention => C,
        External_Name => "igGetTextLineHeightWithSpacing";

   function igGetFrameHeight return float  -- cimgui.h:2766
   with Import => True,
        Convention => C,
        External_Name => "igGetFrameHeight";

   function igGetFrameHeightWithSpacing return float  -- cimgui.h:2767
   with Import => True,
        Convention => C,
        External_Name => "igGetFrameHeightWithSpacing";

   procedure igPushID_Str (str_id : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2768
   with Import => True,
        Convention => C,
        External_Name => "igPushID_Str";

   procedure igPushID_StrStr (str_id_begin : Interfaces.C.Strings.chars_ptr; str_id_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2769
   with Import => True,
        Convention => C,
        External_Name => "igPushID_StrStr";

   procedure igPushID_Ptr (ptr_id : System.Address)  -- cimgui.h:2770
   with Import => True,
        Convention => C,
        External_Name => "igPushID_Ptr";

   procedure igPushID_Int (int_id : int)  -- cimgui.h:2771
   with Import => True,
        Convention => C,
        External_Name => "igPushID_Int";

   procedure igPopID  -- cimgui.h:2772
   with Import => True,
        Convention => C,
        External_Name => "igPopID";

   function igGetID_Str (str_id : Interfaces.C.Strings.chars_ptr) return ImGuiID  -- cimgui.h:2773
   with Import => True,
        Convention => C,
        External_Name => "igGetID_Str";

   function igGetID_StrStr (str_id_begin : Interfaces.C.Strings.chars_ptr; str_id_end : Interfaces.C.Strings.chars_ptr) return ImGuiID  -- cimgui.h:2774
   with Import => True,
        Convention => C,
        External_Name => "igGetID_StrStr";

   function igGetID_Ptr (ptr_id : System.Address) return ImGuiID  -- cimgui.h:2775
   with Import => True,
        Convention => C,
        External_Name => "igGetID_Ptr";

   procedure igTextUnformatted (text : Interfaces.C.Strings.chars_ptr; text_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2776
   with Import => True,
        Convention => C,
        External_Name => "igTextUnformatted";

   procedure igText (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2777
   with Import => True,
        Convention => C,
        External_Name => "igText";

   procedure igTextV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2778
   with Import => True,
        Convention => C,
        External_Name => "igTextV";

   procedure igTextColored (col : ImVec4; fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2779
   with Import => True,
        Convention => C,
        External_Name => "igTextColored";

   procedure igTextColoredV
     (col : ImVec4;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list)  -- cimgui.h:2780
   with Import => True,
        Convention => C,
        External_Name => "igTextColoredV";

   procedure igTextDisabled (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2781
   with Import => True,
        Convention => C,
        External_Name => "igTextDisabled";

   procedure igTextDisabledV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2782
   with Import => True,
        Convention => C,
        External_Name => "igTextDisabledV";

   procedure igTextWrapped (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2783
   with Import => True,
        Convention => C,
        External_Name => "igTextWrapped";

   procedure igTextWrappedV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2784
   with Import => True,
        Convention => C,
        External_Name => "igTextWrappedV";

   procedure igLabelText (label : Interfaces.C.Strings.chars_ptr; fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2785
   with Import => True,
        Convention => C,
        External_Name => "igLabelText";

   procedure igLabelTextV
     (label : Interfaces.C.Strings.chars_ptr;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list)  -- cimgui.h:2786
   with Import => True,
        Convention => C,
        External_Name => "igLabelTextV";

   procedure igBulletText (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2787
   with Import => True,
        Convention => C,
        External_Name => "igBulletText";

   procedure igBulletTextV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2788
   with Import => True,
        Convention => C,
        External_Name => "igBulletTextV";

   function igButton (label : Interfaces.C.Strings.chars_ptr; size : ImVec2 := (0.0, 0.0)) return Extensions.bool  -- cimgui.h:2789
   with Import => True,
        Convention => C,
        External_Name => "igButton";

   function igSmallButton (label : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:2790
   with Import => True,
        Convention => C,
        External_Name => "igSmallButton";

   function igInvisibleButton
     (str_id : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      flags : ImGuiButtonFlags) return Extensions.bool  -- cimgui.h:2791
   with Import => True,
        Convention => C,
        External_Name => "igInvisibleButton";

   function igArrowButton (str_id : Interfaces.C.Strings.chars_ptr; dir : ImGuiDir) return Extensions.bool  -- cimgui.h:2792
   with Import => True,
        Convention => C,
        External_Name => "igArrowButton";

   procedure igImage
     (user_texture_id : ImTextureID;
      size : ImVec2;
      uv0 : ImVec2;
      uv1 : ImVec2;
      tint_col : ImVec4;
      border_col : ImVec4)  -- cimgui.h:2793
   with Import => True,
        Convention => C,
        External_Name => "igImage";

   function igImageButton
     (user_texture_id : ImTextureID;
      size : ImVec2;
      uv0 : ImVec2;
      uv1 : ImVec2;
      frame_padding : int;
      bg_col : ImVec4;
      tint_col : ImVec4) return Extensions.bool  -- cimgui.h:2794
   with Import => True,
        Convention => C,
        External_Name => "igImageButton";

   function igCheckbox (label : Interfaces.C.Strings.chars_ptr; v : access Extensions.bool) return Extensions.bool  -- cimgui.h:2795
   with Import => True,
        Convention => C,
        External_Name => "igCheckbox";

   function igCheckboxFlags_IntPtr
     (label : Interfaces.C.Strings.chars_ptr;
      flags : access int;
      flags_value : int) return Extensions.bool  -- cimgui.h:2796
   with Import => True,
        Convention => C,
        External_Name => "igCheckboxFlags_IntPtr";

   function igCheckboxFlags_UintPtr
     (label : Interfaces.C.Strings.chars_ptr;
      flags : access unsigned;
      flags_value : unsigned) return Extensions.bool  -- cimgui.h:2797
   with Import => True,
        Convention => C,
        External_Name => "igCheckboxFlags_UintPtr";

   function igRadioButton_Bool (label : Interfaces.C.Strings.chars_ptr; active : Extensions.bool) return Extensions.bool  -- cimgui.h:2798
   with Import => True,
        Convention => C,
        External_Name => "igRadioButton_Bool";

   function igRadioButton_IntPtr
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_button : int) return Extensions.bool  -- cimgui.h:2799
   with Import => True,
        Convention => C,
        External_Name => "igRadioButton_IntPtr";

   procedure igProgressBar
     (fraction : float;
      size_arg : ImVec2;
      overlay : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2800
   with Import => True,
        Convention => C,
        External_Name => "igProgressBar";

   procedure igBullet  -- cimgui.h:2801
   with Import => True,
        Convention => C,
        External_Name => "igBullet";

   function igBeginCombo
     (label : Interfaces.C.Strings.chars_ptr;
      preview_value : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiComboFlags) return Extensions.bool  -- cimgui.h:2802
   with Import => True,
        Convention => C,
        External_Name => "igBeginCombo";

   procedure igEndCombo  -- cimgui.h:2803
   with Import => True,
        Convention => C,
        External_Name => "igEndCombo";

   function igCombo_Str_arr
     (label : Interfaces.C.Strings.chars_ptr;
      current_item : access int;
      items : System.Address;
      items_count : int;
      popup_max_height_in_items : int) return Extensions.bool  -- cimgui.h:2804
   with Import => True,
        Convention => C,
        External_Name => "igCombo_Str_arr";

   function igCombo_Str
     (label : Interfaces.C.Strings.chars_ptr;
      current_item : access int;
      items_separated_by_zeros : Interfaces.C.Strings.chars_ptr;
      popup_max_height_in_items : int) return Extensions.bool  -- cimgui.h:2805
   with Import => True,
        Convention => C,
        External_Name => "igCombo_Str";

   function igCombo_FnBoolPtr
     (label : Interfaces.C.Strings.chars_ptr;
      current_item : access int;
      items_getter : access function
        (arg1 : System.Address;
         arg2 : int;
         arg3 : System.Address) return Extensions.bool;
      data : System.Address;
      items_count : int;
      popup_max_height_in_items : int) return Extensions.bool  -- cimgui.h:2806
   with Import => True,
        Convention => C,
        External_Name => "igCombo_FnBoolPtr";

   function igDragFloat
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_speed : float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2807
   with Import => True,
        Convention => C,
        External_Name => "igDragFloat";

   function igDragFloat2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_speed : float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2808
   with Import => True,
        Convention => C,
        External_Name => "igDragFloat2";

   function igDragFloat3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_speed : float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2809
   with Import => True,
        Convention => C,
        External_Name => "igDragFloat3";

   function igDragFloat4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_speed : float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2810
   with Import => True,
        Convention => C,
        External_Name => "igDragFloat4";

   function igDragFloatRange2
     (label : Interfaces.C.Strings.chars_ptr;
      v_current_min : access float;
      v_current_max : access float;
      v_speed : float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      format_max : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2811
   with Import => True,
        Convention => C,
        External_Name => "igDragFloatRange2";

   function igDragInt
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_speed : float;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2812
   with Import => True,
        Convention => C,
        External_Name => "igDragInt";

   function igDragInt2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_speed : float;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2813
   with Import => True,
        Convention => C,
        External_Name => "igDragInt2";

   function igDragInt3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_speed : float;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2814
   with Import => True,
        Convention => C,
        External_Name => "igDragInt3";

   function igDragInt4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_speed : float;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2815
   with Import => True,
        Convention => C,
        External_Name => "igDragInt4";

   function igDragIntRange2
     (label : Interfaces.C.Strings.chars_ptr;
      v_current_min : access int;
      v_current_max : access int;
      v_speed : float;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      format_max : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2816
   with Import => True,
        Convention => C,
        External_Name => "igDragIntRange2";

   function igDragScalar
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      v_speed : float;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2817
   with Import => True,
        Convention => C,
        External_Name => "igDragScalar";

   function igDragScalarN
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      components : int;
      v_speed : float;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2818
   with Import => True,
        Convention => C,
        External_Name => "igDragScalarN";

   function igSliderFloat
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2819
   with Import => True,
        Convention => C,
        External_Name => "igSliderFloat";

   function igSliderFloat2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2820
   with Import => True,
        Convention => C,
        External_Name => "igSliderFloat2";

   function igSliderFloat3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2821
   with Import => True,
        Convention => C,
        External_Name => "igSliderFloat3";

   function igSliderFloat4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2822
   with Import => True,
        Convention => C,
        External_Name => "igSliderFloat4";

   function igSliderAngle
     (label : Interfaces.C.Strings.chars_ptr;
      v_rad : access float;
      v_degrees_min : float;
      v_degrees_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2823
   with Import => True,
        Convention => C,
        External_Name => "igSliderAngle";

   function igSliderInt
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2824
   with Import => True,
        Convention => C,
        External_Name => "igSliderInt";

   function igSliderInt2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2825
   with Import => True,
        Convention => C,
        External_Name => "igSliderInt2";

   function igSliderInt3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2826
   with Import => True,
        Convention => C,
        External_Name => "igSliderInt3";

   function igSliderInt4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2827
   with Import => True,
        Convention => C,
        External_Name => "igSliderInt4";

   function igSliderScalar
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2828
   with Import => True,
        Convention => C,
        External_Name => "igSliderScalar";

   function igSliderScalarN
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      components : int;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2829
   with Import => True,
        Convention => C,
        External_Name => "igSliderScalarN";

   function igVSliderFloat
     (label : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      v : access float;
      v_min : float;
      v_max : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2830
   with Import => True,
        Convention => C,
        External_Name => "igVSliderFloat";

   function igVSliderInt
     (label : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      v : access int;
      v_min : int;
      v_max : int;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2831
   with Import => True,
        Convention => C,
        External_Name => "igVSliderInt";

   function igVSliderScalar
     (label : Interfaces.C.Strings.chars_ptr;
      size : ImVec2;
      data_type : ImGuiDataType;
      p_data : System.Address;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:2832
   with Import => True,
        Convention => C,
        External_Name => "igVSliderScalar";

   function igInputText
     (label : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size;
      flags : ImGuiInputTextFlags;
      callback : ImGuiInputTextCallback;
      user_data : System.Address) return Extensions.bool  -- cimgui.h:2833
   with Import => True,
        Convention => C,
        External_Name => "igInputText";

   function igInputTextMultiline
     (label : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size;
      size : ImVec2;
      flags : ImGuiInputTextFlags;
      callback : ImGuiInputTextCallback;
      user_data : System.Address) return Extensions.bool  -- cimgui.h:2834
   with Import => True,
        Convention => C,
        External_Name => "igInputTextMultiline";

   function igInputTextWithHint
     (label : Interfaces.C.Strings.chars_ptr;
      hint : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size;
      flags : ImGuiInputTextFlags;
      callback : ImGuiInputTextCallback;
      user_data : System.Address) return Extensions.bool  -- cimgui.h:2835
   with Import => True,
        Convention => C,
        External_Name => "igInputTextWithHint";

   function igInputFloat
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      step : float;
      step_fast : float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2836
   with Import => True,
        Convention => C,
        External_Name => "igInputFloat";

   function igInputFloat2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2837
   with Import => True,
        Convention => C,
        External_Name => "igInputFloat2";

   function igInputFloat3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2838
   with Import => True,
        Convention => C,
        External_Name => "igInputFloat3";

   function igInputFloat4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access float;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2839
   with Import => True,
        Convention => C,
        External_Name => "igInputFloat4";

   function igInputInt
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      step : int;
      step_fast : int;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2840
   with Import => True,
        Convention => C,
        External_Name => "igInputInt";

   function igInputInt2
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2841
   with Import => True,
        Convention => C,
        External_Name => "igInputInt2";

   function igInputInt3
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2842
   with Import => True,
        Convention => C,
        External_Name => "igInputInt3";

   function igInputInt4
     (label : Interfaces.C.Strings.chars_ptr;
      v : access int;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2843
   with Import => True,
        Convention => C,
        External_Name => "igInputInt4";

   function igInputDouble
     (label : Interfaces.C.Strings.chars_ptr;
      v : access double;
      step : double;
      step_fast : double;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2844
   with Import => True,
        Convention => C,
        External_Name => "igInputDouble";

   function igInputScalar
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      p_step : System.Address;
      p_step_fast : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2845
   with Import => True,
        Convention => C,
        External_Name => "igInputScalar";

   function igInputScalarN
     (label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      components : int;
      p_step : System.Address;
      p_step_fast : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:2846
   with Import => True,
        Convention => C,
        External_Name => "igInputScalarN";

   function igColorEdit3
     (label : Interfaces.C.Strings.chars_ptr;
      col : access float;
      flags : ImGuiColorEditFlags) return Extensions.bool  -- cimgui.h:2847
   with Import => True,
        Convention => C,
        External_Name => "igColorEdit3";

   function igColorEdit4
     (label : Interfaces.C.Strings.chars_ptr;
      col : access float;
      flags : ImGuiColorEditFlags) return Extensions.bool  -- cimgui.h:2848
   with Import => True,
        Convention => C,
        External_Name => "igColorEdit4";

   function igColorPicker3
     (label : Interfaces.C.Strings.chars_ptr;
      col : access float;
      flags : ImGuiColorEditFlags) return Extensions.bool  -- cimgui.h:2849
   with Import => True,
        Convention => C,
        External_Name => "igColorPicker3";

   function igColorPicker4
     (label : Interfaces.C.Strings.chars_ptr;
      col : access float;
      flags : ImGuiColorEditFlags;
      ref_col : access float) return Extensions.bool  -- cimgui.h:2850
   with Import => True,
        Convention => C,
        External_Name => "igColorPicker4";

   function igColorButton
     (desc_id : Interfaces.C.Strings.chars_ptr;
      col : ImVec4;
      flags : ImGuiColorEditFlags;
      size : ImVec2) return Extensions.bool  -- cimgui.h:2851
   with Import => True,
        Convention => C,
        External_Name => "igColorButton";

   procedure igSetColorEditOptions (flags : ImGuiColorEditFlags)  -- cimgui.h:2852
   with Import => True,
        Convention => C,
        External_Name => "igSetColorEditOptions";

   function igTreeNode_Str (label : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:2853
   with Import => True,
        Convention => C,
        External_Name => "igTreeNode_Str";

   function igTreeNode_StrStr (str_id : Interfaces.C.Strings.chars_ptr; fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return Extensions.bool  -- cimgui.h:2854
   with Import => True,
        Convention => C,
        External_Name => "igTreeNode_StrStr";

   function igTreeNode_Ptr (ptr_id : System.Address; fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return Extensions.bool  -- cimgui.h:2855
   with Import => True,
        Convention => C,
        External_Name => "igTreeNode_Ptr";

   function igTreeNodeV_Str
     (str_id : Interfaces.C.Strings.chars_ptr;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list) return Extensions.bool  -- cimgui.h:2856
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeV_Str";

   function igTreeNodeV_Ptr
     (ptr_id : System.Address;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list) return Extensions.bool  -- cimgui.h:2857
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeV_Ptr";

   function igTreeNodeEx_Str (label : Interfaces.C.Strings.chars_ptr; flags : ImGuiTreeNodeFlags) return Extensions.bool  -- cimgui.h:2858
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeEx_Str";

   function igTreeNodeEx_StrStr
     (str_id : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiTreeNodeFlags;
      fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return Extensions.bool  -- cimgui.h:2859
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeEx_StrStr";

   function igTreeNodeEx_Ptr
     (ptr_id : System.Address;
      flags : ImGuiTreeNodeFlags;
      fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return Extensions.bool  -- cimgui.h:2860
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeEx_Ptr";

   function igTreeNodeExV_Str
     (str_id : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiTreeNodeFlags;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list) return Extensions.bool  -- cimgui.h:2861
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeExV_Str";

   function igTreeNodeExV_Ptr
     (ptr_id : System.Address;
      flags : ImGuiTreeNodeFlags;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list) return Extensions.bool  -- cimgui.h:2862
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeExV_Ptr";

   procedure igTreePush_Str (str_id : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2863
   with Import => True,
        Convention => C,
        External_Name => "igTreePush_Str";

   procedure igTreePush_Ptr (ptr_id : System.Address)  -- cimgui.h:2864
   with Import => True,
        Convention => C,
        External_Name => "igTreePush_Ptr";

   procedure igTreePop  -- cimgui.h:2865
   with Import => True,
        Convention => C,
        External_Name => "igTreePop";

   function igGetTreeNodeToLabelSpacing return float  -- cimgui.h:2866
   with Import => True,
        Convention => C,
        External_Name => "igGetTreeNodeToLabelSpacing";

   function igCollapsingHeader_TreeNodeFlags (label : Interfaces.C.Strings.chars_ptr; flags : ImGuiTreeNodeFlags) return Extensions.bool  -- cimgui.h:2867
   with Import => True,
        Convention => C,
        External_Name => "igCollapsingHeader_TreeNodeFlags";

   function igCollapsingHeader_BoolPtr
     (label : Interfaces.C.Strings.chars_ptr;
      p_visible : access Extensions.bool;
      flags : ImGuiTreeNodeFlags) return Extensions.bool  -- cimgui.h:2868
   with Import => True,
        Convention => C,
        External_Name => "igCollapsingHeader_BoolPtr";

   procedure igSetNextItemOpen (is_open : Extensions.bool; cond : ImGuiCond)  -- cimgui.h:2869
   with Import => True,
        Convention => C,
        External_Name => "igSetNextItemOpen";

   function igSelectable_Bool
     (label : Interfaces.C.Strings.chars_ptr;
      selected : Extensions.bool;
      flags : ImGuiSelectableFlags;
      size : ImVec2) return Extensions.bool  -- cimgui.h:2870
   with Import => True,
        Convention => C,
        External_Name => "igSelectable_Bool";

   function igSelectable_BoolPtr
     (label : Interfaces.C.Strings.chars_ptr;
      p_selected : access Extensions.bool;
      flags : ImGuiSelectableFlags;
      size : ImVec2) return Extensions.bool  -- cimgui.h:2871
   with Import => True,
        Convention => C,
        External_Name => "igSelectable_BoolPtr";

   function igBeginListBox (label : Interfaces.C.Strings.chars_ptr; size : ImVec2) return Extensions.bool  -- cimgui.h:2872
   with Import => True,
        Convention => C,
        External_Name => "igBeginListBox";

   procedure igEndListBox  -- cimgui.h:2873
   with Import => True,
        Convention => C,
        External_Name => "igEndListBox";

   function igListBox_Str_arr
     (label : Interfaces.C.Strings.chars_ptr;
      current_item : access int;
      items : System.Address;
      items_count : int;
      height_in_items : int) return Extensions.bool  -- cimgui.h:2874
   with Import => True,
        Convention => C,
        External_Name => "igListBox_Str_arr";

   function igListBox_FnBoolPtr
     (label : Interfaces.C.Strings.chars_ptr;
      current_item : access int;
      items_getter : access function
        (arg1 : System.Address;
         arg2 : int;
         arg3 : System.Address) return Extensions.bool;
      data : System.Address;
      items_count : int;
      height_in_items : int) return Extensions.bool  -- cimgui.h:2875
   with Import => True,
        Convention => C,
        External_Name => "igListBox_FnBoolPtr";

   procedure igPlotLines_FloatPtr
     (label : Interfaces.C.Strings.chars_ptr;
      values : access float;
      values_count : int;
      values_offset : int;
      overlay_text : Interfaces.C.Strings.chars_ptr;
      scale_min : float;
      scale_max : float;
      graph_size : ImVec2;
      stride : int)  -- cimgui.h:2876
   with Import => True,
        Convention => C,
        External_Name => "igPlotLines_FloatPtr";

   procedure igPlotLines_FnFloatPtr
     (label : Interfaces.C.Strings.chars_ptr;
      values_getter : access function (arg1 : System.Address; arg2 : int) return float;
      data : System.Address;
      values_count : int;
      values_offset : int;
      overlay_text : Interfaces.C.Strings.chars_ptr;
      scale_min : float;
      scale_max : float;
      graph_size : ImVec2)  -- cimgui.h:2877
   with Import => True,
        Convention => C,
        External_Name => "igPlotLines_FnFloatPtr";

   procedure igPlotHistogram_FloatPtr
     (label : Interfaces.C.Strings.chars_ptr;
      values : access float;
      values_count : int;
      values_offset : int;
      overlay_text : Interfaces.C.Strings.chars_ptr;
      scale_min : float;
      scale_max : float;
      graph_size : ImVec2;
      stride : int)  -- cimgui.h:2878
   with Import => True,
        Convention => C,
        External_Name => "igPlotHistogram_FloatPtr";

   procedure igPlotHistogram_FnFloatPtr
     (label : Interfaces.C.Strings.chars_ptr;
      values_getter : access function (arg1 : System.Address; arg2 : int) return float;
      data : System.Address;
      values_count : int;
      values_offset : int;
      overlay_text : Interfaces.C.Strings.chars_ptr;
      scale_min : float;
      scale_max : float;
      graph_size : ImVec2)  -- cimgui.h:2879
   with Import => True,
        Convention => C,
        External_Name => "igPlotHistogram_FnFloatPtr";

   procedure igValue_Bool (prefix : Interfaces.C.Strings.chars_ptr; b : Extensions.bool)  -- cimgui.h:2880
   with Import => True,
        Convention => C,
        External_Name => "igValue_Bool";

   procedure igValue_Int (prefix : Interfaces.C.Strings.chars_ptr; v : int)  -- cimgui.h:2881
   with Import => True,
        Convention => C,
        External_Name => "igValue_Int";

   procedure igValue_Uint (prefix : Interfaces.C.Strings.chars_ptr; v : unsigned)  -- cimgui.h:2882
   with Import => True,
        Convention => C,
        External_Name => "igValue_Uint";

   procedure igValue_Float
     (prefix : Interfaces.C.Strings.chars_ptr;
      v : float;
      float_format : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2883
   with Import => True,
        Convention => C,
        External_Name => "igValue_Float";

   function igBeginMenuBar return Extensions.bool  -- cimgui.h:2884
   with Import => True,
        Convention => C,
        External_Name => "igBeginMenuBar";

   procedure igEndMenuBar  -- cimgui.h:2885
   with Import => True,
        Convention => C,
        External_Name => "igEndMenuBar";

   function igBeginMainMenuBar return Extensions.bool  -- cimgui.h:2886
   with Import => True,
        Convention => C,
        External_Name => "igBeginMainMenuBar";

   procedure igEndMainMenuBar  -- cimgui.h:2887
   with Import => True,
        Convention => C,
        External_Name => "igEndMainMenuBar";

   function igBeginMenu (label : Interfaces.C.Strings.chars_ptr; enabled : Extensions.bool) return Extensions.bool  -- cimgui.h:2888
   with Import => True,
        Convention => C,
        External_Name => "igBeginMenu";

   procedure igEndMenu  -- cimgui.h:2889
   with Import => True,
        Convention => C,
        External_Name => "igEndMenu";

   function igMenuItem_Bool
     (label : Interfaces.C.Strings.chars_ptr;
      shortcut : Interfaces.C.Strings.chars_ptr;
      selected : Extensions.bool;
      enabled : Extensions.bool) return Extensions.bool  -- cimgui.h:2890
   with Import => True,
        Convention => C,
        External_Name => "igMenuItem_Bool";

   function igMenuItem_BoolPtr
     (label : Interfaces.C.Strings.chars_ptr;
      shortcut : Interfaces.C.Strings.chars_ptr;
      p_selected : access Extensions.bool;
      enabled : Extensions.bool) return Extensions.bool  -- cimgui.h:2891
   with Import => True,
        Convention => C,
        External_Name => "igMenuItem_BoolPtr";

   procedure igBeginTooltip  -- cimgui.h:2892
   with Import => True,
        Convention => C,
        External_Name => "igBeginTooltip";

   procedure igEndTooltip  -- cimgui.h:2893
   with Import => True,
        Convention => C,
        External_Name => "igEndTooltip";

   procedure igSetTooltip (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:2894
   with Import => True,
        Convention => C,
        External_Name => "igSetTooltip";

   procedure igSetTooltipV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2895
   with Import => True,
        Convention => C,
        External_Name => "igSetTooltipV";

   function igBeginPopup (str_id : Interfaces.C.Strings.chars_ptr; flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:2896
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopup";

   function igBeginPopupModal
     (name : Interfaces.C.Strings.chars_ptr;
      p_open : access Extensions.bool;
      flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:2897
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopupModal";

   procedure igEndPopup  -- cimgui.h:2898
   with Import => True,
        Convention => C,
        External_Name => "igEndPopup";

   procedure igOpenPopup_Str (str_id : Interfaces.C.Strings.chars_ptr; popup_flags : ImGuiPopupFlags)  -- cimgui.h:2899
   with Import => True,
        Convention => C,
        External_Name => "igOpenPopup_Str";

   procedure igOpenPopup_ID (id : ImGuiID; popup_flags : ImGuiPopupFlags)  -- cimgui.h:2900
   with Import => True,
        Convention => C,
        External_Name => "igOpenPopup_ID";

   procedure igOpenPopupOnItemClick (str_id : Interfaces.C.Strings.chars_ptr; popup_flags : ImGuiPopupFlags)  -- cimgui.h:2901
   with Import => True,
        Convention => C,
        External_Name => "igOpenPopupOnItemClick";

   procedure igCloseCurrentPopup  -- cimgui.h:2902
   with Import => True,
        Convention => C,
        External_Name => "igCloseCurrentPopup";

   function igBeginPopupContextItem (str_id : Interfaces.C.Strings.chars_ptr; popup_flags : ImGuiPopupFlags) return Extensions.bool  -- cimgui.h:2903
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopupContextItem";

   function igBeginPopupContextWindow (str_id : Interfaces.C.Strings.chars_ptr; popup_flags : ImGuiPopupFlags) return Extensions.bool  -- cimgui.h:2904
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopupContextWindow";

   function igBeginPopupContextVoid (str_id : Interfaces.C.Strings.chars_ptr; popup_flags : ImGuiPopupFlags) return Extensions.bool  -- cimgui.h:2905
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopupContextVoid";

   function igIsPopupOpen_Str (str_id : Interfaces.C.Strings.chars_ptr; flags : ImGuiPopupFlags) return Extensions.bool  -- cimgui.h:2906
   with Import => True,
        Convention => C,
        External_Name => "igIsPopupOpen_Str";

   function igBeginTable
     (str_id : Interfaces.C.Strings.chars_ptr;
      column : int;
      flags : ImGuiTableFlags;
      outer_size : ImVec2;
      inner_width : float) return Extensions.bool  -- cimgui.h:2907
   with Import => True,
        Convention => C,
        External_Name => "igBeginTable";

   procedure igEndTable  -- cimgui.h:2908
   with Import => True,
        Convention => C,
        External_Name => "igEndTable";

   procedure igTableNextRow (row_flags : ImGuiTableRowFlags; min_row_height : float)  -- cimgui.h:2909
   with Import => True,
        Convention => C,
        External_Name => "igTableNextRow";

   function igTableNextColumn return Extensions.bool  -- cimgui.h:2910
   with Import => True,
        Convention => C,
        External_Name => "igTableNextColumn";

   function igTableSetColumnIndex (column_n : int) return Extensions.bool  -- cimgui.h:2911
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnIndex";

   procedure igTableSetupColumn
     (label : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiTableColumnFlags;
      init_width_or_weight : float;
      user_id : ImGuiID)  -- cimgui.h:2912
   with Import => True,
        Convention => C,
        External_Name => "igTableSetupColumn";

   procedure igTableSetupScrollFreeze (cols : int; rows : int)  -- cimgui.h:2913
   with Import => True,
        Convention => C,
        External_Name => "igTableSetupScrollFreeze";

   procedure igTableHeadersRow  -- cimgui.h:2914
   with Import => True,
        Convention => C,
        External_Name => "igTableHeadersRow";

   procedure igTableHeader (label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2915
   with Import => True,
        Convention => C,
        External_Name => "igTableHeader";

   function igTableGetSortSpecs return access ImGuiTableSortSpecs  -- cimgui.h:2916
   with Import => True,
        Convention => C,
        External_Name => "igTableGetSortSpecs";

   function igTableGetColumnCount return int  -- cimgui.h:2917
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnCount";

   function igTableGetColumnIndex return int  -- cimgui.h:2918
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnIndex";

   function igTableGetRowIndex return int  -- cimgui.h:2919
   with Import => True,
        Convention => C,
        External_Name => "igTableGetRowIndex";

   function igTableGetColumnName_Int (column_n : int) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:2920
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnName_Int";

   function igTableGetColumnFlags (column_n : int) return ImGuiTableColumnFlags  -- cimgui.h:2921
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnFlags";

   procedure igTableSetColumnEnabled (column_n : int; v : Extensions.bool)  -- cimgui.h:2922
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnEnabled";

   procedure igTableSetBgColor
     (target : ImGuiTableBgTarget;
      color : ImU32;
      column_n : int)  -- cimgui.h:2923
   with Import => True,
        Convention => C,
        External_Name => "igTableSetBgColor";

   procedure igColumns
     (count : int;
      id : Interfaces.C.Strings.chars_ptr;
      border : Extensions.bool)  -- cimgui.h:2924
   with Import => True,
        Convention => C,
        External_Name => "igColumns";

   procedure igNextColumn  -- cimgui.h:2925
   with Import => True,
        Convention => C,
        External_Name => "igNextColumn";

   function igGetColumnIndex return int  -- cimgui.h:2926
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnIndex";

   function igGetColumnWidth (column_index : int) return float  -- cimgui.h:2927
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnWidth";

   procedure igSetColumnWidth (column_index : int; width : float)  -- cimgui.h:2928
   with Import => True,
        Convention => C,
        External_Name => "igSetColumnWidth";

   function igGetColumnOffset (column_index : int) return float  -- cimgui.h:2929
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnOffset";

   procedure igSetColumnOffset (column_index : int; offset_x : float)  -- cimgui.h:2930
   with Import => True,
        Convention => C,
        External_Name => "igSetColumnOffset";

   function igGetColumnsCount return int  -- cimgui.h:2931
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnsCount";

   function igBeginTabBar (str_id : Interfaces.C.Strings.chars_ptr; flags : ImGuiTabBarFlags) return Extensions.bool  -- cimgui.h:2932
   with Import => True,
        Convention => C,
        External_Name => "igBeginTabBar";

   procedure igEndTabBar  -- cimgui.h:2933
   with Import => True,
        Convention => C,
        External_Name => "igEndTabBar";

   function igBeginTabItem
     (label : Interfaces.C.Strings.chars_ptr;
      p_open : access Extensions.bool;
      flags : ImGuiTabItemFlags) return Extensions.bool  -- cimgui.h:2934
   with Import => True,
        Convention => C,
        External_Name => "igBeginTabItem";

   procedure igEndTabItem  -- cimgui.h:2935
   with Import => True,
        Convention => C,
        External_Name => "igEndTabItem";

   function igTabItemButton (label : Interfaces.C.Strings.chars_ptr; flags : ImGuiTabItemFlags) return Extensions.bool  -- cimgui.h:2936
   with Import => True,
        Convention => C,
        External_Name => "igTabItemButton";

   procedure igSetTabItemClosed (tab_or_docked_window_label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2937
   with Import => True,
        Convention => C,
        External_Name => "igSetTabItemClosed";

   procedure igLogToTTY (auto_open_depth : int)  -- cimgui.h:2938
   with Import => True,
        Convention => C,
        External_Name => "igLogToTTY";

   procedure igLogToFile (auto_open_depth : int; filename : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:2939
   with Import => True,
        Convention => C,
        External_Name => "igLogToFile";

   procedure igLogToClipboard (auto_open_depth : int)  -- cimgui.h:2940
   with Import => True,
        Convention => C,
        External_Name => "igLogToClipboard";

   procedure igLogFinish  -- cimgui.h:2941
   with Import => True,
        Convention => C,
        External_Name => "igLogFinish";

   procedure igLogButtons  -- cimgui.h:2942
   with Import => True,
        Convention => C,
        External_Name => "igLogButtons";

   procedure igLogTextV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:2943
   with Import => True,
        Convention => C,
        External_Name => "igLogTextV";

   function igBeginDragDropSource (flags : ImGuiDragDropFlags) return Extensions.bool  -- cimgui.h:2944
   with Import => True,
        Convention => C,
        External_Name => "igBeginDragDropSource";

   function igSetDragDropPayload
     (c_type : Interfaces.C.Strings.chars_ptr;
      data : System.Address;
      sz : T_Size;
      cond : ImGuiCond) return Extensions.bool  -- cimgui.h:2945
   with Import => True,
        Convention => C,
        External_Name => "igSetDragDropPayload";

   procedure igEndDragDropSource  -- cimgui.h:2946
   with Import => True,
        Convention => C,
        External_Name => "igEndDragDropSource";

   function igBeginDragDropTarget return Extensions.bool  -- cimgui.h:2947
   with Import => True,
        Convention => C,
        External_Name => "igBeginDragDropTarget";

   function igAcceptDragDropPayload (c_type : Interfaces.C.Strings.chars_ptr; flags : ImGuiDragDropFlags) return access constant ImGuiPayload  -- cimgui.h:2948
   with Import => True,
        Convention => C,
        External_Name => "igAcceptDragDropPayload";

   procedure igEndDragDropTarget  -- cimgui.h:2949
   with Import => True,
        Convention => C,
        External_Name => "igEndDragDropTarget";

   function igGetDragDropPayload return access constant ImGuiPayload  -- cimgui.h:2950
   with Import => True,
        Convention => C,
        External_Name => "igGetDragDropPayload";

   procedure igBeginDisabled (disabled : Extensions.bool)  -- cimgui.h:2951
   with Import => True,
        Convention => C,
        External_Name => "igBeginDisabled";

   procedure igEndDisabled  -- cimgui.h:2952
   with Import => True,
        Convention => C,
        External_Name => "igEndDisabled";

   procedure igPushClipRect
     (clip_rect_min : ImVec2;
      clip_rect_max : ImVec2;
      intersect_with_current_clip_rect : Extensions.bool)  -- cimgui.h:2953
   with Import => True,
        Convention => C,
        External_Name => "igPushClipRect";

   procedure igPopClipRect  -- cimgui.h:2954
   with Import => True,
        Convention => C,
        External_Name => "igPopClipRect";

   procedure igSetItemDefaultFocus  -- cimgui.h:2955
   with Import => True,
        Convention => C,
        External_Name => "igSetItemDefaultFocus";

   procedure igSetKeyboardFocusHere (offset : int)  -- cimgui.h:2956
   with Import => True,
        Convention => C,
        External_Name => "igSetKeyboardFocusHere";

   function igIsItemHovered (flags : ImGuiHoveredFlags) return Extensions.bool  -- cimgui.h:2957
   with Import => True,
        Convention => C,
        External_Name => "igIsItemHovered";

   function igIsItemActive return Extensions.bool  -- cimgui.h:2958
   with Import => True,
        Convention => C,
        External_Name => "igIsItemActive";

   function igIsItemFocused return Extensions.bool  -- cimgui.h:2959
   with Import => True,
        Convention => C,
        External_Name => "igIsItemFocused";

   function igIsItemClicked (mouse_button : ImGuiMouseButton) return Extensions.bool  -- cimgui.h:2960
   with Import => True,
        Convention => C,
        External_Name => "igIsItemClicked";

   function igIsItemVisible return Extensions.bool  -- cimgui.h:2961
   with Import => True,
        Convention => C,
        External_Name => "igIsItemVisible";

   function igIsItemEdited return Extensions.bool  -- cimgui.h:2962
   with Import => True,
        Convention => C,
        External_Name => "igIsItemEdited";

   function igIsItemActivated return Extensions.bool  -- cimgui.h:2963
   with Import => True,
        Convention => C,
        External_Name => "igIsItemActivated";

   function igIsItemDeactivated return Extensions.bool  -- cimgui.h:2964
   with Import => True,
        Convention => C,
        External_Name => "igIsItemDeactivated";

   function igIsItemDeactivatedAfterEdit return Extensions.bool  -- cimgui.h:2965
   with Import => True,
        Convention => C,
        External_Name => "igIsItemDeactivatedAfterEdit";

   function igIsItemToggledOpen return Extensions.bool  -- cimgui.h:2966
   with Import => True,
        Convention => C,
        External_Name => "igIsItemToggledOpen";

   function igIsAnyItemHovered return Extensions.bool  -- cimgui.h:2967
   with Import => True,
        Convention => C,
        External_Name => "igIsAnyItemHovered";

   function igIsAnyItemActive return Extensions.bool  -- cimgui.h:2968
   with Import => True,
        Convention => C,
        External_Name => "igIsAnyItemActive";

   function igIsAnyItemFocused return Extensions.bool  -- cimgui.h:2969
   with Import => True,
        Convention => C,
        External_Name => "igIsAnyItemFocused";

   procedure igGetItemRectMin (pOut : access ImVec2)  -- cimgui.h:2970
   with Import => True,
        Convention => C,
        External_Name => "igGetItemRectMin";

   procedure igGetItemRectMax (pOut : access ImVec2)  -- cimgui.h:2971
   with Import => True,
        Convention => C,
        External_Name => "igGetItemRectMax";

   procedure igGetItemRectSize (pOut : access ImVec2)  -- cimgui.h:2972
   with Import => True,
        Convention => C,
        External_Name => "igGetItemRectSize";

   procedure igSetItemAllowOverlap  -- cimgui.h:2973
   with Import => True,
        Convention => C,
        External_Name => "igSetItemAllowOverlap";

   function igGetMainViewport return access ImGuiViewport  -- cimgui.h:2974
   with Import => True,
        Convention => C,
        External_Name => "igGetMainViewport";

   function igGetBackgroundDrawList_Nil return access ImDrawList  -- cimgui.h:2975
   with Import => True,
        Convention => C,
        External_Name => "igGetBackgroundDrawList_Nil";

   function igGetForegroundDrawList_Nil return access ImDrawList  -- cimgui.h:2976
   with Import => True,
        Convention => C,
        External_Name => "igGetForegroundDrawList_Nil";

   function igIsRectVisible_Nil (size : ImVec2) return Extensions.bool  -- cimgui.h:2977
   with Import => True,
        Convention => C,
        External_Name => "igIsRectVisible_Nil";

   function igIsRectVisible_Vec2 (rect_min : ImVec2; rect_max : ImVec2) return Extensions.bool  -- cimgui.h:2978
   with Import => True,
        Convention => C,
        External_Name => "igIsRectVisible_Vec2";

   function igGetTime return double  -- cimgui.h:2979
   with Import => True,
        Convention => C,
        External_Name => "igGetTime";

   function igGetFrameCount return int  -- cimgui.h:2980
   with Import => True,
        Convention => C,
        External_Name => "igGetFrameCount";

   function igGetDrawListSharedData return access ImDrawListSharedData  -- cimgui.h:2981
   with Import => True,
        Convention => C,
        External_Name => "igGetDrawListSharedData";

   function igGetStyleColorName (idx : ImGuiCol) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:2982
   with Import => True,
        Convention => C,
        External_Name => "igGetStyleColorName";

   procedure igSetStateStorage (storage : access ImGuiStorage)  -- cimgui.h:2983
   with Import => True,
        Convention => C,
        External_Name => "igSetStateStorage";

   function igGetStateStorage return access ImGuiStorage  -- cimgui.h:2984
   with Import => True,
        Convention => C,
        External_Name => "igGetStateStorage";

   function igBeginChildFrame
     (id : ImGuiID;
      size : ImVec2;
      flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:2985
   with Import => True,
        Convention => C,
        External_Name => "igBeginChildFrame";

   procedure igEndChildFrame  -- cimgui.h:2986
   with Import => True,
        Convention => C,
        External_Name => "igEndChildFrame";

   procedure igCalcTextSize
     (pOut : access ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      hide_text_after_double_hash : Extensions.bool;
      wrap_width : float)  -- cimgui.h:2987
   with Import => True,
        Convention => C,
        External_Name => "igCalcTextSize";

   procedure igColorConvertU32ToFloat4 (pOut : access ImVec4; c_in : ImU32)  -- cimgui.h:2988
   with Import => True,
        Convention => C,
        External_Name => "igColorConvertU32ToFloat4";

   function igColorConvertFloat4ToU32 (c_in : ImVec4) return ImU32  -- cimgui.h:2989
   with Import => True,
        Convention => C,
        External_Name => "igColorConvertFloat4ToU32";

   procedure igColorConvertRGBtoHSV
     (r : float;
      g : float;
      b : float;
      out_h : access float;
      out_s : access float;
      out_v : access float)  -- cimgui.h:2990
   with Import => True,
        Convention => C,
        External_Name => "igColorConvertRGBtoHSV";

   procedure igColorConvertHSVtoRGB
     (h : float;
      s : float;
      v : float;
      out_r : access float;
      out_g : access float;
      out_b : access float)  -- cimgui.h:2991
   with Import => True,
        Convention => C,
        External_Name => "igColorConvertHSVtoRGB";

   function igIsKeyDown (key : ImGuiKey) return Extensions.bool  -- cimgui.h:2992
   with Import => True,
        Convention => C,
        External_Name => "igIsKeyDown";

   function igIsKeyPressed (key : ImGuiKey; repeat : Extensions.bool) return Extensions.bool  -- cimgui.h:2993
   with Import => True,
        Convention => C,
        External_Name => "igIsKeyPressed";

   function igIsKeyReleased (key : ImGuiKey) return Extensions.bool  -- cimgui.h:2994
   with Import => True,
        Convention => C,
        External_Name => "igIsKeyReleased";

   function igGetKeyPressedAmount
     (key : ImGuiKey;
      repeat_delay : float;
      rate : float) return int  -- cimgui.h:2995
   with Import => True,
        Convention => C,
        External_Name => "igGetKeyPressedAmount";

   function igGetKeyName (key : ImGuiKey) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:2996
   with Import => True,
        Convention => C,
        External_Name => "igGetKeyName";

   procedure igSetNextFrameWantCaptureKeyboard (want_capture_keyboard : Extensions.bool)  -- cimgui.h:2997
   with Import => True,
        Convention => C,
        External_Name => "igSetNextFrameWantCaptureKeyboard";

   function igIsMouseDown (button : ImGuiMouseButton) return Extensions.bool  -- cimgui.h:2998
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseDown";

   function igIsMouseClicked (button : ImGuiMouseButton; repeat : Extensions.bool) return Extensions.bool  -- cimgui.h:2999
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseClicked";

   function igIsMouseReleased (button : ImGuiMouseButton) return Extensions.bool  -- cimgui.h:3000
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseReleased";

   function igIsMouseDoubleClicked (button : ImGuiMouseButton) return Extensions.bool  -- cimgui.h:3001
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseDoubleClicked";

   function igGetMouseClickedCount (button : ImGuiMouseButton) return int  -- cimgui.h:3002
   with Import => True,
        Convention => C,
        External_Name => "igGetMouseClickedCount";

   function igIsMouseHoveringRect
     (r_min : ImVec2;
      r_max : ImVec2;
      clip : Extensions.bool) return Extensions.bool  -- cimgui.h:3003
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseHoveringRect";

   function igIsMousePosValid (mouse_pos : access constant ImVec2) return Extensions.bool  -- cimgui.h:3004
   with Import => True,
        Convention => C,
        External_Name => "igIsMousePosValid";

   function igIsAnyMouseDown return Extensions.bool  -- cimgui.h:3005
   with Import => True,
        Convention => C,
        External_Name => "igIsAnyMouseDown";

   procedure igGetMousePos (pOut : access ImVec2)  -- cimgui.h:3006
   with Import => True,
        Convention => C,
        External_Name => "igGetMousePos";

   procedure igGetMousePosOnOpeningCurrentPopup (pOut : access ImVec2)  -- cimgui.h:3007
   with Import => True,
        Convention => C,
        External_Name => "igGetMousePosOnOpeningCurrentPopup";

   function igIsMouseDragging (button : ImGuiMouseButton; lock_threshold : float) return Extensions.bool  -- cimgui.h:3008
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseDragging";

   procedure igGetMouseDragDelta
     (pOut : access ImVec2;
      button : ImGuiMouseButton;
      lock_threshold : float)  -- cimgui.h:3009
   with Import => True,
        Convention => C,
        External_Name => "igGetMouseDragDelta";

   procedure igResetMouseDragDelta (button : ImGuiMouseButton)  -- cimgui.h:3010
   with Import => True,
        Convention => C,
        External_Name => "igResetMouseDragDelta";

   function igGetMouseCursor return ImGuiMouseCursor  -- cimgui.h:3011
   with Import => True,
        Convention => C,
        External_Name => "igGetMouseCursor";

   procedure igSetMouseCursor (cursor_type : ImGuiMouseCursor)  -- cimgui.h:3012
   with Import => True,
        Convention => C,
        External_Name => "igSetMouseCursor";

   procedure igSetNextFrameWantCaptureMouse (want_capture_mouse : Extensions.bool)  -- cimgui.h:3013
   with Import => True,
        Convention => C,
        External_Name => "igSetNextFrameWantCaptureMouse";

   function igGetClipboardText return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3014
   with Import => True,
        Convention => C,
        External_Name => "igGetClipboardText";

   procedure igSetClipboardText (text : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3015
   with Import => True,
        Convention => C,
        External_Name => "igSetClipboardText";

   procedure igLoadIniSettingsFromDisk (ini_filename : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3016
   with Import => True,
        Convention => C,
        External_Name => "igLoadIniSettingsFromDisk";

   procedure igLoadIniSettingsFromMemory (ini_data : Interfaces.C.Strings.chars_ptr; ini_size : T_Size)  -- cimgui.h:3017
   with Import => True,
        Convention => C,
        External_Name => "igLoadIniSettingsFromMemory";

   procedure igSaveIniSettingsToDisk (ini_filename : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3018
   with Import => True,
        Convention => C,
        External_Name => "igSaveIniSettingsToDisk";

   function igSaveIniSettingsToMemory (out_ini_size : access T_Size) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3019
   with Import => True,
        Convention => C,
        External_Name => "igSaveIniSettingsToMemory";

   procedure igDebugTextEncoding (text : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3020
   with Import => True,
        Convention => C,
        External_Name => "igDebugTextEncoding";

   function igDebugCheckVersionAndDataLayout
     (version_str : Interfaces.C.Strings.chars_ptr;
      sz_io : T_Size;
      sz_style : T_Size;
      sz_vec2 : T_Size;
      sz_vec4 : T_Size;
      sz_drawvert : T_Size;
      sz_drawidx : T_Size) return Extensions.bool  -- cimgui.h:3021
   with Import => True,
        Convention => C,
        External_Name => "igDebugCheckVersionAndDataLayout";

   procedure igSetAllocatorFunctions
     (alloc_func : ImGuiMemAllocFunc;
      free_func : ImGuiMemFreeFunc;
      user_data : System.Address)  -- cimgui.h:3022
   with Import => True,
        Convention => C,
        External_Name => "igSetAllocatorFunctions";

   procedure igGetAllocatorFunctions
     (p_alloc_func : System.Address;
      p_free_func : System.Address;
      p_user_data : System.Address)  -- cimgui.h:3023
   with Import => True,
        Convention => C,
        External_Name => "igGetAllocatorFunctions";

   function igMemAlloc (size : T_Size) return System.Address  -- cimgui.h:3024
   with Import => True,
        Convention => C,
        External_Name => "igMemAlloc";

   procedure igMemFree (ptr : System.Address)  -- cimgui.h:3025
   with Import => True,
        Convention => C,
        External_Name => "igMemFree";

   function ImGuiStyle_ImGuiStyle return access ImGuiStyle  -- cimgui.h:3026
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyle_ImGuiStyle";

   procedure ImGuiStyle_destroy (self : access ImGuiStyle)  -- cimgui.h:3027
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyle_destroy";

   procedure ImGuiStyle_ScaleAllSizes (self : access ImGuiStyle; scale_factor : float)  -- cimgui.h:3028
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyle_ScaleAllSizes";

   procedure ImGuiIO_AddKeyEvent
     (self : access ImGuiIO;
      key : ImGuiKey;
      down : Extensions.bool)  -- cimgui.h:3029
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddKeyEvent";

   procedure ImGuiIO_AddKeyAnalogEvent
     (self : access ImGuiIO;
      key : ImGuiKey;
      down : Extensions.bool;
      v : float)  -- cimgui.h:3030
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddKeyAnalogEvent";

   procedure ImGuiIO_AddMousePosEvent
     (self : access ImGuiIO;
      x : float;
      y : float)  -- cimgui.h:3031
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddMousePosEvent";

   procedure ImGuiIO_AddMouseButtonEvent
     (self : access ImGuiIO;
      button : int;
      down : Extensions.bool)  -- cimgui.h:3032
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddMouseButtonEvent";

   procedure ImGuiIO_AddMouseWheelEvent
     (self : access ImGuiIO;
      wh_x : float;
      wh_y : float)  -- cimgui.h:3033
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddMouseWheelEvent";

   procedure ImGuiIO_AddFocusEvent (self : access ImGuiIO; focused : Extensions.bool)  -- cimgui.h:3034
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddFocusEvent";

   procedure ImGuiIO_AddInputCharacter (self : access ImGuiIO; c : unsigned)  -- cimgui.h:3035
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddInputCharacter";

   procedure ImGuiIO_AddInputCharacterUTF16 (self : access ImGuiIO; c : ImWchar16)  -- cimgui.h:3036
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddInputCharacterUTF16";

   procedure ImGuiIO_AddInputCharactersUTF8 (self : access ImGuiIO; str : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3037
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_AddInputCharactersUTF8";

   procedure ImGuiIO_SetKeyEventNativeData
     (self : access ImGuiIO;
      key : ImGuiKey;
      native_keycode : int;
      native_scancode : int;
      native_legacy_index : int)  -- cimgui.h:3038
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_SetKeyEventNativeData";

   procedure ImGuiIO_SetAppAcceptingEvents (self : access ImGuiIO; accepting_events : Extensions.bool)  -- cimgui.h:3039
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_SetAppAcceptingEvents";

   procedure ImGuiIO_ClearInputCharacters (self : access ImGuiIO)  -- cimgui.h:3040
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_ClearInputCharacters";

   procedure ImGuiIO_ClearInputKeys (self : access ImGuiIO)  -- cimgui.h:3041
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_ClearInputKeys";

   function ImGuiIO_ImGuiIO return access ImGuiIO  -- cimgui.h:3042
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_ImGuiIO";

   procedure ImGuiIO_destroy (self : access ImGuiIO)  -- cimgui.h:3043
   with Import => True,
        Convention => C,
        External_Name => "ImGuiIO_destroy";

   function ImGuiInputTextCallbackData_ImGuiInputTextCallbackData return access ImGuiInputTextCallbackData  -- cimgui.h:3044
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_ImGuiInputTextCallbackData";

   procedure ImGuiInputTextCallbackData_destroy (self : access ImGuiInputTextCallbackData)  -- cimgui.h:3045
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_destroy";

   procedure ImGuiInputTextCallbackData_DeleteChars
     (self : access ImGuiInputTextCallbackData;
      pos : int;
      bytes_count : int)  -- cimgui.h:3046
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_DeleteChars";

   procedure ImGuiInputTextCallbackData_InsertChars
     (self : access ImGuiInputTextCallbackData;
      pos : int;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3047
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_InsertChars";

   procedure ImGuiInputTextCallbackData_SelectAll (self : access ImGuiInputTextCallbackData)  -- cimgui.h:3048
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_SelectAll";

   procedure ImGuiInputTextCallbackData_ClearSelection (self : access ImGuiInputTextCallbackData)  -- cimgui.h:3049
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_ClearSelection";

   function ImGuiInputTextCallbackData_HasSelection (self : access ImGuiInputTextCallbackData) return Extensions.bool  -- cimgui.h:3050
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextCallbackData_HasSelection";

   function ImGuiPayload_ImGuiPayload return access ImGuiPayload  -- cimgui.h:3051
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_ImGuiPayload";

   procedure ImGuiPayload_destroy (self : access ImGuiPayload)  -- cimgui.h:3052
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_destroy";

   procedure ImGuiPayload_Clear (self : access ImGuiPayload)  -- cimgui.h:3053
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_Clear";

   function ImGuiPayload_IsDataType (self : access ImGuiPayload; c_type : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:3054
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_IsDataType";

   function ImGuiPayload_IsPreview (self : access ImGuiPayload) return Extensions.bool  -- cimgui.h:3055
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_IsPreview";

   function ImGuiPayload_IsDelivery (self : access ImGuiPayload) return Extensions.bool  -- cimgui.h:3056
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPayload_IsDelivery";

   function ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs return access ImGuiTableColumnSortSpecs  -- cimgui.h:3057
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs";

   procedure ImGuiTableColumnSortSpecs_destroy (self : access ImGuiTableColumnSortSpecs)  -- cimgui.h:3058
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumnSortSpecs_destroy";

   function ImGuiTableSortSpecs_ImGuiTableSortSpecs return access ImGuiTableSortSpecs  -- cimgui.h:3059
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableSortSpecs_ImGuiTableSortSpecs";

   procedure ImGuiTableSortSpecs_destroy (self : access ImGuiTableSortSpecs)  -- cimgui.h:3060
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableSortSpecs_destroy";

   function ImGuiOnceUponAFrame_ImGuiOnceUponAFrame return access ImGuiOnceUponAFrame  -- cimgui.h:3061
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOnceUponAFrame_ImGuiOnceUponAFrame";

   procedure ImGuiOnceUponAFrame_destroy (self : access ImGuiOnceUponAFrame)  -- cimgui.h:3062
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOnceUponAFrame_destroy";

   function ImGuiTextFilter_ImGuiTextFilter (default_filter : Interfaces.C.Strings.chars_ptr) return access ImGuiTextFilter  -- cimgui.h:3063
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_ImGuiTextFilter";

   procedure ImGuiTextFilter_destroy (self : access ImGuiTextFilter)  -- cimgui.h:3064
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_destroy";

   function ImGuiTextFilter_Draw
     (self : access ImGuiTextFilter;
      label : Interfaces.C.Strings.chars_ptr;
      width : float) return Extensions.bool  -- cimgui.h:3065
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_Draw";

   function ImGuiTextFilter_PassFilter
     (self : access ImGuiTextFilter;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:3066
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_PassFilter";

   procedure ImGuiTextFilter_Build (self : access ImGuiTextFilter)  -- cimgui.h:3067
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_Build";

   procedure ImGuiTextFilter_Clear (self : access ImGuiTextFilter)  -- cimgui.h:3068
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_Clear";

   function ImGuiTextFilter_IsActive (self : access ImGuiTextFilter) return Extensions.bool  -- cimgui.h:3069
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextFilter_IsActive";

   function ImGuiTextRange_ImGuiTextRange_Nil return access ImGuiTextRange  -- cimgui.h:3070
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextRange_ImGuiTextRange_Nil";

   procedure ImGuiTextRange_destroy (self : access ImGuiTextRange)  -- cimgui.h:3071
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextRange_destroy";

   function ImGuiTextRange_ImGuiTextRange_Str (u_b : Interfaces.C.Strings.chars_ptr; u_e : Interfaces.C.Strings.chars_ptr) return access ImGuiTextRange  -- cimgui.h:3072
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextRange_ImGuiTextRange_Str";

   function ImGuiTextRange_empty (self : access ImGuiTextRange) return Extensions.bool  -- cimgui.h:3073
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextRange_empty";

   procedure ImGuiTextRange_split
     (self : access ImGuiTextRange;
      separator : char;
      c_out : access ImVector_ImGuiTextRange)  -- cimgui.h:3074
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextRange_split";

   function ImGuiTextBuffer_ImGuiTextBuffer return access ImGuiTextBuffer  -- cimgui.h:3075
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_ImGuiTextBuffer";

   procedure ImGuiTextBuffer_destroy (self : access ImGuiTextBuffer)  -- cimgui.h:3076
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_destroy";

   function ImGuiTextBuffer_begin (self : access ImGuiTextBuffer) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3077
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_begin";

   function ImGuiTextBuffer_end (self : access ImGuiTextBuffer) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3078
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_end";

   function ImGuiTextBuffer_size (self : access ImGuiTextBuffer) return int  -- cimgui.h:3079
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_size";

   function ImGuiTextBuffer_empty (self : access ImGuiTextBuffer) return Extensions.bool  -- cimgui.h:3080
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_empty";

   procedure ImGuiTextBuffer_clear (self : access ImGuiTextBuffer)  -- cimgui.h:3081
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_clear";

   procedure ImGuiTextBuffer_reserve (self : access ImGuiTextBuffer; capacity : int)  -- cimgui.h:3082
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_reserve";

   function ImGuiTextBuffer_c_str (self : access ImGuiTextBuffer) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3083
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_c_str";

   procedure ImGuiTextBuffer_append
     (self : access ImGuiTextBuffer;
      str : Interfaces.C.Strings.chars_ptr;
      str_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3084
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_append";

   procedure ImGuiTextBuffer_appendfv
     (self : access ImGuiTextBuffer;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list)  -- cimgui.h:3085
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_appendfv";

   function ImGuiStoragePair_ImGuiStoragePair_Int (u_key : ImGuiID; u_val_i : int) return access ImGuiStoragePair  -- cimgui.h:3086
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStoragePair_ImGuiStoragePair_Int";

   procedure ImGuiStoragePair_destroy (self : access ImGuiStoragePair)  -- cimgui.h:3087
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStoragePair_destroy";

   function ImGuiStoragePair_ImGuiStoragePair_Float (u_key : ImGuiID; u_val_f : float) return access ImGuiStoragePair  -- cimgui.h:3088
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStoragePair_ImGuiStoragePair_Float";

   function ImGuiStoragePair_ImGuiStoragePair_Ptr (u_key : ImGuiID; u_val_p : System.Address) return access ImGuiStoragePair  -- cimgui.h:3089
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStoragePair_ImGuiStoragePair_Ptr";

   procedure ImGuiStorage_Clear (self : access ImGuiStorage)  -- cimgui.h:3090
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_Clear";

   function ImGuiStorage_GetInt
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : int) return int  -- cimgui.h:3091
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetInt";

   procedure ImGuiStorage_SetInt
     (self : access ImGuiStorage;
      key : ImGuiID;
      val : int)  -- cimgui.h:3092
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_SetInt";

   function ImGuiStorage_GetBool
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : Extensions.bool) return Extensions.bool  -- cimgui.h:3093
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetBool";

   procedure ImGuiStorage_SetBool
     (self : access ImGuiStorage;
      key : ImGuiID;
      val : Extensions.bool)  -- cimgui.h:3094
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_SetBool";

   function ImGuiStorage_GetFloat
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : float) return float  -- cimgui.h:3095
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetFloat";

   procedure ImGuiStorage_SetFloat
     (self : access ImGuiStorage;
      key : ImGuiID;
      val : float)  -- cimgui.h:3096
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_SetFloat";

   function ImGuiStorage_GetVoidPtr (self : access ImGuiStorage; key : ImGuiID) return System.Address  -- cimgui.h:3097
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetVoidPtr";

   procedure ImGuiStorage_SetVoidPtr
     (self : access ImGuiStorage;
      key : ImGuiID;
      val : System.Address)  -- cimgui.h:3098
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_SetVoidPtr";

   function ImGuiStorage_GetIntRef
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : int) return access int  -- cimgui.h:3099
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetIntRef";

   function ImGuiStorage_GetBoolRef
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : Extensions.bool) return access Extensions.bool  -- cimgui.h:3100
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetBoolRef";

   function ImGuiStorage_GetFloatRef
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : float) return access float  -- cimgui.h:3101
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetFloatRef";

   function ImGuiStorage_GetVoidPtrRef
     (self : access ImGuiStorage;
      key : ImGuiID;
      default_val : System.Address) return System.Address  -- cimgui.h:3102
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_GetVoidPtrRef";

   procedure ImGuiStorage_SetAllInt (self : access ImGuiStorage; val : int)  -- cimgui.h:3103
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_SetAllInt";

   procedure ImGuiStorage_BuildSortByKey (self : access ImGuiStorage)  -- cimgui.h:3104
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStorage_BuildSortByKey";

   function ImGuiListClipper_ImGuiListClipper return access ImGuiListClipper  -- cimgui.h:3105
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_ImGuiListClipper";

   procedure ImGuiListClipper_destroy (self : access ImGuiListClipper)  -- cimgui.h:3106
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_destroy";

   procedure ImGuiListClipper_Begin
     (self : access ImGuiListClipper;
      items_count : int;
      items_height : float)  -- cimgui.h:3107
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_Begin";

   procedure ImGuiListClipper_End (self : access ImGuiListClipper)  -- cimgui.h:3108
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_End";

   function ImGuiListClipper_Step (self : access ImGuiListClipper) return Extensions.bool  -- cimgui.h:3109
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_Step";

   procedure ImGuiListClipper_ForceDisplayRangeByIndices
     (self : access ImGuiListClipper;
      item_min : int;
      item_max : int)  -- cimgui.h:3110
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipper_ForceDisplayRangeByIndices";

   function ImColor_ImColor_Nil return access ImColor  -- cimgui.h:3111
   with Import => True,
        Convention => C,
        External_Name => "ImColor_ImColor_Nil";

   procedure ImColor_destroy (self : access ImColor)  -- cimgui.h:3112
   with Import => True,
        Convention => C,
        External_Name => "ImColor_destroy";

   function ImColor_ImColor_Float
     (r : float;
      g : float;
      b : float;
      a : float) return access ImColor  -- cimgui.h:3113
   with Import => True,
        Convention => C,
        External_Name => "ImColor_ImColor_Float";

   function ImColor_ImColor_Vec4 (col : ImVec4) return access ImColor  -- cimgui.h:3114
   with Import => True,
        Convention => C,
        External_Name => "ImColor_ImColor_Vec4";

   function ImColor_ImColor_Int
     (r : int;
      g : int;
      b : int;
      a : int) return access ImColor  -- cimgui.h:3115
   with Import => True,
        Convention => C,
        External_Name => "ImColor_ImColor_Int";

   function ImColor_ImColor_U32 (rgba : ImU32) return access ImColor  -- cimgui.h:3116
   with Import => True,
        Convention => C,
        External_Name => "ImColor_ImColor_U32";

   procedure ImColor_SetHSV
     (self : access ImColor;
      h : float;
      s : float;
      v : float;
      a : float)  -- cimgui.h:3117
   with Import => True,
        Convention => C,
        External_Name => "ImColor_SetHSV";

   procedure ImColor_HSV
     (pOut : access ImColor;
      h : float;
      s : float;
      v : float;
      a : float)  -- cimgui.h:3118
   with Import => True,
        Convention => C,
        External_Name => "ImColor_HSV";

   function ImDrawCmd_ImDrawCmd return access ImDrawCmd  -- cimgui.h:3119
   with Import => True,
        Convention => C,
        External_Name => "ImDrawCmd_ImDrawCmd";

   procedure ImDrawCmd_destroy (self : access ImDrawCmd)  -- cimgui.h:3120
   with Import => True,
        Convention => C,
        External_Name => "ImDrawCmd_destroy";

   function ImDrawCmd_GetTexID (self : access ImDrawCmd) return ImTextureID  -- cimgui.h:3121
   with Import => True,
        Convention => C,
        External_Name => "ImDrawCmd_GetTexID";

   function ImDrawListSplitter_ImDrawListSplitter return access ImDrawListSplitter  -- cimgui.h:3122
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_ImDrawListSplitter";

   procedure ImDrawListSplitter_destroy (self : access ImDrawListSplitter)  -- cimgui.h:3123
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_destroy";

   procedure ImDrawListSplitter_Clear (self : access ImDrawListSplitter)  -- cimgui.h:3124
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_Clear";

   procedure ImDrawListSplitter_ClearFreeMemory (self : access ImDrawListSplitter)  -- cimgui.h:3125
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_ClearFreeMemory";

   procedure ImDrawListSplitter_Split
     (self : access ImDrawListSplitter;
      draw_list : access ImDrawList;
      count : int)  -- cimgui.h:3126
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_Split";

   procedure ImDrawListSplitter_Merge (self : access ImDrawListSplitter; draw_list : access ImDrawList)  -- cimgui.h:3127
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_Merge";

   procedure ImDrawListSplitter_SetCurrentChannel
     (self : access ImDrawListSplitter;
      draw_list : access ImDrawList;
      channel_idx : int)  -- cimgui.h:3128
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSplitter_SetCurrentChannel";

   function ImDrawList_ImDrawList (shared_data : access constant ImDrawListSharedData) return access ImDrawList  -- cimgui.h:3129
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_ImDrawList";

   procedure ImDrawList_destroy (self : access ImDrawList)  -- cimgui.h:3130
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_destroy";

   procedure ImDrawList_PushClipRect
     (self : access ImDrawList;
      clip_rect_min : ImVec2;
      clip_rect_max : ImVec2;
      intersect_with_current_clip_rect : Extensions.bool)  -- cimgui.h:3131
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PushClipRect";

   procedure ImDrawList_PushClipRectFullScreen (self : access ImDrawList)  -- cimgui.h:3132
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PushClipRectFullScreen";

   procedure ImDrawList_PopClipRect (self : access ImDrawList)  -- cimgui.h:3133
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PopClipRect";

   procedure ImDrawList_PushTextureID (self : access ImDrawList; texture_id : ImTextureID)  -- cimgui.h:3134
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PushTextureID";

   procedure ImDrawList_PopTextureID (self : access ImDrawList)  -- cimgui.h:3135
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PopTextureID";

   procedure ImDrawList_GetClipRectMin (pOut : access ImVec2; self : access ImDrawList)  -- cimgui.h:3136
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_GetClipRectMin";

   procedure ImDrawList_GetClipRectMax (pOut : access ImVec2; self : access ImDrawList)  -- cimgui.h:3137
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_GetClipRectMax";

   procedure ImDrawList_AddLine
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      col : ImU32;
      thickness : float)  -- cimgui.h:3138
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddLine";

   procedure ImDrawList_AddRect
     (self : access ImDrawList;
      p_min : ImVec2;
      p_max : ImVec2;
      col : ImU32;
      rounding : float;
      flags : ImDrawFlags;
      thickness : float)  -- cimgui.h:3139
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddRect";

   procedure ImDrawList_AddRectFilled
     (self : access ImDrawList;
      p_min : ImVec2;
      p_max : ImVec2;
      col : ImU32;
      rounding : float;
      flags : ImDrawFlags)  -- cimgui.h:3140
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddRectFilled";

   procedure ImDrawList_AddRectFilledMultiColor
     (self : access ImDrawList;
      p_min : ImVec2;
      p_max : ImVec2;
      col_upr_left : ImU32;
      col_upr_right : ImU32;
      col_bot_right : ImU32;
      col_bot_left : ImU32)  -- cimgui.h:3141
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddRectFilledMultiColor";

   procedure ImDrawList_AddQuad
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      col : ImU32;
      thickness : float)  -- cimgui.h:3142
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddQuad";

   procedure ImDrawList_AddQuadFilled
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      col : ImU32)  -- cimgui.h:3143
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddQuadFilled";

   procedure ImDrawList_AddTriangle
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      col : ImU32;
      thickness : float)  -- cimgui.h:3144
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddTriangle";

   procedure ImDrawList_AddTriangleFilled
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      col : ImU32)  -- cimgui.h:3145
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddTriangleFilled";

   procedure ImDrawList_AddCircle
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      col : ImU32;
      num_segments : int;
      thickness : float)  -- cimgui.h:3146
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddCircle";

   procedure ImDrawList_AddCircleFilled
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      col : ImU32;
      num_segments : int)  -- cimgui.h:3147
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddCircleFilled";

   procedure ImDrawList_AddNgon
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      col : ImU32;
      num_segments : int;
      thickness : float)  -- cimgui.h:3148
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddNgon";

   procedure ImDrawList_AddNgonFilled
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      col : ImU32;
      num_segments : int)  -- cimgui.h:3149
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddNgonFilled";

   procedure ImDrawList_AddText_Vec2
     (self : access ImDrawList;
      pos : ImVec2;
      col : ImU32;
      text_begin : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3150
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddText_Vec2";

   procedure ImDrawList_AddText_FontPtr
     (self : access ImDrawList;
      font : access constant ImFont;
      font_size : float;
      pos : ImVec2;
      col : ImU32;
      text_begin : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      wrap_width : float;
      cpu_fine_clip_rect : access constant ImVec4)  -- cimgui.h:3151
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddText_FontPtr";

   procedure ImDrawList_AddPolyline
     (self : access ImDrawList;
      points : access constant ImVec2;
      num_points : int;
      col : ImU32;
      flags : ImDrawFlags;
      thickness : float)  -- cimgui.h:3152
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddPolyline";

   procedure ImDrawList_AddConvexPolyFilled
     (self : access ImDrawList;
      points : access constant ImVec2;
      num_points : int;
      col : ImU32)  -- cimgui.h:3153
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddConvexPolyFilled";

   procedure ImDrawList_AddBezierCubic
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      col : ImU32;
      thickness : float;
      num_segments : int)  -- cimgui.h:3154
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddBezierCubic";

   procedure ImDrawList_AddBezierQuadratic
     (self : access ImDrawList;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      col : ImU32;
      thickness : float;
      num_segments : int)  -- cimgui.h:3155
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddBezierQuadratic";

   procedure ImDrawList_AddImage
     (self : access ImDrawList;
      user_texture_id : ImTextureID;
      p_min : ImVec2;
      p_max : ImVec2;
      uv_min : ImVec2;
      uv_max : ImVec2;
      col : ImU32)  -- cimgui.h:3156
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddImage";

   procedure ImDrawList_AddImageQuad
     (self : access ImDrawList;
      user_texture_id : ImTextureID;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      uv1 : ImVec2;
      uv2 : ImVec2;
      uv3 : ImVec2;
      uv4 : ImVec2;
      col : ImU32)  -- cimgui.h:3157
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddImageQuad";

   procedure ImDrawList_AddImageRounded
     (self : access ImDrawList;
      user_texture_id : ImTextureID;
      p_min : ImVec2;
      p_max : ImVec2;
      uv_min : ImVec2;
      uv_max : ImVec2;
      col : ImU32;
      rounding : float;
      flags : ImDrawFlags)  -- cimgui.h:3158
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddImageRounded";

   procedure ImDrawList_PathClear (self : access ImDrawList)  -- cimgui.h:3159
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathClear";

   procedure ImDrawList_PathLineTo (self : access ImDrawList; pos : ImVec2)  -- cimgui.h:3160
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathLineTo";

   procedure ImDrawList_PathLineToMergeDuplicate (self : access ImDrawList; pos : ImVec2)  -- cimgui.h:3161
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathLineToMergeDuplicate";

   procedure ImDrawList_PathFillConvex (self : access ImDrawList; col : ImU32)  -- cimgui.h:3162
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathFillConvex";

   procedure ImDrawList_PathStroke
     (self : access ImDrawList;
      col : ImU32;
      flags : ImDrawFlags;
      thickness : float)  -- cimgui.h:3163
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathStroke";

   procedure ImDrawList_PathArcTo
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      a_min : float;
      a_max : float;
      num_segments : int)  -- cimgui.h:3164
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathArcTo";

   procedure ImDrawList_PathArcToFast
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      a_min_of_12 : int;
      a_max_of_12 : int)  -- cimgui.h:3165
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathArcToFast";

   procedure ImDrawList_PathBezierCubicCurveTo
     (self : access ImDrawList;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      num_segments : int)  -- cimgui.h:3166
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathBezierCubicCurveTo";

   procedure ImDrawList_PathBezierQuadraticCurveTo
     (self : access ImDrawList;
      p2 : ImVec2;
      p3 : ImVec2;
      num_segments : int)  -- cimgui.h:3167
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathBezierQuadraticCurveTo";

   procedure ImDrawList_PathRect
     (self : access ImDrawList;
      rect_min : ImVec2;
      rect_max : ImVec2;
      rounding : float;
      flags : ImDrawFlags)  -- cimgui.h:3168
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PathRect";

   procedure ImDrawList_AddCallback
     (self : access ImDrawList;
      callback : ImDrawCallback;
      callback_data : System.Address)  -- cimgui.h:3169
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddCallback";

   procedure ImDrawList_AddDrawCmd (self : access ImDrawList)  -- cimgui.h:3170
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_AddDrawCmd";

   function ImDrawList_CloneOutput (self : access ImDrawList) return access ImDrawList  -- cimgui.h:3171
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_CloneOutput";

   procedure ImDrawList_ChannelsSplit (self : access ImDrawList; count : int)  -- cimgui.h:3172
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_ChannelsSplit";

   procedure ImDrawList_ChannelsMerge (self : access ImDrawList)  -- cimgui.h:3173
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_ChannelsMerge";

   procedure ImDrawList_ChannelsSetCurrent (self : access ImDrawList; n : int)  -- cimgui.h:3174
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_ChannelsSetCurrent";

   procedure ImDrawList_PrimReserve
     (self : access ImDrawList;
      idx_count : int;
      vtx_count : int)  -- cimgui.h:3175
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimReserve";

   procedure ImDrawList_PrimUnreserve
     (self : access ImDrawList;
      idx_count : int;
      vtx_count : int)  -- cimgui.h:3176
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimUnreserve";

   procedure ImDrawList_PrimRect
     (self : access ImDrawList;
      a : ImVec2;
      b : ImVec2;
      col : ImU32)  -- cimgui.h:3177
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimRect";

   procedure ImDrawList_PrimRectUV
     (self : access ImDrawList;
      a : ImVec2;
      b : ImVec2;
      uv_a : ImVec2;
      uv_b : ImVec2;
      col : ImU32)  -- cimgui.h:3178
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimRectUV";

   procedure ImDrawList_PrimQuadUV
     (self : access ImDrawList;
      a : ImVec2;
      b : ImVec2;
      c : ImVec2;
      d : ImVec2;
      uv_a : ImVec2;
      uv_b : ImVec2;
      uv_c : ImVec2;
      uv_d : ImVec2;
      col : ImU32)  -- cimgui.h:3179
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimQuadUV";

   procedure ImDrawList_PrimWriteVtx
     (self : access ImDrawList;
      pos : ImVec2;
      uv : ImVec2;
      col : ImU32)  -- cimgui.h:3180
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimWriteVtx";

   procedure ImDrawList_PrimWriteIdx (self : access ImDrawList; idx : ImDrawIdx)  -- cimgui.h:3181
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimWriteIdx";

   procedure ImDrawList_PrimVtx
     (self : access ImDrawList;
      pos : ImVec2;
      uv : ImVec2;
      col : ImU32)  -- cimgui.h:3182
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList_PrimVtx";

   procedure ImDrawList_u_ResetForNewFrame (self : access ImDrawList)  -- cimgui.h:3183
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__ResetForNewFrame";

   procedure ImDrawList_u_ClearFreeMemory (self : access ImDrawList)  -- cimgui.h:3184
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__ClearFreeMemory";

   procedure ImDrawList_u_PopUnusedDrawCmd (self : access ImDrawList)  -- cimgui.h:3185
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__PopUnusedDrawCmd";

   procedure ImDrawList_u_TryMergeDrawCmds (self : access ImDrawList)  -- cimgui.h:3186
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__TryMergeDrawCmds";

   procedure ImDrawList_u_OnChangedClipRect (self : access ImDrawList)  -- cimgui.h:3187
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__OnChangedClipRect";

   procedure ImDrawList_u_OnChangedTextureID (self : access ImDrawList)  -- cimgui.h:3188
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__OnChangedTextureID";

   procedure ImDrawList_u_OnChangedVtxOffset (self : access ImDrawList)  -- cimgui.h:3189
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__OnChangedVtxOffset";

   function ImDrawList_u_CalcCircleAutoSegmentCount (self : access ImDrawList; radius : float) return int  -- cimgui.h:3190
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__CalcCircleAutoSegmentCount";

   procedure ImDrawList_u_PathArcToFastEx
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      a_min_sample : int;
      a_max_sample : int;
      a_step : int)  -- cimgui.h:3191
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__PathArcToFastEx";

   procedure ImDrawList_u_PathArcToN
     (self : access ImDrawList;
      center : ImVec2;
      radius : float;
      a_min : float;
      a_max : float;
      num_segments : int)  -- cimgui.h:3192
   with Import => True,
        Convention => C,
        External_Name => "ImDrawList__PathArcToN";

   function ImDrawData_ImDrawData return access ImDrawData  -- cimgui.h:3193
   with Import => True,
        Convention => C,
        External_Name => "ImDrawData_ImDrawData";

   procedure ImDrawData_destroy (self : access ImDrawData)  -- cimgui.h:3194
   with Import => True,
        Convention => C,
        External_Name => "ImDrawData_destroy";

   procedure ImDrawData_Clear (self : access ImDrawData)  -- cimgui.h:3195
   with Import => True,
        Convention => C,
        External_Name => "ImDrawData_Clear";

   procedure ImDrawData_DeIndexAllBuffers (self : access ImDrawData)  -- cimgui.h:3196
   with Import => True,
        Convention => C,
        External_Name => "ImDrawData_DeIndexAllBuffers";

   procedure ImDrawData_ScaleClipRects (self : access ImDrawData; fb_scale : ImVec2)  -- cimgui.h:3197
   with Import => True,
        Convention => C,
        External_Name => "ImDrawData_ScaleClipRects";

   function ImFontConfig_ImFontConfig return access ImFontConfig  -- cimgui.h:3198
   with Import => True,
        Convention => C,
        External_Name => "ImFontConfig_ImFontConfig";

   procedure ImFontConfig_destroy (self : access ImFontConfig)  -- cimgui.h:3199
   with Import => True,
        Convention => C,
        External_Name => "ImFontConfig_destroy";

   function ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder return access ImFontGlyphRangesBuilder  -- cimgui.h:3200
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder";

   procedure ImFontGlyphRangesBuilder_destroy (self : access ImFontGlyphRangesBuilder)  -- cimgui.h:3201
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_destroy";

   procedure ImFontGlyphRangesBuilder_Clear (self : access ImFontGlyphRangesBuilder)  -- cimgui.h:3202
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_Clear";

   function ImFontGlyphRangesBuilder_GetBit (self : access ImFontGlyphRangesBuilder; n : T_Size) return Extensions.bool  -- cimgui.h:3203
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_GetBit";

   procedure ImFontGlyphRangesBuilder_SetBit (self : access ImFontGlyphRangesBuilder; n : T_Size)  -- cimgui.h:3204
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_SetBit";

   procedure ImFontGlyphRangesBuilder_AddChar (self : access ImFontGlyphRangesBuilder; c : ImWchar)  -- cimgui.h:3205
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_AddChar";

   procedure ImFontGlyphRangesBuilder_AddText
     (self : access ImFontGlyphRangesBuilder;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3206
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_AddText";

   procedure ImFontGlyphRangesBuilder_AddRanges (self : access ImFontGlyphRangesBuilder; ranges : access ImWchar)  -- cimgui.h:3207
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_AddRanges";

   procedure ImFontGlyphRangesBuilder_BuildRanges (self : access ImFontGlyphRangesBuilder; out_ranges : access ImVector_ImWchar)  -- cimgui.h:3208
   with Import => True,
        Convention => C,
        External_Name => "ImFontGlyphRangesBuilder_BuildRanges";

   function ImFontAtlasCustomRect_ImFontAtlasCustomRect return access ImFontAtlasCustomRect  -- cimgui.h:3209
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlasCustomRect_ImFontAtlasCustomRect";

   procedure ImFontAtlasCustomRect_destroy (self : access ImFontAtlasCustomRect)  -- cimgui.h:3210
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlasCustomRect_destroy";

   function ImFontAtlasCustomRect_IsPacked (self : access ImFontAtlasCustomRect) return Extensions.bool  -- cimgui.h:3211
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlasCustomRect_IsPacked";

   function ImFontAtlas_ImFontAtlas return access ImFontAtlas  -- cimgui.h:3212
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_ImFontAtlas";

   procedure ImFontAtlas_destroy (self : access ImFontAtlas)  -- cimgui.h:3213
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_destroy";

   function ImFontAtlas_AddFont (self : access ImFontAtlas; font_cfg : access constant ImFontConfig) return access ImFont  -- cimgui.h:3214
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFont";

   function ImFontAtlas_AddFontDefault (self : access ImFontAtlas; font_cfg : access constant ImFontConfig) return access ImFont  -- cimgui.h:3215
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFontDefault";

   function ImFontAtlas_AddFontFromFileTTF
     (self : access ImFontAtlas;
      filename : Interfaces.C.Strings.chars_ptr;
      size_pixels : float;
      font_cfg : access constant ImFontConfig;
      glyph_ranges : access ImWchar) return access ImFont  -- cimgui.h:3216
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFontFromFileTTF";

   function ImFontAtlas_AddFontFromMemoryTTF
     (self : access ImFontAtlas;
      font_data : System.Address;
      font_size : int;
      size_pixels : float;
      font_cfg : access constant ImFontConfig;
      glyph_ranges : access ImWchar) return access ImFont  -- cimgui.h:3217
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFontFromMemoryTTF";

   function ImFontAtlas_AddFontFromMemoryCompressedTTF
     (self : access ImFontAtlas;
      compressed_font_data : System.Address;
      compressed_font_size : int;
      size_pixels : float;
      font_cfg : access constant ImFontConfig;
      glyph_ranges : access ImWchar) return access ImFont  -- cimgui.h:3218
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFontFromMemoryCompressedTTF";

   function ImFontAtlas_AddFontFromMemoryCompressedBase85TTF
     (self : access ImFontAtlas;
      compressed_font_data_base85 : Interfaces.C.Strings.chars_ptr;
      size_pixels : float;
      font_cfg : access constant ImFontConfig;
      glyph_ranges : access ImWchar) return access ImFont  -- cimgui.h:3219
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddFontFromMemoryCompressedBase85TTF";

   procedure ImFontAtlas_ClearInputData (self : access ImFontAtlas)  -- cimgui.h:3220
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_ClearInputData";

   procedure ImFontAtlas_ClearTexData (self : access ImFontAtlas)  -- cimgui.h:3221
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_ClearTexData";

   procedure ImFontAtlas_ClearFonts (self : access ImFontAtlas)  -- cimgui.h:3222
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_ClearFonts";

   procedure ImFontAtlas_Clear (self : access ImFontAtlas)  -- cimgui.h:3223
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_Clear";

   function ImFontAtlas_Build (self : access ImFontAtlas) return Extensions.bool  -- cimgui.h:3224
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_Build";

   procedure ImFontAtlas_GetTexDataAsAlpha8
     (self : access ImFontAtlas;
      out_pixels : System.Address;
      out_width : access int;
      out_height : access int;
      out_bytes_per_pixel : access int)  -- cimgui.h:3225
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetTexDataAsAlpha8";

   procedure ImFontAtlas_GetTexDataAsRGBA32
     (self : access ImFontAtlas;
      out_pixels : System.Address;
      out_width : access int;
      out_height : access int;
      out_bytes_per_pixel : access int)  -- cimgui.h:3226
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetTexDataAsRGBA32";

   function ImFontAtlas_IsBuilt (self : access ImFontAtlas) return Extensions.bool  -- cimgui.h:3227
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_IsBuilt";

   procedure ImFontAtlas_SetTexID (self : access ImFontAtlas; id : ImTextureID)  -- cimgui.h:3228
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_SetTexID";

   function ImFontAtlas_GetGlyphRangesDefault (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3229
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesDefault";

   function ImFontAtlas_GetGlyphRangesKorean (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3230
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesKorean";

   function ImFontAtlas_GetGlyphRangesJapanese (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3231
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesJapanese";

   function ImFontAtlas_GetGlyphRangesChineseFull (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3232
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesChineseFull";

   function ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3233
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon";

   function ImFontAtlas_GetGlyphRangesCyrillic (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3234
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesCyrillic";

   function ImFontAtlas_GetGlyphRangesThai (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3235
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesThai";

   function ImFontAtlas_GetGlyphRangesVietnamese (self : access ImFontAtlas) return access ImWchar  -- cimgui.h:3236
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetGlyphRangesVietnamese";

   function ImFontAtlas_AddCustomRectRegular
     (self : access ImFontAtlas;
      width : int;
      height : int) return int  -- cimgui.h:3237
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddCustomRectRegular";

   function ImFontAtlas_AddCustomRectFontGlyph
     (self : access ImFontAtlas;
      font : access ImFont;
      id : ImWchar;
      width : int;
      height : int;
      advance_x : float;
      offset : ImVec2) return int  -- cimgui.h:3238
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_AddCustomRectFontGlyph";

   function ImFontAtlas_GetCustomRectByIndex (self : access ImFontAtlas; index : int) return access ImFontAtlasCustomRect  -- cimgui.h:3239
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetCustomRectByIndex";

   procedure ImFontAtlas_CalcCustomRectUV
     (self : access ImFontAtlas;
      rect : access constant ImFontAtlasCustomRect;
      out_uv_min : access ImVec2;
      out_uv_max : access ImVec2)  -- cimgui.h:3240
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_CalcCustomRectUV";

   function ImFontAtlas_GetMouseCursorTexData
     (self : access ImFontAtlas;
      cursor : ImGuiMouseCursor;
      out_offset : access ImVec2;
      out_size : access ImVec2;
      out_uv_border : access ImVec2;
      out_uv_fill : access ImVec2) return Extensions.bool  -- cimgui.h:3241
   with Import => True,
        Convention => C,
        External_Name => "ImFontAtlas_GetMouseCursorTexData";

   function ImFont_ImFont return access ImFont  -- cimgui.h:3242
   with Import => True,
        Convention => C,
        External_Name => "ImFont_ImFont";

   procedure ImFont_destroy (self : access ImFont)  -- cimgui.h:3243
   with Import => True,
        Convention => C,
        External_Name => "ImFont_destroy";

   function ImFont_FindGlyph (self : access ImFont; c : ImWchar) return access constant ImFontGlyph  -- cimgui.h:3244
   with Import => True,
        Convention => C,
        External_Name => "ImFont_FindGlyph";

   function ImFont_FindGlyphNoFallback (self : access ImFont; c : ImWchar) return access constant ImFontGlyph  -- cimgui.h:3245
   with Import => True,
        Convention => C,
        External_Name => "ImFont_FindGlyphNoFallback";

   function ImFont_GetCharAdvance (self : access ImFont; c : ImWchar) return float  -- cimgui.h:3246
   with Import => True,
        Convention => C,
        External_Name => "ImFont_GetCharAdvance";

   function ImFont_IsLoaded (self : access ImFont) return Extensions.bool  -- cimgui.h:3247
   with Import => True,
        Convention => C,
        External_Name => "ImFont_IsLoaded";

   function ImFont_GetDebugName (self : access ImFont) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3248
   with Import => True,
        Convention => C,
        External_Name => "ImFont_GetDebugName";

   procedure ImFont_CalcTextSizeA
     (pOut : access ImVec2;
      self : access ImFont;
      size : float;
      max_width : float;
      wrap_width : float;
      text_begin : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      remaining : System.Address)  -- cimgui.h:3249
   with Import => True,
        Convention => C,
        External_Name => "ImFont_CalcTextSizeA";

   function ImFont_CalcWordWrapPositionA
     (self : access ImFont;
      scale : float;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      wrap_width : float) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3250
   with Import => True,
        Convention => C,
        External_Name => "ImFont_CalcWordWrapPositionA";

   procedure ImFont_RenderChar
     (self : access ImFont;
      draw_list : access ImDrawList;
      size : float;
      pos : ImVec2;
      col : ImU32;
      c : ImWchar)  -- cimgui.h:3251
   with Import => True,
        Convention => C,
        External_Name => "ImFont_RenderChar";

   procedure ImFont_RenderText
     (self : access ImFont;
      draw_list : access ImDrawList;
      size : float;
      pos : ImVec2;
      col : ImU32;
      clip_rect : ImVec4;
      text_begin : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      wrap_width : float;
      cpu_fine_clip : Extensions.bool)  -- cimgui.h:3252
   with Import => True,
        Convention => C,
        External_Name => "ImFont_RenderText";

   procedure ImFont_BuildLookupTable (self : access ImFont)  -- cimgui.h:3253
   with Import => True,
        Convention => C,
        External_Name => "ImFont_BuildLookupTable";

   procedure ImFont_ClearOutputData (self : access ImFont)  -- cimgui.h:3254
   with Import => True,
        Convention => C,
        External_Name => "ImFont_ClearOutputData";

   procedure ImFont_GrowIndex (self : access ImFont; new_size : int)  -- cimgui.h:3255
   with Import => True,
        Convention => C,
        External_Name => "ImFont_GrowIndex";

   procedure ImFont_AddGlyph
     (self : access ImFont;
      src_cfg : access constant ImFontConfig;
      c : ImWchar;
      x0 : float;
      y0 : float;
      x1 : float;
      y1 : float;
      u0 : float;
      v0 : float;
      u1 : float;
      v1 : float;
      advance_x : float)  -- cimgui.h:3256
   with Import => True,
        Convention => C,
        External_Name => "ImFont_AddGlyph";

   procedure ImFont_AddRemapChar
     (self : access ImFont;
      dst : ImWchar;
      src : ImWchar;
      overwrite_dst : Extensions.bool)  -- cimgui.h:3257
   with Import => True,
        Convention => C,
        External_Name => "ImFont_AddRemapChar";

   procedure ImFont_SetGlyphVisible
     (self : access ImFont;
      c : ImWchar;
      visible : Extensions.bool)  -- cimgui.h:3258
   with Import => True,
        Convention => C,
        External_Name => "ImFont_SetGlyphVisible";

   function ImFont_IsGlyphRangeUnused
     (self : access ImFont;
      c_begin : unsigned;
      c_last : unsigned) return Extensions.bool  -- cimgui.h:3259
   with Import => True,
        Convention => C,
        External_Name => "ImFont_IsGlyphRangeUnused";

   function ImGuiViewport_ImGuiViewport return access ImGuiViewport  -- cimgui.h:3260
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewport_ImGuiViewport";

   procedure ImGuiViewport_destroy (self : access ImGuiViewport)  -- cimgui.h:3261
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewport_destroy";

   procedure ImGuiViewport_GetCenter (pOut : access ImVec2; self : access ImGuiViewport)  -- cimgui.h:3262
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewport_GetCenter";

   procedure ImGuiViewport_GetWorkCenter (pOut : access ImVec2; self : access ImGuiViewport)  -- cimgui.h:3263
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewport_GetWorkCenter";

   function ImGuiPlatformImeData_ImGuiPlatformImeData return access ImGuiPlatformImeData  -- cimgui.h:3264
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPlatformImeData_ImGuiPlatformImeData";

   procedure ImGuiPlatformImeData_destroy (self : access ImGuiPlatformImeData)  -- cimgui.h:3265
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPlatformImeData_destroy";

   function igGetKeyIndex (key : ImGuiKey) return int  -- cimgui.h:3266
   with Import => True,
        Convention => C,
        External_Name => "igGetKeyIndex";

   function igImHashData
     (data : System.Address;
      data_size : T_Size;
      seed : ImU32) return ImGuiID  -- cimgui.h:3267
   with Import => True,
        Convention => C,
        External_Name => "igImHashData";

   function igImHashStr
     (data : Interfaces.C.Strings.chars_ptr;
      data_size : T_Size;
      seed : ImU32) return ImGuiID  -- cimgui.h:3268
   with Import => True,
        Convention => C,
        External_Name => "igImHashStr";

   procedure igImQsort
     (base : System.Address;
      count : T_Size;
      size_of_element : T_Size;
      compare_func : access function (arg1 : System.Address; arg2 : System.Address) return int)  -- cimgui.h:3269
   with Import => True,
        Convention => C,
        External_Name => "igImQsort";

   function igImAlphaBlendColors (col_a : ImU32; col_b : ImU32) return ImU32  -- cimgui.h:3270
   with Import => True,
        Convention => C,
        External_Name => "igImAlphaBlendColors";

   function igImIsPowerOfTwo_Int (v : int) return Extensions.bool  -- cimgui.h:3271
   with Import => True,
        Convention => C,
        External_Name => "igImIsPowerOfTwo_Int";

   function igImIsPowerOfTwo_U64 (v : ImU64) return Extensions.bool  -- cimgui.h:3272
   with Import => True,
        Convention => C,
        External_Name => "igImIsPowerOfTwo_U64";

   function igImUpperPowerOfTwo (v : int) return int  -- cimgui.h:3273
   with Import => True,
        Convention => C,
        External_Name => "igImUpperPowerOfTwo";

   function igImStricmp (str1 : Interfaces.C.Strings.chars_ptr; str2 : Interfaces.C.Strings.chars_ptr) return int  -- cimgui.h:3274
   with Import => True,
        Convention => C,
        External_Name => "igImStricmp";

   function igImStrnicmp
     (str1 : Interfaces.C.Strings.chars_ptr;
      str2 : Interfaces.C.Strings.chars_ptr;
      count : T_Size) return int  -- cimgui.h:3275
   with Import => True,
        Convention => C,
        External_Name => "igImStrnicmp";

   procedure igImStrncpy
     (dst : Interfaces.C.Strings.chars_ptr;
      src : Interfaces.C.Strings.chars_ptr;
      count : T_Size)  -- cimgui.h:3276
   with Import => True,
        Convention => C,
        External_Name => "igImStrncpy";

   function igImStrdup (str : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3277
   with Import => True,
        Convention => C,
        External_Name => "igImStrdup";

   function igImStrdupcpy
     (dst : Interfaces.C.Strings.chars_ptr;
      p_dst_size : access T_Size;
      str : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3278
   with Import => True,
        Convention => C,
        External_Name => "igImStrdupcpy";

   function igImStrchrRange
     (str_begin : Interfaces.C.Strings.chars_ptr;
      str_end : Interfaces.C.Strings.chars_ptr;
      c : char) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3279
   with Import => True,
        Convention => C,
        External_Name => "igImStrchrRange";

   function igImStrlenW (str : access ImWchar) return int  -- cimgui.h:3280
   with Import => True,
        Convention => C,
        External_Name => "igImStrlenW";

   function igImStreolRange (str : Interfaces.C.Strings.chars_ptr; str_end : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3281
   with Import => True,
        Convention => C,
        External_Name => "igImStreolRange";

   function igImStrbolW (buf_mid_line : access ImWchar; buf_begin : access ImWchar) return access ImWchar  -- cimgui.h:3282
   with Import => True,
        Convention => C,
        External_Name => "igImStrbolW";

   function igImStristr
     (haystack : Interfaces.C.Strings.chars_ptr;
      haystack_end : Interfaces.C.Strings.chars_ptr;
      needle : Interfaces.C.Strings.chars_ptr;
      needle_end : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3283
   with Import => True,
        Convention => C,
        External_Name => "igImStristr";

   procedure igImStrTrimBlanks (str : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3284
   with Import => True,
        Convention => C,
        External_Name => "igImStrTrimBlanks";

   function igImStrSkipBlank (str : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3285
   with Import => True,
        Convention => C,
        External_Name => "igImStrSkipBlank";

   function igImCharIsBlankA (c : char) return Extensions.bool  -- cimgui.h:3286
   with Import => True,
        Convention => C,
        External_Name => "igImCharIsBlankA";

   function igImCharIsBlankW (c : unsigned) return Extensions.bool  -- cimgui.h:3287
   with Import => True,
        Convention => C,
        External_Name => "igImCharIsBlankW";

   function igImFormatString
     (buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size;
      fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return int  -- cimgui.h:3288
   with Import => True,
        Convention => C,
        External_Name => "igImFormatString";

   function igImFormatStringV
     (buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list) return int  -- cimgui.h:3289
   with Import => True,
        Convention => C,
        External_Name => "igImFormatStringV";

   procedure igImFormatStringToTempBuffer
     (out_buf : System.Address;
      out_buf_end : System.Address;
      fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:3290
   with Import => True,
        Convention => C,
        External_Name => "igImFormatStringToTempBuffer";

   procedure igImFormatStringToTempBufferV
     (out_buf : System.Address;
      out_buf_end : System.Address;
      fmt : Interfaces.C.Strings.chars_ptr;
      args : T_va_list)  -- cimgui.h:3291
   with Import => True,
        Convention => C,
        External_Name => "igImFormatStringToTempBufferV";

   function igImParseFormatFindStart (format : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3292
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatFindStart";

   function igImParseFormatFindEnd (format : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3293
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatFindEnd";

   function igImParseFormatTrimDecorations
     (format : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : T_Size) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3294
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatTrimDecorations";

   procedure igImParseFormatSanitizeForPrinting
     (fmt_in : Interfaces.C.Strings.chars_ptr;
      fmt_out : Interfaces.C.Strings.chars_ptr;
      fmt_out_size : T_Size)  -- cimgui.h:3295
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatSanitizeForPrinting";

   function igImParseFormatSanitizeForScanning
     (fmt_in : Interfaces.C.Strings.chars_ptr;
      fmt_out : Interfaces.C.Strings.chars_ptr;
      fmt_out_size : T_Size) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3296
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatSanitizeForScanning";

   function igImParseFormatPrecision (format : Interfaces.C.Strings.chars_ptr; default_value : int) return int  -- cimgui.h:3297
   with Import => True,
        Convention => C,
        External_Name => "igImParseFormatPrecision";

   function igImTextCharToUtf8 (out_buf : Interfaces.C.Strings.chars_ptr; c : unsigned) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3298
   with Import => True,
        Convention => C,
        External_Name => "igImTextCharToUtf8";

   function igImTextStrToUtf8
     (out_buf : Interfaces.C.Strings.chars_ptr;
      out_buf_size : int;
      in_text : access ImWchar;
      in_text_end : access ImWchar) return int  -- cimgui.h:3299
   with Import => True,
        Convention => C,
        External_Name => "igImTextStrToUtf8";

   function igImTextCharFromUtf8
     (out_char : access unsigned;
      in_text : Interfaces.C.Strings.chars_ptr;
      in_text_end : Interfaces.C.Strings.chars_ptr) return int  -- cimgui.h:3300
   with Import => True,
        Convention => C,
        External_Name => "igImTextCharFromUtf8";

   function igImTextStrFromUtf8
     (out_buf : access ImWchar;
      out_buf_size : int;
      in_text : Interfaces.C.Strings.chars_ptr;
      in_text_end : Interfaces.C.Strings.chars_ptr;
      in_remaining : System.Address) return int  -- cimgui.h:3301
   with Import => True,
        Convention => C,
        External_Name => "igImTextStrFromUtf8";

   function igImTextCountCharsFromUtf8 (in_text : Interfaces.C.Strings.chars_ptr; in_text_end : Interfaces.C.Strings.chars_ptr) return int  -- cimgui.h:3302
   with Import => True,
        Convention => C,
        External_Name => "igImTextCountCharsFromUtf8";

   function igImTextCountUtf8BytesFromChar (in_text : Interfaces.C.Strings.chars_ptr; in_text_end : Interfaces.C.Strings.chars_ptr) return int  -- cimgui.h:3303
   with Import => True,
        Convention => C,
        External_Name => "igImTextCountUtf8BytesFromChar";

   function igImTextCountUtf8BytesFromStr (in_text : access ImWchar; in_text_end : access ImWchar) return int  -- cimgui.h:3304
   with Import => True,
        Convention => C,
        External_Name => "igImTextCountUtf8BytesFromStr";

   function igImFileOpen (filename : Interfaces.C.Strings.chars_ptr; mode : Interfaces.C.Strings.chars_ptr) return ImFileHandle  -- cimgui.h:3305
   with Import => True,
        Convention => C,
        External_Name => "igImFileOpen";

   function igImFileClose (file : ImFileHandle) return Extensions.bool  -- cimgui.h:3306
   with Import => True,
        Convention => C,
        External_Name => "igImFileClose";

   function igImFileGetSize (file : ImFileHandle) return ImU64  -- cimgui.h:3307
   with Import => True,
        Convention => C,
        External_Name => "igImFileGetSize";

   function igImFileRead
     (data : System.Address;
      size : ImU64;
      count : ImU64;
      file : ImFileHandle) return ImU64  -- cimgui.h:3308
   with Import => True,
        Convention => C,
        External_Name => "igImFileRead";

   function igImFileWrite
     (data : System.Address;
      size : ImU64;
      count : ImU64;
      file : ImFileHandle) return ImU64  -- cimgui.h:3309
   with Import => True,
        Convention => C,
        External_Name => "igImFileWrite";

   function igImFileLoadToMemory
     (filename : Interfaces.C.Strings.chars_ptr;
      mode : Interfaces.C.Strings.chars_ptr;
      out_file_size : access T_Size;
      padding_bytes : int) return System.Address  -- cimgui.h:3310
   with Import => True,
        Convention => C,
        External_Name => "igImFileLoadToMemory";

   function igImPow_Float (x : float; y : float) return float  -- cimgui.h:3311
   with Import => True,
        Convention => C,
        External_Name => "igImPow_Float";

   function igImPow_double (x : double; y : double) return double  -- cimgui.h:3312
   with Import => True,
        Convention => C,
        External_Name => "igImPow_double";

   function igImLog_Float (x : float) return float  -- cimgui.h:3313
   with Import => True,
        Convention => C,
        External_Name => "igImLog_Float";

   function igImLog_double (x : double) return double  -- cimgui.h:3314
   with Import => True,
        Convention => C,
        External_Name => "igImLog_double";

   function igImAbs_Int (x : int) return int  -- cimgui.h:3315
   with Import => True,
        Convention => C,
        External_Name => "igImAbs_Int";

   function igImAbs_Float (x : float) return float  -- cimgui.h:3316
   with Import => True,
        Convention => C,
        External_Name => "igImAbs_Float";

   function igImAbs_double (x : double) return double  -- cimgui.h:3317
   with Import => True,
        Convention => C,
        External_Name => "igImAbs_double";

   function igImSign_Float (x : float) return float  -- cimgui.h:3318
   with Import => True,
        Convention => C,
        External_Name => "igImSign_Float";

   function igImSign_double (x : double) return double  -- cimgui.h:3319
   with Import => True,
        Convention => C,
        External_Name => "igImSign_double";

   function igImRsqrt_Float (x : float) return float  -- cimgui.h:3320
   with Import => True,
        Convention => C,
        External_Name => "igImRsqrt_Float";

   function igImRsqrt_double (x : double) return double  -- cimgui.h:3321
   with Import => True,
        Convention => C,
        External_Name => "igImRsqrt_double";

   procedure igImMin
     (pOut : access ImVec2;
      lhs : ImVec2;
      rhs : ImVec2)  -- cimgui.h:3322
   with Import => True,
        Convention => C,
        External_Name => "igImMin";

   procedure igImMax
     (pOut : access ImVec2;
      lhs : ImVec2;
      rhs : ImVec2)  -- cimgui.h:3323
   with Import => True,
        Convention => C,
        External_Name => "igImMax";

   procedure igImClamp
     (pOut : access ImVec2;
      v : ImVec2;
      mn : ImVec2;
      mx : ImVec2)  -- cimgui.h:3324
   with Import => True,
        Convention => C,
        External_Name => "igImClamp";

   procedure igImLerp_Vec2Float
     (pOut : access ImVec2;
      a : ImVec2;
      b : ImVec2;
      t : float)  -- cimgui.h:3325
   with Import => True,
        Convention => C,
        External_Name => "igImLerp_Vec2Float";

   procedure igImLerp_Vec2Vec2
     (pOut : access ImVec2;
      a : ImVec2;
      b : ImVec2;
      t : ImVec2)  -- cimgui.h:3326
   with Import => True,
        Convention => C,
        External_Name => "igImLerp_Vec2Vec2";

   procedure igImLerp_Vec4
     (pOut : access ImVec4;
      a : ImVec4;
      b : ImVec4;
      t : float)  -- cimgui.h:3327
   with Import => True,
        Convention => C,
        External_Name => "igImLerp_Vec4";

   function igImSaturate (f : float) return float  -- cimgui.h:3328
   with Import => True,
        Convention => C,
        External_Name => "igImSaturate";

   function igImLengthSqr_Vec2 (lhs : ImVec2) return float  -- cimgui.h:3329
   with Import => True,
        Convention => C,
        External_Name => "igImLengthSqr_Vec2";

   function igImLengthSqr_Vec4 (lhs : ImVec4) return float  -- cimgui.h:3330
   with Import => True,
        Convention => C,
        External_Name => "igImLengthSqr_Vec4";

   function igImInvLength (lhs : ImVec2; fail_value : float) return float  -- cimgui.h:3331
   with Import => True,
        Convention => C,
        External_Name => "igImInvLength";

   function igImFloor_Float (f : float) return float  -- cimgui.h:3332
   with Import => True,
        Convention => C,
        External_Name => "igImFloor_Float";

   function igImFloorSigned_Float (f : float) return float  -- cimgui.h:3333
   with Import => True,
        Convention => C,
        External_Name => "igImFloorSigned_Float";

   procedure igImFloor_Vec2 (pOut : access ImVec2; v : ImVec2)  -- cimgui.h:3334
   with Import => True,
        Convention => C,
        External_Name => "igImFloor_Vec2";

   procedure igImFloorSigned_Vec2 (pOut : access ImVec2; v : ImVec2)  -- cimgui.h:3335
   with Import => True,
        Convention => C,
        External_Name => "igImFloorSigned_Vec2";

   function igImModPositive (a : int; b : int) return int  -- cimgui.h:3336
   with Import => True,
        Convention => C,
        External_Name => "igImModPositive";

   function igImDot (a : ImVec2; b : ImVec2) return float  -- cimgui.h:3337
   with Import => True,
        Convention => C,
        External_Name => "igImDot";

   procedure igImRotate
     (pOut : access ImVec2;
      v : ImVec2;
      cos_a : float;
      sin_a : float)  -- cimgui.h:3338
   with Import => True,
        Convention => C,
        External_Name => "igImRotate";

   function igImLinearSweep
     (current : float;
      target : float;
      speed : float) return float  -- cimgui.h:3339
   with Import => True,
        Convention => C,
        External_Name => "igImLinearSweep";

   procedure igImMul
     (pOut : access ImVec2;
      lhs : ImVec2;
      rhs : ImVec2)  -- cimgui.h:3340
   with Import => True,
        Convention => C,
        External_Name => "igImMul";

   function igImIsFloatAboveGuaranteedIntegerPrecision (f : float) return Extensions.bool  -- cimgui.h:3341
   with Import => True,
        Convention => C,
        External_Name => "igImIsFloatAboveGuaranteedIntegerPrecision";

   procedure igImBezierCubicCalc
     (pOut : access ImVec2;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      t : float)  -- cimgui.h:3342
   with Import => True,
        Convention => C,
        External_Name => "igImBezierCubicCalc";

   procedure igImBezierCubicClosestPoint
     (pOut : access ImVec2;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      p : ImVec2;
      num_segments : int)  -- cimgui.h:3343
   with Import => True,
        Convention => C,
        External_Name => "igImBezierCubicClosestPoint";

   procedure igImBezierCubicClosestPointCasteljau
     (pOut : access ImVec2;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      p4 : ImVec2;
      p : ImVec2;
      tess_tol : float)  -- cimgui.h:3344
   with Import => True,
        Convention => C,
        External_Name => "igImBezierCubicClosestPointCasteljau";

   procedure igImBezierQuadraticCalc
     (pOut : access ImVec2;
      p1 : ImVec2;
      p2 : ImVec2;
      p3 : ImVec2;
      t : float)  -- cimgui.h:3345
   with Import => True,
        Convention => C,
        External_Name => "igImBezierQuadraticCalc";

   procedure igImLineClosestPoint
     (pOut : access ImVec2;
      a : ImVec2;
      b : ImVec2;
      p : ImVec2)  -- cimgui.h:3346
   with Import => True,
        Convention => C,
        External_Name => "igImLineClosestPoint";

   function igImTriangleContainsPoint
     (a : ImVec2;
      b : ImVec2;
      c : ImVec2;
      p : ImVec2) return Extensions.bool  -- cimgui.h:3347
   with Import => True,
        Convention => C,
        External_Name => "igImTriangleContainsPoint";

   procedure igImTriangleClosestPoint
     (pOut : access ImVec2;
      a : ImVec2;
      b : ImVec2;
      c : ImVec2;
      p : ImVec2)  -- cimgui.h:3348
   with Import => True,
        Convention => C,
        External_Name => "igImTriangleClosestPoint";

   procedure igImTriangleBarycentricCoords
     (a : ImVec2;
      b : ImVec2;
      c : ImVec2;
      p : ImVec2;
      out_u : access float;
      out_v : access float;
      out_w : access float)  -- cimgui.h:3349
   with Import => True,
        Convention => C,
        External_Name => "igImTriangleBarycentricCoords";

   function igImTriangleArea
     (a : ImVec2;
      b : ImVec2;
      c : ImVec2) return float  -- cimgui.h:3350
   with Import => True,
        Convention => C,
        External_Name => "igImTriangleArea";

   function igImGetDirQuadrantFromDelta (dx : float; dy : float) return ImGuiDir  -- cimgui.h:3351
   with Import => True,
        Convention => C,
        External_Name => "igImGetDirQuadrantFromDelta";

   function ImVec1_ImVec1_Nil return access ImVec1  -- cimgui.h:3352
   with Import => True,
        Convention => C,
        External_Name => "ImVec1_ImVec1_Nil";

   procedure ImVec1_destroy (self : access ImVec1)  -- cimgui.h:3353
   with Import => True,
        Convention => C,
        External_Name => "ImVec1_destroy";

   function ImVec1_ImVec1_Float (u_x : float) return access ImVec1  -- cimgui.h:3354
   with Import => True,
        Convention => C,
        External_Name => "ImVec1_ImVec1_Float";

   function ImVec2ih_ImVec2ih_Nil return access ImVec2ih  -- cimgui.h:3355
   with Import => True,
        Convention => C,
        External_Name => "ImVec2ih_ImVec2ih_Nil";

   procedure ImVec2ih_destroy (self : access ImVec2ih)  -- cimgui.h:3356
   with Import => True,
        Convention => C,
        External_Name => "ImVec2ih_destroy";

   function ImVec2ih_ImVec2ih_short (u_x : short; u_y : short) return access ImVec2ih  -- cimgui.h:3357
   with Import => True,
        Convention => C,
        External_Name => "ImVec2ih_ImVec2ih_short";

   function ImVec2ih_ImVec2ih_Vec2 (rhs : ImVec2) return access ImVec2ih  -- cimgui.h:3358
   with Import => True,
        Convention => C,
        External_Name => "ImVec2ih_ImVec2ih_Vec2";

   function ImRect_ImRect_Nil return access ImRect  -- cimgui.h:3359
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ImRect_Nil";

   procedure ImRect_destroy (self : access ImRect)  -- cimgui.h:3360
   with Import => True,
        Convention => C,
        External_Name => "ImRect_destroy";

   function ImRect_ImRect_Vec2 (min : ImVec2; max : ImVec2) return access ImRect  -- cimgui.h:3361
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ImRect_Vec2";

   function ImRect_ImRect_Vec4 (v : ImVec4) return access ImRect  -- cimgui.h:3362
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ImRect_Vec4";

   function ImRect_ImRect_Float
     (x1 : float;
      y1 : float;
      x2 : float;
      y2 : float) return access ImRect  -- cimgui.h:3363
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ImRect_Float";

   procedure ImRect_GetCenter (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3364
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetCenter";

   procedure ImRect_GetSize (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3365
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetSize";

   function ImRect_GetWidth (self : access ImRect) return float  -- cimgui.h:3366
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetWidth";

   function ImRect_GetHeight (self : access ImRect) return float  -- cimgui.h:3367
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetHeight";

   function ImRect_GetArea (self : access ImRect) return float  -- cimgui.h:3368
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetArea";

   procedure ImRect_GetTL (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3369
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetTL";

   procedure ImRect_GetTR (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3370
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetTR";

   procedure ImRect_GetBL (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3371
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetBL";

   procedure ImRect_GetBR (pOut : access ImVec2; self : access ImRect)  -- cimgui.h:3372
   with Import => True,
        Convention => C,
        External_Name => "ImRect_GetBR";

   function ImRect_Contains_Vec2 (self : access ImRect; p : ImVec2) return Extensions.bool  -- cimgui.h:3373
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Contains_Vec2";

   function ImRect_Contains_Rect (self : access ImRect; r : ImRect) return Extensions.bool  -- cimgui.h:3374
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Contains_Rect";

   function ImRect_Overlaps (self : access ImRect; r : ImRect) return Extensions.bool  -- cimgui.h:3375
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Overlaps";

   procedure ImRect_Add_Vec2 (self : access ImRect; p : ImVec2)  -- cimgui.h:3376
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Add_Vec2";

   procedure ImRect_Add_Rect (self : access ImRect; r : ImRect)  -- cimgui.h:3377
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Add_Rect";

   procedure ImRect_Expand_Float (self : access ImRect; amount : float)  -- cimgui.h:3378
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Expand_Float";

   procedure ImRect_Expand_Vec2 (self : access ImRect; amount : ImVec2)  -- cimgui.h:3379
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Expand_Vec2";

   procedure ImRect_Translate (self : access ImRect; d : ImVec2)  -- cimgui.h:3380
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Translate";

   procedure ImRect_TranslateX (self : access ImRect; dx : float)  -- cimgui.h:3381
   with Import => True,
        Convention => C,
        External_Name => "ImRect_TranslateX";

   procedure ImRect_TranslateY (self : access ImRect; dy : float)  -- cimgui.h:3382
   with Import => True,
        Convention => C,
        External_Name => "ImRect_TranslateY";

   procedure ImRect_ClipWith (self : access ImRect; r : ImRect)  -- cimgui.h:3383
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ClipWith";

   procedure ImRect_ClipWithFull (self : access ImRect; r : ImRect)  -- cimgui.h:3384
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ClipWithFull";

   procedure ImRect_Floor (self : access ImRect)  -- cimgui.h:3385
   with Import => True,
        Convention => C,
        External_Name => "ImRect_Floor";

   function ImRect_IsInverted (self : access ImRect) return Extensions.bool  -- cimgui.h:3386
   with Import => True,
        Convention => C,
        External_Name => "ImRect_IsInverted";

   procedure ImRect_ToVec4 (pOut : access ImVec4; self : access ImRect)  -- cimgui.h:3387
   with Import => True,
        Convention => C,
        External_Name => "ImRect_ToVec4";

   function igImBitArrayTestBit (arr : access ImU32; n : int) return Extensions.bool  -- cimgui.h:3388
   with Import => True,
        Convention => C,
        External_Name => "igImBitArrayTestBit";

   procedure igImBitArrayClearBit (arr : access ImU32; n : int)  -- cimgui.h:3389
   with Import => True,
        Convention => C,
        External_Name => "igImBitArrayClearBit";

   procedure igImBitArraySetBit (arr : access ImU32; n : int)  -- cimgui.h:3390
   with Import => True,
        Convention => C,
        External_Name => "igImBitArraySetBit";

   procedure igImBitArraySetBitRange
     (arr : access ImU32;
      n : int;
      n2 : int)  -- cimgui.h:3391
   with Import => True,
        Convention => C,
        External_Name => "igImBitArraySetBitRange";

   procedure ImBitVector_Create (self : access ImBitVector; sz : int)  -- cimgui.h:3392
   with Import => True,
        Convention => C,
        External_Name => "ImBitVector_Create";

   procedure ImBitVector_Clear (self : access ImBitVector)  -- cimgui.h:3393
   with Import => True,
        Convention => C,
        External_Name => "ImBitVector_Clear";

   function ImBitVector_TestBit (self : access ImBitVector; n : int) return Extensions.bool  -- cimgui.h:3394
   with Import => True,
        Convention => C,
        External_Name => "ImBitVector_TestBit";

   procedure ImBitVector_SetBit (self : access ImBitVector; n : int)  -- cimgui.h:3395
   with Import => True,
        Convention => C,
        External_Name => "ImBitVector_SetBit";

   procedure ImBitVector_ClearBit (self : access ImBitVector; n : int)  -- cimgui.h:3396
   with Import => True,
        Convention => C,
        External_Name => "ImBitVector_ClearBit";

   function ImDrawListSharedData_ImDrawListSharedData return access ImDrawListSharedData  -- cimgui.h:3397
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSharedData_ImDrawListSharedData";

   procedure ImDrawListSharedData_destroy (self : access ImDrawListSharedData)  -- cimgui.h:3398
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSharedData_destroy";

   procedure ImDrawListSharedData_SetCircleTessellationMaxError (self : access ImDrawListSharedData; max_error : float)  -- cimgui.h:3399
   with Import => True,
        Convention => C,
        External_Name => "ImDrawListSharedData_SetCircleTessellationMaxError";

   procedure ImDrawDataBuilder_Clear (self : access ImDrawDataBuilder)  -- cimgui.h:3400
   with Import => True,
        Convention => C,
        External_Name => "ImDrawDataBuilder_Clear";

   procedure ImDrawDataBuilder_ClearFreeMemory (self : access ImDrawDataBuilder)  -- cimgui.h:3401
   with Import => True,
        Convention => C,
        External_Name => "ImDrawDataBuilder_ClearFreeMemory";

   function ImDrawDataBuilder_GetDrawListCount (self : access ImDrawDataBuilder) return int  -- cimgui.h:3402
   with Import => True,
        Convention => C,
        External_Name => "ImDrawDataBuilder_GetDrawListCount";

   procedure ImDrawDataBuilder_FlattenIntoSingleLayer (self : access ImDrawDataBuilder)  -- cimgui.h:3403
   with Import => True,
        Convention => C,
        External_Name => "ImDrawDataBuilder_FlattenIntoSingleLayer";

   function ImGuiStyleMod_ImGuiStyleMod_Int (idx : ImGuiStyleVar; v : int) return access ImGuiStyleMod  -- cimgui.h:3404
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyleMod_ImGuiStyleMod_Int";

   procedure ImGuiStyleMod_destroy (self : access ImGuiStyleMod)  -- cimgui.h:3405
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyleMod_destroy";

   function ImGuiStyleMod_ImGuiStyleMod_Float (idx : ImGuiStyleVar; v : float) return access ImGuiStyleMod  -- cimgui.h:3406
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyleMod_ImGuiStyleMod_Float";

   function ImGuiStyleMod_ImGuiStyleMod_Vec2 (idx : ImGuiStyleVar; v : ImVec2) return access ImGuiStyleMod  -- cimgui.h:3407
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStyleMod_ImGuiStyleMod_Vec2";

   function ImGuiComboPreviewData_ImGuiComboPreviewData return access ImGuiComboPreviewData  -- cimgui.h:3408
   with Import => True,
        Convention => C,
        External_Name => "ImGuiComboPreviewData_ImGuiComboPreviewData";

   procedure ImGuiComboPreviewData_destroy (self : access ImGuiComboPreviewData)  -- cimgui.h:3409
   with Import => True,
        Convention => C,
        External_Name => "ImGuiComboPreviewData_destroy";

   function ImGuiMenuColumns_ImGuiMenuColumns return access ImGuiMenuColumns  -- cimgui.h:3410
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMenuColumns_ImGuiMenuColumns";

   procedure ImGuiMenuColumns_destroy (self : access ImGuiMenuColumns)  -- cimgui.h:3411
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMenuColumns_destroy";

   procedure ImGuiMenuColumns_Update
     (self : access ImGuiMenuColumns;
      spacing : float;
      window_reappearing : Extensions.bool)  -- cimgui.h:3412
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMenuColumns_Update";

   function ImGuiMenuColumns_DeclColumns
     (self : access ImGuiMenuColumns;
      w_icon : float;
      w_label : float;
      w_shortcut : float;
      w_mark : float) return float  -- cimgui.h:3413
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMenuColumns_DeclColumns";

   procedure ImGuiMenuColumns_CalcNextTotalWidth (self : access ImGuiMenuColumns; update_offsets : Extensions.bool)  -- cimgui.h:3414
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMenuColumns_CalcNextTotalWidth";

   function ImGuiInputTextState_ImGuiInputTextState return access ImGuiInputTextState  -- cimgui.h:3415
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_ImGuiInputTextState";

   procedure ImGuiInputTextState_destroy (self : access ImGuiInputTextState)  -- cimgui.h:3416
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_destroy";

   procedure ImGuiInputTextState_ClearText (self : access ImGuiInputTextState)  -- cimgui.h:3417
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_ClearText";

   procedure ImGuiInputTextState_ClearFreeMemory (self : access ImGuiInputTextState)  -- cimgui.h:3418
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_ClearFreeMemory";

   function ImGuiInputTextState_GetUndoAvailCount (self : access ImGuiInputTextState) return int  -- cimgui.h:3419
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_GetUndoAvailCount";

   function ImGuiInputTextState_GetRedoAvailCount (self : access ImGuiInputTextState) return int  -- cimgui.h:3420
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_GetRedoAvailCount";

   procedure ImGuiInputTextState_OnKeyPressed (self : access ImGuiInputTextState; key : int)  -- cimgui.h:3421
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_OnKeyPressed";

   procedure ImGuiInputTextState_CursorAnimReset (self : access ImGuiInputTextState)  -- cimgui.h:3422
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_CursorAnimReset";

   procedure ImGuiInputTextState_CursorClamp (self : access ImGuiInputTextState)  -- cimgui.h:3423
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_CursorClamp";

   function ImGuiInputTextState_HasSelection (self : access ImGuiInputTextState) return Extensions.bool  -- cimgui.h:3424
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_HasSelection";

   procedure ImGuiInputTextState_ClearSelection (self : access ImGuiInputTextState)  -- cimgui.h:3425
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_ClearSelection";

   function ImGuiInputTextState_GetCursorPos (self : access ImGuiInputTextState) return int  -- cimgui.h:3426
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_GetCursorPos";

   function ImGuiInputTextState_GetSelectionStart (self : access ImGuiInputTextState) return int  -- cimgui.h:3427
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_GetSelectionStart";

   function ImGuiInputTextState_GetSelectionEnd (self : access ImGuiInputTextState) return int  -- cimgui.h:3428
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_GetSelectionEnd";

   procedure ImGuiInputTextState_SelectAll (self : access ImGuiInputTextState)  -- cimgui.h:3429
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputTextState_SelectAll";

   function ImGuiPopupData_ImGuiPopupData return access ImGuiPopupData  -- cimgui.h:3430
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPopupData_ImGuiPopupData";

   procedure ImGuiPopupData_destroy (self : access ImGuiPopupData)  -- cimgui.h:3431
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPopupData_destroy";

   function ImGuiNextWindowData_ImGuiNextWindowData return access ImGuiNextWindowData  -- cimgui.h:3432
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextWindowData_ImGuiNextWindowData";

   procedure ImGuiNextWindowData_destroy (self : access ImGuiNextWindowData)  -- cimgui.h:3433
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextWindowData_destroy";

   procedure ImGuiNextWindowData_ClearFlags (self : access ImGuiNextWindowData)  -- cimgui.h:3434
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextWindowData_ClearFlags";

   function ImGuiNextItemData_ImGuiNextItemData return access ImGuiNextItemData  -- cimgui.h:3435
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextItemData_ImGuiNextItemData";

   procedure ImGuiNextItemData_destroy (self : access ImGuiNextItemData)  -- cimgui.h:3436
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextItemData_destroy";

   procedure ImGuiNextItemData_ClearFlags (self : access ImGuiNextItemData)  -- cimgui.h:3437
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNextItemData_ClearFlags";

   function ImGuiLastItemData_ImGuiLastItemData return access ImGuiLastItemData  -- cimgui.h:3438
   with Import => True,
        Convention => C,
        External_Name => "ImGuiLastItemData_ImGuiLastItemData";

   procedure ImGuiLastItemData_destroy (self : access ImGuiLastItemData)  -- cimgui.h:3439
   with Import => True,
        Convention => C,
        External_Name => "ImGuiLastItemData_destroy";

   function ImGuiStackSizes_ImGuiStackSizes return access ImGuiStackSizes  -- cimgui.h:3440
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackSizes_ImGuiStackSizes";

   procedure ImGuiStackSizes_destroy (self : access ImGuiStackSizes)  -- cimgui.h:3441
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackSizes_destroy";

   procedure ImGuiStackSizes_SetToCurrentState (self : access ImGuiStackSizes)  -- cimgui.h:3442
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackSizes_SetToCurrentState";

   procedure ImGuiStackSizes_CompareWithCurrentState (self : access ImGuiStackSizes)  -- cimgui.h:3443
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackSizes_CompareWithCurrentState";

   function ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr (ptr : System.Address) return access ImGuiPtrOrIndex  -- cimgui.h:3444
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr";

   procedure ImGuiPtrOrIndex_destroy (self : access ImGuiPtrOrIndex)  -- cimgui.h:3445
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPtrOrIndex_destroy";

   function ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int (index : int) return access ImGuiPtrOrIndex  -- cimgui.h:3446
   with Import => True,
        Convention => C,
        External_Name => "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int";

   function ImGuiInputEvent_ImGuiInputEvent return access ImGuiInputEvent  -- cimgui.h:3447
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputEvent_ImGuiInputEvent";

   procedure ImGuiInputEvent_destroy (self : access ImGuiInputEvent)  -- cimgui.h:3448
   with Import => True,
        Convention => C,
        External_Name => "ImGuiInputEvent_destroy";

   function ImGuiListClipperRange_FromIndices (min : int; max : int) return ImGuiListClipperRange  -- cimgui.h:3449
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipperRange_FromIndices";

   function ImGuiListClipperRange_FromPositions
     (y1 : float;
      y2 : float;
      off_min : int;
      off_max : int) return ImGuiListClipperRange  -- cimgui.h:3450
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipperRange_FromPositions";

   function ImGuiListClipperData_ImGuiListClipperData return access ImGuiListClipperData  -- cimgui.h:3451
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipperData_ImGuiListClipperData";

   procedure ImGuiListClipperData_destroy (self : access ImGuiListClipperData)  -- cimgui.h:3452
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipperData_destroy";

   procedure ImGuiListClipperData_Reset (self : access ImGuiListClipperData; clipper : access ImGuiListClipper)  -- cimgui.h:3453
   with Import => True,
        Convention => C,
        External_Name => "ImGuiListClipperData_Reset";

   function ImGuiNavItemData_ImGuiNavItemData return access ImGuiNavItemData  -- cimgui.h:3454
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNavItemData_ImGuiNavItemData";

   procedure ImGuiNavItemData_destroy (self : access ImGuiNavItemData)  -- cimgui.h:3455
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNavItemData_destroy";

   procedure ImGuiNavItemData_Clear (self : access ImGuiNavItemData)  -- cimgui.h:3456
   with Import => True,
        Convention => C,
        External_Name => "ImGuiNavItemData_Clear";

   function ImGuiOldColumnData_ImGuiOldColumnData return access ImGuiOldColumnData  -- cimgui.h:3457
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOldColumnData_ImGuiOldColumnData";

   procedure ImGuiOldColumnData_destroy (self : access ImGuiOldColumnData)  -- cimgui.h:3458
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOldColumnData_destroy";

   function ImGuiOldColumns_ImGuiOldColumns return access ImGuiOldColumns  -- cimgui.h:3459
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOldColumns_ImGuiOldColumns";

   procedure ImGuiOldColumns_destroy (self : access ImGuiOldColumns)  -- cimgui.h:3460
   with Import => True,
        Convention => C,
        External_Name => "ImGuiOldColumns_destroy";

   function ImGuiViewportP_ImGuiViewportP return access ImGuiViewportP  -- cimgui.h:3461
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_ImGuiViewportP";

   procedure ImGuiViewportP_destroy (self : access ImGuiViewportP)  -- cimgui.h:3462
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_destroy";

   procedure ImGuiViewportP_CalcWorkRectPos
     (pOut : access ImVec2;
      self : access ImGuiViewportP;
      off_min : ImVec2)  -- cimgui.h:3463
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_CalcWorkRectPos";

   procedure ImGuiViewportP_CalcWorkRectSize
     (pOut : access ImVec2;
      self : access ImGuiViewportP;
      off_min : ImVec2;
      off_max : ImVec2)  -- cimgui.h:3464
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_CalcWorkRectSize";

   procedure ImGuiViewportP_UpdateWorkRect (self : access ImGuiViewportP)  -- cimgui.h:3465
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_UpdateWorkRect";

   procedure ImGuiViewportP_GetMainRect (pOut : access ImRect; self : access ImGuiViewportP)  -- cimgui.h:3466
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_GetMainRect";

   procedure ImGuiViewportP_GetWorkRect (pOut : access ImRect; self : access ImGuiViewportP)  -- cimgui.h:3467
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_GetWorkRect";

   procedure ImGuiViewportP_GetBuildWorkRect (pOut : access ImRect; self : access ImGuiViewportP)  -- cimgui.h:3468
   with Import => True,
        Convention => C,
        External_Name => "ImGuiViewportP_GetBuildWorkRect";

   function ImGuiWindowSettings_ImGuiWindowSettings return access ImGuiWindowSettings  -- cimgui.h:3469
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindowSettings_ImGuiWindowSettings";

   procedure ImGuiWindowSettings_destroy (self : access ImGuiWindowSettings)  -- cimgui.h:3470
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindowSettings_destroy";

   function ImGuiWindowSettings_GetName (self : access ImGuiWindowSettings) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3471
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindowSettings_GetName";

   function ImGuiSettingsHandler_ImGuiSettingsHandler return access ImGuiSettingsHandler  -- cimgui.h:3472
   with Import => True,
        Convention => C,
        External_Name => "ImGuiSettingsHandler_ImGuiSettingsHandler";

   procedure ImGuiSettingsHandler_destroy (self : access ImGuiSettingsHandler)  -- cimgui.h:3473
   with Import => True,
        Convention => C,
        External_Name => "ImGuiSettingsHandler_destroy";

   function ImGuiMetricsConfig_ImGuiMetricsConfig return access ImGuiMetricsConfig  -- cimgui.h:3474
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMetricsConfig_ImGuiMetricsConfig";

   procedure ImGuiMetricsConfig_destroy (self : access ImGuiMetricsConfig)  -- cimgui.h:3475
   with Import => True,
        Convention => C,
        External_Name => "ImGuiMetricsConfig_destroy";

   function ImGuiStackLevelInfo_ImGuiStackLevelInfo return access ImGuiStackLevelInfo  -- cimgui.h:3476
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackLevelInfo_ImGuiStackLevelInfo";

   procedure ImGuiStackLevelInfo_destroy (self : access ImGuiStackLevelInfo)  -- cimgui.h:3477
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackLevelInfo_destroy";

   function ImGuiStackTool_ImGuiStackTool return access ImGuiStackTool  -- cimgui.h:3478
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackTool_ImGuiStackTool";

   procedure ImGuiStackTool_destroy (self : access ImGuiStackTool)  -- cimgui.h:3479
   with Import => True,
        Convention => C,
        External_Name => "ImGuiStackTool_destroy";

   function ImGuiContextHook_ImGuiContextHook return access ImGuiContextHook  -- cimgui.h:3480
   with Import => True,
        Convention => C,
        External_Name => "ImGuiContextHook_ImGuiContextHook";

   procedure ImGuiContextHook_destroy (self : access ImGuiContextHook)  -- cimgui.h:3481
   with Import => True,
        Convention => C,
        External_Name => "ImGuiContextHook_destroy";

   function ImGuiContext_ImGuiContext (shared_font_atlas : access ImFontAtlas) return access ImGuiContext  -- cimgui.h:3482
   with Import => True,
        Convention => C,
        External_Name => "ImGuiContext_ImGuiContext";

   procedure ImGuiContext_destroy (self : access ImGuiContext)  -- cimgui.h:3483
   with Import => True,
        Convention => C,
        External_Name => "ImGuiContext_destroy";

   function ImGuiWindow_ImGuiWindow (context : access ImGuiContext; name : Interfaces.C.Strings.chars_ptr) return access ImGuiWindow  -- cimgui.h:3484
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_ImGuiWindow";

   procedure ImGuiWindow_destroy (self : access ImGuiWindow)  -- cimgui.h:3485
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_destroy";

   function ImGuiWindow_GetID_Str
     (self : access ImGuiWindow;
      str : Interfaces.C.Strings.chars_ptr;
      str_end : Interfaces.C.Strings.chars_ptr) return ImGuiID  -- cimgui.h:3486
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_GetID_Str";

   function ImGuiWindow_GetID_Ptr (self : access ImGuiWindow; ptr : System.Address) return ImGuiID  -- cimgui.h:3487
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_GetID_Ptr";

   function ImGuiWindow_GetID_Int (self : access ImGuiWindow; n : int) return ImGuiID  -- cimgui.h:3488
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_GetID_Int";

   function ImGuiWindow_GetIDFromRectangle (self : access ImGuiWindow; r_abs : ImRect) return ImGuiID  -- cimgui.h:3489
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_GetIDFromRectangle";

   procedure ImGuiWindow_Rect (pOut : access ImRect; self : access ImGuiWindow)  -- cimgui.h:3490
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_Rect";

   function ImGuiWindow_CalcFontSize (self : access ImGuiWindow) return float  -- cimgui.h:3491
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_CalcFontSize";

   function ImGuiWindow_TitleBarHeight (self : access ImGuiWindow) return float  -- cimgui.h:3492
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_TitleBarHeight";

   procedure ImGuiWindow_TitleBarRect (pOut : access ImRect; self : access ImGuiWindow)  -- cimgui.h:3493
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_TitleBarRect";

   function ImGuiWindow_MenuBarHeight (self : access ImGuiWindow) return float  -- cimgui.h:3494
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_MenuBarHeight";

   procedure ImGuiWindow_MenuBarRect (pOut : access ImRect; self : access ImGuiWindow)  -- cimgui.h:3495
   with Import => True,
        Convention => C,
        External_Name => "ImGuiWindow_MenuBarRect";

   function ImGuiTabItem_ImGuiTabItem return access ImGuiTabItem  -- cimgui.h:3496
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabItem_ImGuiTabItem";

   procedure ImGuiTabItem_destroy (self : access ImGuiTabItem)  -- cimgui.h:3497
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabItem_destroy";

   function ImGuiTabBar_ImGuiTabBar return access ImGuiTabBar  -- cimgui.h:3498
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabBar_ImGuiTabBar";

   procedure ImGuiTabBar_destroy (self : access ImGuiTabBar)  -- cimgui.h:3499
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabBar_destroy";

   function ImGuiTabBar_GetTabOrder (self : access ImGuiTabBar; tab : access constant ImGuiTabItem) return int  -- cimgui.h:3500
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabBar_GetTabOrder";

   function ImGuiTabBar_GetTabName (self : access ImGuiTabBar; tab : access constant ImGuiTabItem) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3501
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTabBar_GetTabName";

   function ImGuiTableColumn_ImGuiTableColumn return access ImGuiTableColumn  -- cimgui.h:3502
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumn_ImGuiTableColumn";

   procedure ImGuiTableColumn_destroy (self : access ImGuiTableColumn)  -- cimgui.h:3503
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumn_destroy";

   function ImGuiTableInstanceData_ImGuiTableInstanceData return access ImGuiTableInstanceData  -- cimgui.h:3504
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableInstanceData_ImGuiTableInstanceData";

   procedure ImGuiTableInstanceData_destroy (self : access ImGuiTableInstanceData)  -- cimgui.h:3505
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableInstanceData_destroy";

   function ImGuiTable_ImGuiTable return access ImGuiTable  -- cimgui.h:3506
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTable_ImGuiTable";

   procedure ImGuiTable_destroy (self : access ImGuiTable)  -- cimgui.h:3507
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTable_destroy";

   function ImGuiTableTempData_ImGuiTableTempData return access ImGuiTableTempData  -- cimgui.h:3508
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableTempData_ImGuiTableTempData";

   procedure ImGuiTableTempData_destroy (self : access ImGuiTableTempData)  -- cimgui.h:3509
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableTempData_destroy";

   function ImGuiTableColumnSettings_ImGuiTableColumnSettings return access ImGuiTableColumnSettings  -- cimgui.h:3510
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumnSettings_ImGuiTableColumnSettings";

   procedure ImGuiTableColumnSettings_destroy (self : access ImGuiTableColumnSettings)  -- cimgui.h:3511
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableColumnSettings_destroy";

   function ImGuiTableSettings_ImGuiTableSettings return access ImGuiTableSettings  -- cimgui.h:3512
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableSettings_ImGuiTableSettings";

   procedure ImGuiTableSettings_destroy (self : access ImGuiTableSettings)  -- cimgui.h:3513
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableSettings_destroy";

   function ImGuiTableSettings_GetColumnSettings (self : access ImGuiTableSettings) return access ImGuiTableColumnSettings  -- cimgui.h:3514
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTableSettings_GetColumnSettings";

   function igGetCurrentWindowRead return access ImGuiWindow  -- cimgui.h:3515
   with Import => True,
        Convention => C,
        External_Name => "igGetCurrentWindowRead";

   function igGetCurrentWindow return access ImGuiWindow  -- cimgui.h:3516
   with Import => True,
        Convention => C,
        External_Name => "igGetCurrentWindow";

   function igFindWindowByID (id : ImGuiID) return access ImGuiWindow  -- cimgui.h:3517
   with Import => True,
        Convention => C,
        External_Name => "igFindWindowByID";

   function igFindWindowByName (name : Interfaces.C.Strings.chars_ptr) return access ImGuiWindow  -- cimgui.h:3518
   with Import => True,
        Convention => C,
        External_Name => "igFindWindowByName";

   procedure igUpdateWindowParentAndRootLinks
     (window : access ImGuiWindow;
      flags : ImGuiWindowFlags;
      parent_window : access ImGuiWindow)  -- cimgui.h:3519
   with Import => True,
        Convention => C,
        External_Name => "igUpdateWindowParentAndRootLinks";

   procedure igCalcWindowNextAutoFitSize (pOut : access ImVec2; window : access ImGuiWindow)  -- cimgui.h:3520
   with Import => True,
        Convention => C,
        External_Name => "igCalcWindowNextAutoFitSize";

   function igIsWindowChildOf
     (window : access ImGuiWindow;
      potential_parent : access ImGuiWindow;
      popup_hierarchy : Extensions.bool) return Extensions.bool  -- cimgui.h:3521
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowChildOf";

   function igIsWindowWithinBeginStackOf (window : access ImGuiWindow; potential_parent : access ImGuiWindow) return Extensions.bool  -- cimgui.h:3522
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowWithinBeginStackOf";

   function igIsWindowAbove (potential_above : access ImGuiWindow; potential_below : access ImGuiWindow) return Extensions.bool  -- cimgui.h:3523
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowAbove";

   function igIsWindowNavFocusable (window : access ImGuiWindow) return Extensions.bool  -- cimgui.h:3524
   with Import => True,
        Convention => C,
        External_Name => "igIsWindowNavFocusable";

   procedure igSetWindowPos_WindowPtr
     (window : access ImGuiWindow;
      pos : ImVec2;
      cond : ImGuiCond)  -- cimgui.h:3525
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowPos_WindowPtr";

   procedure igSetWindowSize_WindowPtr
     (window : access ImGuiWindow;
      size : ImVec2;
      cond : ImGuiCond)  -- cimgui.h:3526
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowSize_WindowPtr";

   procedure igSetWindowCollapsed_WindowPtr
     (window : access ImGuiWindow;
      collapsed : Extensions.bool;
      cond : ImGuiCond)  -- cimgui.h:3527
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowCollapsed_WindowPtr";

   procedure igSetWindowHitTestHole
     (window : access ImGuiWindow;
      pos : ImVec2;
      size : ImVec2)  -- cimgui.h:3528
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowHitTestHole";

   procedure igWindowRectAbsToRel
     (pOut : access ImRect;
      window : access ImGuiWindow;
      r : ImRect)  -- cimgui.h:3529
   with Import => True,
        Convention => C,
        External_Name => "igWindowRectAbsToRel";

   procedure igWindowRectRelToAbs
     (pOut : access ImRect;
      window : access ImGuiWindow;
      r : ImRect)  -- cimgui.h:3530
   with Import => True,
        Convention => C,
        External_Name => "igWindowRectRelToAbs";

   procedure igFocusWindow (window : access ImGuiWindow)  -- cimgui.h:3531
   with Import => True,
        Convention => C,
        External_Name => "igFocusWindow";

   procedure igFocusTopMostWindowUnderOne (under_this_window : access ImGuiWindow; ignore_window : access ImGuiWindow)  -- cimgui.h:3532
   with Import => True,
        Convention => C,
        External_Name => "igFocusTopMostWindowUnderOne";

   procedure igBringWindowToFocusFront (window : access ImGuiWindow)  -- cimgui.h:3533
   with Import => True,
        Convention => C,
        External_Name => "igBringWindowToFocusFront";

   procedure igBringWindowToDisplayFront (window : access ImGuiWindow)  -- cimgui.h:3534
   with Import => True,
        Convention => C,
        External_Name => "igBringWindowToDisplayFront";

   procedure igBringWindowToDisplayBack (window : access ImGuiWindow)  -- cimgui.h:3535
   with Import => True,
        Convention => C,
        External_Name => "igBringWindowToDisplayBack";

   procedure igBringWindowToDisplayBehind (window : access ImGuiWindow; above_window : access ImGuiWindow)  -- cimgui.h:3536
   with Import => True,
        Convention => C,
        External_Name => "igBringWindowToDisplayBehind";

   function igFindWindowDisplayIndex (window : access ImGuiWindow) return int  -- cimgui.h:3537
   with Import => True,
        Convention => C,
        External_Name => "igFindWindowDisplayIndex";

   function igFindBottomMostVisibleWindowWithinBeginStack (window : access ImGuiWindow) return access ImGuiWindow  -- cimgui.h:3538
   with Import => True,
        Convention => C,
        External_Name => "igFindBottomMostVisibleWindowWithinBeginStack";

   procedure igSetCurrentFont (font : access ImFont)  -- cimgui.h:3539
   with Import => True,
        Convention => C,
        External_Name => "igSetCurrentFont";

   function igGetDefaultFont return access ImFont  -- cimgui.h:3540
   with Import => True,
        Convention => C,
        External_Name => "igGetDefaultFont";

   function igGetForegroundDrawList_WindowPtr (window : access ImGuiWindow) return access ImDrawList  -- cimgui.h:3541
   with Import => True,
        Convention => C,
        External_Name => "igGetForegroundDrawList_WindowPtr";

   function igGetBackgroundDrawList_ViewportPtr (viewport : access ImGuiViewport) return access ImDrawList  -- cimgui.h:3542
   with Import => True,
        Convention => C,
        External_Name => "igGetBackgroundDrawList_ViewportPtr";

   function igGetForegroundDrawList_ViewportPtr (viewport : access ImGuiViewport) return access ImDrawList  -- cimgui.h:3543
   with Import => True,
        Convention => C,
        External_Name => "igGetForegroundDrawList_ViewportPtr";

   procedure igInitialize  -- cimgui.h:3544
   with Import => True,
        Convention => C,
        External_Name => "igInitialize";

   procedure igShutdown  -- cimgui.h:3545
   with Import => True,
        Convention => C,
        External_Name => "igShutdown";

   procedure igUpdateInputEvents (trickle_fast_inputs : Extensions.bool)  -- cimgui.h:3546
   with Import => True,
        Convention => C,
        External_Name => "igUpdateInputEvents";

   procedure igUpdateHoveredWindowAndCaptureFlags  -- cimgui.h:3547
   with Import => True,
        Convention => C,
        External_Name => "igUpdateHoveredWindowAndCaptureFlags";

   procedure igStartMouseMovingWindow (window : access ImGuiWindow)  -- cimgui.h:3548
   with Import => True,
        Convention => C,
        External_Name => "igStartMouseMovingWindow";

   procedure igUpdateMouseMovingWindowNewFrame  -- cimgui.h:3549
   with Import => True,
        Convention => C,
        External_Name => "igUpdateMouseMovingWindowNewFrame";

   procedure igUpdateMouseMovingWindowEndFrame  -- cimgui.h:3550
   with Import => True,
        Convention => C,
        External_Name => "igUpdateMouseMovingWindowEndFrame";

   function igAddContextHook (context : access ImGuiContext; hook : access constant ImGuiContextHook) return ImGuiID  -- cimgui.h:3551
   with Import => True,
        Convention => C,
        External_Name => "igAddContextHook";

   procedure igRemoveContextHook (context : access ImGuiContext; hook_to_remove : ImGuiID)  -- cimgui.h:3552
   with Import => True,
        Convention => C,
        External_Name => "igRemoveContextHook";

   procedure igCallContextHooks (context : access ImGuiContext; c_type : ImGuiContextHookType)  -- cimgui.h:3553
   with Import => True,
        Convention => C,
        External_Name => "igCallContextHooks";

   procedure igSetWindowViewport (window : access ImGuiWindow; viewport : access ImGuiViewportP)  -- cimgui.h:3554
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowViewport";

   procedure igMarkIniSettingsDirty_Nil  -- cimgui.h:3555
   with Import => True,
        Convention => C,
        External_Name => "igMarkIniSettingsDirty_Nil";

   procedure igMarkIniSettingsDirty_WindowPtr (window : access ImGuiWindow)  -- cimgui.h:3556
   with Import => True,
        Convention => C,
        External_Name => "igMarkIniSettingsDirty_WindowPtr";

   procedure igClearIniSettings  -- cimgui.h:3557
   with Import => True,
        Convention => C,
        External_Name => "igClearIniSettings";

   function igCreateNewWindowSettings (name : Interfaces.C.Strings.chars_ptr) return access ImGuiWindowSettings  -- cimgui.h:3558
   with Import => True,
        Convention => C,
        External_Name => "igCreateNewWindowSettings";

   function igFindWindowSettings (id : ImGuiID) return access ImGuiWindowSettings  -- cimgui.h:3559
   with Import => True,
        Convention => C,
        External_Name => "igFindWindowSettings";

   function igFindOrCreateWindowSettings (name : Interfaces.C.Strings.chars_ptr) return access ImGuiWindowSettings  -- cimgui.h:3560
   with Import => True,
        Convention => C,
        External_Name => "igFindOrCreateWindowSettings";

   procedure igAddSettingsHandler (handler : access constant ImGuiSettingsHandler)  -- cimgui.h:3561
   with Import => True,
        Convention => C,
        External_Name => "igAddSettingsHandler";

   procedure igRemoveSettingsHandler (type_name : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3562
   with Import => True,
        Convention => C,
        External_Name => "igRemoveSettingsHandler";

   function igFindSettingsHandler (type_name : Interfaces.C.Strings.chars_ptr) return access ImGuiSettingsHandler  -- cimgui.h:3563
   with Import => True,
        Convention => C,
        External_Name => "igFindSettingsHandler";

   procedure igSetNextWindowScroll (scroll : ImVec2)  -- cimgui.h:3564
   with Import => True,
        Convention => C,
        External_Name => "igSetNextWindowScroll";

   procedure igSetScrollX_WindowPtr (window : access ImGuiWindow; scroll_x : float)  -- cimgui.h:3565
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollX_WindowPtr";

   procedure igSetScrollY_WindowPtr (window : access ImGuiWindow; scroll_y : float)  -- cimgui.h:3566
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollY_WindowPtr";

   procedure igSetScrollFromPosX_WindowPtr
     (window : access ImGuiWindow;
      local_x : float;
      center_x_ratio : float)  -- cimgui.h:3567
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollFromPosX_WindowPtr";

   procedure igSetScrollFromPosY_WindowPtr
     (window : access ImGuiWindow;
      local_y : float;
      center_y_ratio : float)  -- cimgui.h:3568
   with Import => True,
        Convention => C,
        External_Name => "igSetScrollFromPosY_WindowPtr";

   procedure igScrollToItem (flags : ImGuiScrollFlags)  -- cimgui.h:3569
   with Import => True,
        Convention => C,
        External_Name => "igScrollToItem";

   procedure igScrollToRect
     (window : access ImGuiWindow;
      rect : ImRect;
      flags : ImGuiScrollFlags)  -- cimgui.h:3570
   with Import => True,
        Convention => C,
        External_Name => "igScrollToRect";

   procedure igScrollToRectEx
     (pOut : access ImVec2;
      window : access ImGuiWindow;
      rect : ImRect;
      flags : ImGuiScrollFlags)  -- cimgui.h:3571
   with Import => True,
        Convention => C,
        External_Name => "igScrollToRectEx";

   procedure igScrollToBringRectIntoView (window : access ImGuiWindow; rect : ImRect)  -- cimgui.h:3572
   with Import => True,
        Convention => C,
        External_Name => "igScrollToBringRectIntoView";

   function igGetItemID return ImGuiID  -- cimgui.h:3573
   with Import => True,
        Convention => C,
        External_Name => "igGetItemID";

   function igGetItemStatusFlags return ImGuiItemStatusFlags  -- cimgui.h:3574
   with Import => True,
        Convention => C,
        External_Name => "igGetItemStatusFlags";

   function igGetItemFlags return ImGuiItemFlags  -- cimgui.h:3575
   with Import => True,
        Convention => C,
        External_Name => "igGetItemFlags";

   function igGetActiveID return ImGuiID  -- cimgui.h:3576
   with Import => True,
        Convention => C,
        External_Name => "igGetActiveID";

   function igGetFocusID return ImGuiID  -- cimgui.h:3577
   with Import => True,
        Convention => C,
        External_Name => "igGetFocusID";

   procedure igSetActiveID (id : ImGuiID; window : access ImGuiWindow)  -- cimgui.h:3578
   with Import => True,
        Convention => C,
        External_Name => "igSetActiveID";

   procedure igSetFocusID (id : ImGuiID; window : access ImGuiWindow)  -- cimgui.h:3579
   with Import => True,
        Convention => C,
        External_Name => "igSetFocusID";

   procedure igClearActiveID  -- cimgui.h:3580
   with Import => True,
        Convention => C,
        External_Name => "igClearActiveID";

   function igGetHoveredID return ImGuiID  -- cimgui.h:3581
   with Import => True,
        Convention => C,
        External_Name => "igGetHoveredID";

   procedure igSetHoveredID (id : ImGuiID)  -- cimgui.h:3582
   with Import => True,
        Convention => C,
        External_Name => "igSetHoveredID";

   procedure igKeepAliveID (id : ImGuiID)  -- cimgui.h:3583
   with Import => True,
        Convention => C,
        External_Name => "igKeepAliveID";

   procedure igMarkItemEdited (id : ImGuiID)  -- cimgui.h:3584
   with Import => True,
        Convention => C,
        External_Name => "igMarkItemEdited";

   procedure igPushOverrideID (id : ImGuiID)  -- cimgui.h:3585
   with Import => True,
        Convention => C,
        External_Name => "igPushOverrideID";

   function igGetIDWithSeed
     (str_id_begin : Interfaces.C.Strings.chars_ptr;
      str_id_end : Interfaces.C.Strings.chars_ptr;
      seed : ImGuiID) return ImGuiID  -- cimgui.h:3586
   with Import => True,
        Convention => C,
        External_Name => "igGetIDWithSeed";

   procedure igItemSize_Vec2 (size : ImVec2; text_baseline_y : float)  -- cimgui.h:3587
   with Import => True,
        Convention => C,
        External_Name => "igItemSize_Vec2";

   procedure igItemSize_Rect (bb : ImRect; text_baseline_y : float)  -- cimgui.h:3588
   with Import => True,
        Convention => C,
        External_Name => "igItemSize_Rect";

   function igItemAdd
     (bb : ImRect;
      id : ImGuiID;
      nav_bb : access constant ImRect;
      extra_flags : ImGuiItemFlags) return Extensions.bool  -- cimgui.h:3589
   with Import => True,
        Convention => C,
        External_Name => "igItemAdd";

   function igItemHoverable (bb : ImRect; id : ImGuiID) return Extensions.bool  -- cimgui.h:3590
   with Import => True,
        Convention => C,
        External_Name => "igItemHoverable";

   function igIsClippedEx (bb : ImRect; id : ImGuiID) return Extensions.bool  -- cimgui.h:3591
   with Import => True,
        Convention => C,
        External_Name => "igIsClippedEx";

   procedure igSetLastItemData
     (item_id : ImGuiID;
      in_flags : ImGuiItemFlags;
      status_flags : ImGuiItemStatusFlags;
      item_rect : ImRect)  -- cimgui.h:3592
   with Import => True,
        Convention => C,
        External_Name => "igSetLastItemData";

   procedure igCalcItemSize
     (pOut : access ImVec2;
      size : ImVec2;
      default_w : float;
      default_h : float)  -- cimgui.h:3593
   with Import => True,
        Convention => C,
        External_Name => "igCalcItemSize";

   function igCalcWrapWidthForPos (pos : ImVec2; wrap_pos_x : float) return float  -- cimgui.h:3594
   with Import => True,
        Convention => C,
        External_Name => "igCalcWrapWidthForPos";

   procedure igPushMultiItemsWidths (components : int; width_full : float)  -- cimgui.h:3595
   with Import => True,
        Convention => C,
        External_Name => "igPushMultiItemsWidths";

   function igIsItemToggledSelection return Extensions.bool  -- cimgui.h:3596
   with Import => True,
        Convention => C,
        External_Name => "igIsItemToggledSelection";

   procedure igGetContentRegionMaxAbs (pOut : access ImVec2)  -- cimgui.h:3597
   with Import => True,
        Convention => C,
        External_Name => "igGetContentRegionMaxAbs";

   procedure igShrinkWidths
     (items : access ImGuiShrinkWidthItem;
      count : int;
      width_excess : float)  -- cimgui.h:3598
   with Import => True,
        Convention => C,
        External_Name => "igShrinkWidths";

   procedure igPushItemFlag (option : ImGuiItemFlags; enabled : Extensions.bool)  -- cimgui.h:3599
   with Import => True,
        Convention => C,
        External_Name => "igPushItemFlag";

   procedure igPopItemFlag  -- cimgui.h:3600
   with Import => True,
        Convention => C,
        External_Name => "igPopItemFlag";

   procedure igLogBegin (c_type : ImGuiLogType; auto_open_depth : int)  -- cimgui.h:3601
   with Import => True,
        Convention => C,
        External_Name => "igLogBegin";

   procedure igLogToBuffer (auto_open_depth : int)  -- cimgui.h:3602
   with Import => True,
        Convention => C,
        External_Name => "igLogToBuffer";

   procedure igLogRenderedText
     (ref_pos : access constant ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3603
   with Import => True,
        Convention => C,
        External_Name => "igLogRenderedText";

   procedure igLogSetNextTextDecoration (prefix : Interfaces.C.Strings.chars_ptr; suffix : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3604
   with Import => True,
        Convention => C,
        External_Name => "igLogSetNextTextDecoration";

   function igBeginChildEx
     (name : Interfaces.C.Strings.chars_ptr;
      id : ImGuiID;
      size_arg : ImVec2;
      border : Extensions.bool;
      flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:3605
   with Import => True,
        Convention => C,
        External_Name => "igBeginChildEx";

   procedure igOpenPopupEx (id : ImGuiID; popup_flags : ImGuiPopupFlags)  -- cimgui.h:3606
   with Import => True,
        Convention => C,
        External_Name => "igOpenPopupEx";

   procedure igClosePopupToLevel (remaining : int; restore_focus_to_window_under_popup : Extensions.bool)  -- cimgui.h:3607
   with Import => True,
        Convention => C,
        External_Name => "igClosePopupToLevel";

   procedure igClosePopupsOverWindow (ref_window : access ImGuiWindow; restore_focus_to_window_under_popup : Extensions.bool)  -- cimgui.h:3608
   with Import => True,
        Convention => C,
        External_Name => "igClosePopupsOverWindow";

   procedure igClosePopupsExceptModals  -- cimgui.h:3609
   with Import => True,
        Convention => C,
        External_Name => "igClosePopupsExceptModals";

   function igIsPopupOpen_ID (id : ImGuiID; popup_flags : ImGuiPopupFlags) return Extensions.bool  -- cimgui.h:3610
   with Import => True,
        Convention => C,
        External_Name => "igIsPopupOpen_ID";

   function igBeginPopupEx (id : ImGuiID; extra_flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:3611
   with Import => True,
        Convention => C,
        External_Name => "igBeginPopupEx";

   procedure igBeginTooltipEx (tooltip_flags : ImGuiTooltipFlags; extra_window_flags : ImGuiWindowFlags)  -- cimgui.h:3612
   with Import => True,
        Convention => C,
        External_Name => "igBeginTooltipEx";

   procedure igGetPopupAllowedExtentRect (pOut : access ImRect; window : access ImGuiWindow)  -- cimgui.h:3613
   with Import => True,
        Convention => C,
        External_Name => "igGetPopupAllowedExtentRect";

   function igGetTopMostPopupModal return access ImGuiWindow  -- cimgui.h:3614
   with Import => True,
        Convention => C,
        External_Name => "igGetTopMostPopupModal";

   function igGetTopMostAndVisiblePopupModal return access ImGuiWindow  -- cimgui.h:3615
   with Import => True,
        Convention => C,
        External_Name => "igGetTopMostAndVisiblePopupModal";

   procedure igFindBestWindowPosForPopup (pOut : access ImVec2; window : access ImGuiWindow)  -- cimgui.h:3616
   with Import => True,
        Convention => C,
        External_Name => "igFindBestWindowPosForPopup";

   procedure igFindBestWindowPosForPopupEx
     (pOut : access ImVec2;
      ref_pos : ImVec2;
      size : ImVec2;
      last_dir : access ImGuiDir;
      r_outer : ImRect;
      r_avoid : ImRect;
      policy : ImGuiPopupPositionPolicy)  -- cimgui.h:3617
   with Import => True,
        Convention => C,
        External_Name => "igFindBestWindowPosForPopupEx";

   function igBeginViewportSideBar
     (name : Interfaces.C.Strings.chars_ptr;
      viewport : access ImGuiViewport;
      dir : ImGuiDir;
      size : float;
      window_flags : ImGuiWindowFlags) return Extensions.bool  -- cimgui.h:3618
   with Import => True,
        Convention => C,
        External_Name => "igBeginViewportSideBar";

   function igBeginMenuEx
     (label : Interfaces.C.Strings.chars_ptr;
      icon : Interfaces.C.Strings.chars_ptr;
      enabled : Extensions.bool) return Extensions.bool  -- cimgui.h:3619
   with Import => True,
        Convention => C,
        External_Name => "igBeginMenuEx";

   function igMenuItemEx
     (label : Interfaces.C.Strings.chars_ptr;
      icon : Interfaces.C.Strings.chars_ptr;
      shortcut : Interfaces.C.Strings.chars_ptr;
      selected : Extensions.bool;
      enabled : Extensions.bool) return Extensions.bool  -- cimgui.h:3620
   with Import => True,
        Convention => C,
        External_Name => "igMenuItemEx";

   function igBeginComboPopup
     (popup_id : ImGuiID;
      bb : ImRect;
      flags : ImGuiComboFlags) return Extensions.bool  -- cimgui.h:3621
   with Import => True,
        Convention => C,
        External_Name => "igBeginComboPopup";

   function igBeginComboPreview return Extensions.bool  -- cimgui.h:3622
   with Import => True,
        Convention => C,
        External_Name => "igBeginComboPreview";

   procedure igEndComboPreview  -- cimgui.h:3623
   with Import => True,
        Convention => C,
        External_Name => "igEndComboPreview";

   procedure igNavInitWindow (window : access ImGuiWindow; force_reinit : Extensions.bool)  -- cimgui.h:3624
   with Import => True,
        Convention => C,
        External_Name => "igNavInitWindow";

   procedure igNavInitRequestApplyResult  -- cimgui.h:3625
   with Import => True,
        Convention => C,
        External_Name => "igNavInitRequestApplyResult";

   function igNavMoveRequestButNoResultYet return Extensions.bool  -- cimgui.h:3626
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestButNoResultYet";

   procedure igNavMoveRequestSubmit
     (move_dir : ImGuiDir;
      clip_dir : ImGuiDir;
      move_flags : ImGuiNavMoveFlags;
      scroll_flags : ImGuiScrollFlags)  -- cimgui.h:3627
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestSubmit";

   procedure igNavMoveRequestForward
     (move_dir : ImGuiDir;
      clip_dir : ImGuiDir;
      move_flags : ImGuiNavMoveFlags;
      scroll_flags : ImGuiScrollFlags)  -- cimgui.h:3628
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestForward";

   procedure igNavMoveRequestResolveWithLastItem (result : access ImGuiNavItemData)  -- cimgui.h:3629
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestResolveWithLastItem";

   procedure igNavMoveRequestCancel  -- cimgui.h:3630
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestCancel";

   procedure igNavMoveRequestApplyResult  -- cimgui.h:3631
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestApplyResult";

   procedure igNavMoveRequestTryWrapping (window : access ImGuiWindow; move_flags : ImGuiNavMoveFlags)  -- cimgui.h:3632
   with Import => True,
        Convention => C,
        External_Name => "igNavMoveRequestTryWrapping";

   function igGetNavInputName (n : ImGuiNavInput) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3633
   with Import => True,
        Convention => C,
        External_Name => "igGetNavInputName";

   function igGetNavInputAmount (n : ImGuiNavInput; mode : ImGuiNavReadMode) return float  -- cimgui.h:3634
   with Import => True,
        Convention => C,
        External_Name => "igGetNavInputAmount";

   procedure igGetNavInputAmount2d
     (pOut : access ImVec2;
      dir_sources : ImGuiNavDirSourceFlags;
      mode : ImGuiNavReadMode;
      slow_factor : float;
      fast_factor : float)  -- cimgui.h:3635
   with Import => True,
        Convention => C,
        External_Name => "igGetNavInputAmount2d";

   function igCalcTypematicRepeatAmount
     (t0 : float;
      t1 : float;
      repeat_delay : float;
      repeat_rate : float) return int  -- cimgui.h:3636
   with Import => True,
        Convention => C,
        External_Name => "igCalcTypematicRepeatAmount";

   procedure igActivateItem (id : ImGuiID)  -- cimgui.h:3637
   with Import => True,
        Convention => C,
        External_Name => "igActivateItem";

   procedure igSetNavWindow (window : access ImGuiWindow)  -- cimgui.h:3638
   with Import => True,
        Convention => C,
        External_Name => "igSetNavWindow";

   procedure igSetNavID
     (id : ImGuiID;
      nav_layer : ImGuiNavLayer;
      focus_scope_id : ImGuiID;
      rect_rel : ImRect)  -- cimgui.h:3639
   with Import => True,
        Convention => C,
        External_Name => "igSetNavID";

   procedure igPushFocusScope (id : ImGuiID)  -- cimgui.h:3640
   with Import => True,
        Convention => C,
        External_Name => "igPushFocusScope";

   procedure igPopFocusScope  -- cimgui.h:3641
   with Import => True,
        Convention => C,
        External_Name => "igPopFocusScope";

   function igGetFocusedFocusScope return ImGuiID  -- cimgui.h:3642
   with Import => True,
        Convention => C,
        External_Name => "igGetFocusedFocusScope";

   function igGetFocusScope return ImGuiID  -- cimgui.h:3643
   with Import => True,
        Convention => C,
        External_Name => "igGetFocusScope";

   function igIsNamedKey (key : ImGuiKey) return Extensions.bool  -- cimgui.h:3644
   with Import => True,
        Convention => C,
        External_Name => "igIsNamedKey";

   function igIsLegacyKey (key : ImGuiKey) return Extensions.bool  -- cimgui.h:3645
   with Import => True,
        Convention => C,
        External_Name => "igIsLegacyKey";

   function igIsGamepadKey (key : ImGuiKey) return Extensions.bool  -- cimgui.h:3646
   with Import => True,
        Convention => C,
        External_Name => "igIsGamepadKey";

   function igGetKeyData (key : ImGuiKey) return access ImGuiKeyData  -- cimgui.h:3647
   with Import => True,
        Convention => C,
        External_Name => "igGetKeyData";

   procedure igSetItemUsingMouseWheel  -- cimgui.h:3648
   with Import => True,
        Convention => C,
        External_Name => "igSetItemUsingMouseWheel";

   procedure igSetActiveIdUsingNavAndKeys  -- cimgui.h:3649
   with Import => True,
        Convention => C,
        External_Name => "igSetActiveIdUsingNavAndKeys";

   function igIsActiveIdUsingNavDir (dir : ImGuiDir) return Extensions.bool  -- cimgui.h:3650
   with Import => True,
        Convention => C,
        External_Name => "igIsActiveIdUsingNavDir";

   function igIsActiveIdUsingNavInput (input : ImGuiNavInput) return Extensions.bool  -- cimgui.h:3651
   with Import => True,
        Convention => C,
        External_Name => "igIsActiveIdUsingNavInput";

   function igIsActiveIdUsingKey (key : ImGuiKey) return Extensions.bool  -- cimgui.h:3652
   with Import => True,
        Convention => C,
        External_Name => "igIsActiveIdUsingKey";

   procedure igSetActiveIdUsingKey (key : ImGuiKey)  -- cimgui.h:3653
   with Import => True,
        Convention => C,
        External_Name => "igSetActiveIdUsingKey";

   function igIsMouseDragPastThreshold (button : ImGuiMouseButton; lock_threshold : float) return Extensions.bool  -- cimgui.h:3654
   with Import => True,
        Convention => C,
        External_Name => "igIsMouseDragPastThreshold";

   function igIsNavInputDown (n : ImGuiNavInput) return Extensions.bool  -- cimgui.h:3655
   with Import => True,
        Convention => C,
        External_Name => "igIsNavInputDown";

   function igIsNavInputTest (n : ImGuiNavInput; rm : ImGuiNavReadMode) return Extensions.bool  -- cimgui.h:3656
   with Import => True,
        Convention => C,
        External_Name => "igIsNavInputTest";

   function igGetMergedModFlags return ImGuiModFlags  -- cimgui.h:3657
   with Import => True,
        Convention => C,
        External_Name => "igGetMergedModFlags";

   function igIsKeyPressedMap (key : ImGuiKey; repeat : Extensions.bool) return Extensions.bool  -- cimgui.h:3658
   with Import => True,
        Convention => C,
        External_Name => "igIsKeyPressedMap";

   function igIsDragDropActive return Extensions.bool  -- cimgui.h:3659
   with Import => True,
        Convention => C,
        External_Name => "igIsDragDropActive";

   function igBeginDragDropTargetCustom (bb : ImRect; id : ImGuiID) return Extensions.bool  -- cimgui.h:3660
   with Import => True,
        Convention => C,
        External_Name => "igBeginDragDropTargetCustom";

   procedure igClearDragDrop  -- cimgui.h:3661
   with Import => True,
        Convention => C,
        External_Name => "igClearDragDrop";

   function igIsDragDropPayloadBeingAccepted return Extensions.bool  -- cimgui.h:3662
   with Import => True,
        Convention => C,
        External_Name => "igIsDragDropPayloadBeingAccepted";

   procedure igSetWindowClipRectBeforeSetChannel (window : access ImGuiWindow; clip_rect : ImRect)  -- cimgui.h:3663
   with Import => True,
        Convention => C,
        External_Name => "igSetWindowClipRectBeforeSetChannel";

   procedure igBeginColumns
     (str_id : Interfaces.C.Strings.chars_ptr;
      count : int;
      flags : ImGuiOldColumnFlags)  -- cimgui.h:3664
   with Import => True,
        Convention => C,
        External_Name => "igBeginColumns";

   procedure igEndColumns  -- cimgui.h:3665
   with Import => True,
        Convention => C,
        External_Name => "igEndColumns";

   procedure igPushColumnClipRect (column_index : int)  -- cimgui.h:3666
   with Import => True,
        Convention => C,
        External_Name => "igPushColumnClipRect";

   procedure igPushColumnsBackground  -- cimgui.h:3667
   with Import => True,
        Convention => C,
        External_Name => "igPushColumnsBackground";

   procedure igPopColumnsBackground  -- cimgui.h:3668
   with Import => True,
        Convention => C,
        External_Name => "igPopColumnsBackground";

   function igGetColumnsID (str_id : Interfaces.C.Strings.chars_ptr; count : int) return ImGuiID  -- cimgui.h:3669
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnsID";

   function igFindOrCreateColumns (window : access ImGuiWindow; id : ImGuiID) return access ImGuiOldColumns  -- cimgui.h:3670
   with Import => True,
        Convention => C,
        External_Name => "igFindOrCreateColumns";

   function igGetColumnOffsetFromNorm (columns : access constant ImGuiOldColumns; offset_norm : float) return float  -- cimgui.h:3671
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnOffsetFromNorm";

   function igGetColumnNormFromOffset (columns : access constant ImGuiOldColumns; offset : float) return float  -- cimgui.h:3672
   with Import => True,
        Convention => C,
        External_Name => "igGetColumnNormFromOffset";

   procedure igTableOpenContextMenu (column_n : int)  -- cimgui.h:3673
   with Import => True,
        Convention => C,
        External_Name => "igTableOpenContextMenu";

   procedure igTableSetColumnWidth (column_n : int; width : float)  -- cimgui.h:3674
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnWidth";

   procedure igTableSetColumnSortDirection
     (column_n : int;
      sort_direction : ImGuiSortDirection;
      append_to_sort_specs : Extensions.bool)  -- cimgui.h:3675
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnSortDirection";

   function igTableGetHoveredColumn return int  -- cimgui.h:3676
   with Import => True,
        Convention => C,
        External_Name => "igTableGetHoveredColumn";

   function igTableGetHeaderRowHeight return float  -- cimgui.h:3677
   with Import => True,
        Convention => C,
        External_Name => "igTableGetHeaderRowHeight";

   procedure igTablePushBackgroundChannel  -- cimgui.h:3678
   with Import => True,
        Convention => C,
        External_Name => "igTablePushBackgroundChannel";

   procedure igTablePopBackgroundChannel  -- cimgui.h:3679
   with Import => True,
        Convention => C,
        External_Name => "igTablePopBackgroundChannel";

   function igGetCurrentTable return access ImGuiTable  -- cimgui.h:3680
   with Import => True,
        Convention => C,
        External_Name => "igGetCurrentTable";

   function igTableFindByID (id : ImGuiID) return access ImGuiTable  -- cimgui.h:3681
   with Import => True,
        Convention => C,
        External_Name => "igTableFindByID";

   function igBeginTableEx
     (name : Interfaces.C.Strings.chars_ptr;
      id : ImGuiID;
      columns_count : int;
      flags : ImGuiTableFlags;
      outer_size : ImVec2;
      inner_width : float) return Extensions.bool  -- cimgui.h:3682
   with Import => True,
        Convention => C,
        External_Name => "igBeginTableEx";

   procedure igTableBeginInitMemory (table : access ImGuiTable; columns_count : int)  -- cimgui.h:3683
   with Import => True,
        Convention => C,
        External_Name => "igTableBeginInitMemory";

   procedure igTableBeginApplyRequests (table : access ImGuiTable)  -- cimgui.h:3684
   with Import => True,
        Convention => C,
        External_Name => "igTableBeginApplyRequests";

   procedure igTableSetupDrawChannels (table : access ImGuiTable)  -- cimgui.h:3685
   with Import => True,
        Convention => C,
        External_Name => "igTableSetupDrawChannels";

   procedure igTableUpdateLayout (table : access ImGuiTable)  -- cimgui.h:3686
   with Import => True,
        Convention => C,
        External_Name => "igTableUpdateLayout";

   procedure igTableUpdateBorders (table : access ImGuiTable)  -- cimgui.h:3687
   with Import => True,
        Convention => C,
        External_Name => "igTableUpdateBorders";

   procedure igTableUpdateColumnsWeightFromWidth (table : access ImGuiTable)  -- cimgui.h:3688
   with Import => True,
        Convention => C,
        External_Name => "igTableUpdateColumnsWeightFromWidth";

   procedure igTableDrawBorders (table : access ImGuiTable)  -- cimgui.h:3689
   with Import => True,
        Convention => C,
        External_Name => "igTableDrawBorders";

   procedure igTableDrawContextMenu (table : access ImGuiTable)  -- cimgui.h:3690
   with Import => True,
        Convention => C,
        External_Name => "igTableDrawContextMenu";

   procedure igTableMergeDrawChannels (table : access ImGuiTable)  -- cimgui.h:3691
   with Import => True,
        Convention => C,
        External_Name => "igTableMergeDrawChannels";

   function igTableGetInstanceData (table : access ImGuiTable; instance_no : int) return access ImGuiTableInstanceData  -- cimgui.h:3692
   with Import => True,
        Convention => C,
        External_Name => "igTableGetInstanceData";

   procedure igTableSortSpecsSanitize (table : access ImGuiTable)  -- cimgui.h:3693
   with Import => True,
        Convention => C,
        External_Name => "igTableSortSpecsSanitize";

   procedure igTableSortSpecsBuild (table : access ImGuiTable)  -- cimgui.h:3694
   with Import => True,
        Convention => C,
        External_Name => "igTableSortSpecsBuild";

   function igTableGetColumnNextSortDirection (column : access ImGuiTableColumn) return ImGuiSortDirection  -- cimgui.h:3695
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnNextSortDirection";

   procedure igTableFixColumnSortDirection (table : access ImGuiTable; column : access ImGuiTableColumn)  -- cimgui.h:3696
   with Import => True,
        Convention => C,
        External_Name => "igTableFixColumnSortDirection";

   function igTableGetColumnWidthAuto (table : access ImGuiTable; column : access ImGuiTableColumn) return float  -- cimgui.h:3697
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnWidthAuto";

   procedure igTableBeginRow (table : access ImGuiTable)  -- cimgui.h:3698
   with Import => True,
        Convention => C,
        External_Name => "igTableBeginRow";

   procedure igTableEndRow (table : access ImGuiTable)  -- cimgui.h:3699
   with Import => True,
        Convention => C,
        External_Name => "igTableEndRow";

   procedure igTableBeginCell (table : access ImGuiTable; column_n : int)  -- cimgui.h:3700
   with Import => True,
        Convention => C,
        External_Name => "igTableBeginCell";

   procedure igTableEndCell (table : access ImGuiTable)  -- cimgui.h:3701
   with Import => True,
        Convention => C,
        External_Name => "igTableEndCell";

   procedure igTableGetCellBgRect
     (pOut : access ImRect;
      table : access constant ImGuiTable;
      column_n : int)  -- cimgui.h:3702
   with Import => True,
        Convention => C,
        External_Name => "igTableGetCellBgRect";

   function igTableGetColumnName_TablePtr (table : access constant ImGuiTable; column_n : int) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3703
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnName_TablePtr";

   function igTableGetColumnResizeID
     (table : access constant ImGuiTable;
      column_n : int;
      instance_no : int) return ImGuiID  -- cimgui.h:3704
   with Import => True,
        Convention => C,
        External_Name => "igTableGetColumnResizeID";

   function igTableGetMaxColumnWidth (table : access constant ImGuiTable; column_n : int) return float  -- cimgui.h:3705
   with Import => True,
        Convention => C,
        External_Name => "igTableGetMaxColumnWidth";

   procedure igTableSetColumnWidthAutoSingle (table : access ImGuiTable; column_n : int)  -- cimgui.h:3706
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnWidthAutoSingle";

   procedure igTableSetColumnWidthAutoAll (table : access ImGuiTable)  -- cimgui.h:3707
   with Import => True,
        Convention => C,
        External_Name => "igTableSetColumnWidthAutoAll";

   procedure igTableRemove (table : access ImGuiTable)  -- cimgui.h:3708
   with Import => True,
        Convention => C,
        External_Name => "igTableRemove";

   procedure igTableGcCompactTransientBuffers_TablePtr (table : access ImGuiTable)  -- cimgui.h:3709
   with Import => True,
        Convention => C,
        External_Name => "igTableGcCompactTransientBuffers_TablePtr";

   procedure igTableGcCompactTransientBuffers_TableTempDataPtr (table : access ImGuiTableTempData)  -- cimgui.h:3710
   with Import => True,
        Convention => C,
        External_Name => "igTableGcCompactTransientBuffers_TableTempDataPtr";

   procedure igTableGcCompactSettings  -- cimgui.h:3711
   with Import => True,
        Convention => C,
        External_Name => "igTableGcCompactSettings";

   procedure igTableLoadSettings (table : access ImGuiTable)  -- cimgui.h:3712
   with Import => True,
        Convention => C,
        External_Name => "igTableLoadSettings";

   procedure igTableSaveSettings (table : access ImGuiTable)  -- cimgui.h:3713
   with Import => True,
        Convention => C,
        External_Name => "igTableSaveSettings";

   procedure igTableResetSettings (table : access ImGuiTable)  -- cimgui.h:3714
   with Import => True,
        Convention => C,
        External_Name => "igTableResetSettings";

   function igTableGetBoundSettings (table : access ImGuiTable) return access ImGuiTableSettings  -- cimgui.h:3715
   with Import => True,
        Convention => C,
        External_Name => "igTableGetBoundSettings";

   procedure igTableSettingsAddSettingsHandler  -- cimgui.h:3716
   with Import => True,
        Convention => C,
        External_Name => "igTableSettingsAddSettingsHandler";

   function igTableSettingsCreate (id : ImGuiID; columns_count : int) return access ImGuiTableSettings  -- cimgui.h:3717
   with Import => True,
        Convention => C,
        External_Name => "igTableSettingsCreate";

   function igTableSettingsFindByID (id : ImGuiID) return access ImGuiTableSettings  -- cimgui.h:3718
   with Import => True,
        Convention => C,
        External_Name => "igTableSettingsFindByID";

   function igBeginTabBarEx
     (tab_bar : access ImGuiTabBar;
      bb : ImRect;
      flags : ImGuiTabBarFlags) return Extensions.bool  -- cimgui.h:3719
   with Import => True,
        Convention => C,
        External_Name => "igBeginTabBarEx";

   function igTabBarFindTabByID (tab_bar : access ImGuiTabBar; tab_id : ImGuiID) return access ImGuiTabItem  -- cimgui.h:3720
   with Import => True,
        Convention => C,
        External_Name => "igTabBarFindTabByID";

   procedure igTabBarRemoveTab (tab_bar : access ImGuiTabBar; tab_id : ImGuiID)  -- cimgui.h:3721
   with Import => True,
        Convention => C,
        External_Name => "igTabBarRemoveTab";

   procedure igTabBarCloseTab (tab_bar : access ImGuiTabBar; tab : access ImGuiTabItem)  -- cimgui.h:3722
   with Import => True,
        Convention => C,
        External_Name => "igTabBarCloseTab";

   procedure igTabBarQueueReorder
     (tab_bar : access ImGuiTabBar;
      tab : access constant ImGuiTabItem;
      offset : int)  -- cimgui.h:3723
   with Import => True,
        Convention => C,
        External_Name => "igTabBarQueueReorder";

   procedure igTabBarQueueReorderFromMousePos
     (tab_bar : access ImGuiTabBar;
      tab : access constant ImGuiTabItem;
      mouse_pos : ImVec2)  -- cimgui.h:3724
   with Import => True,
        Convention => C,
        External_Name => "igTabBarQueueReorderFromMousePos";

   function igTabBarProcessReorder (tab_bar : access ImGuiTabBar) return Extensions.bool  -- cimgui.h:3725
   with Import => True,
        Convention => C,
        External_Name => "igTabBarProcessReorder";

   function igTabItemEx
     (tab_bar : access ImGuiTabBar;
      label : Interfaces.C.Strings.chars_ptr;
      p_open : access Extensions.bool;
      flags : ImGuiTabItemFlags) return Extensions.bool  -- cimgui.h:3726
   with Import => True,
        Convention => C,
        External_Name => "igTabItemEx";

   procedure igTabItemCalcSize
     (pOut : access ImVec2;
      label : Interfaces.C.Strings.chars_ptr;
      has_close_button : Extensions.bool)  -- cimgui.h:3727
   with Import => True,
        Convention => C,
        External_Name => "igTabItemCalcSize";

   procedure igTabItemBackground
     (draw_list : access ImDrawList;
      bb : ImRect;
      flags : ImGuiTabItemFlags;
      col : ImU32)  -- cimgui.h:3728
   with Import => True,
        Convention => C,
        External_Name => "igTabItemBackground";

   procedure igTabItemLabelAndCloseButton
     (draw_list : access ImDrawList;
      bb : ImRect;
      flags : ImGuiTabItemFlags;
      frame_padding : ImVec2;
      label : Interfaces.C.Strings.chars_ptr;
      tab_id : ImGuiID;
      close_button_id : ImGuiID;
      is_contents_visible : Extensions.bool;
      out_just_closed : access Extensions.bool;
      out_text_clipped : access Extensions.bool)  -- cimgui.h:3729
   with Import => True,
        Convention => C,
        External_Name => "igTabItemLabelAndCloseButton";

   procedure igRenderText
     (pos : ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      hide_text_after_hash : Extensions.bool)  -- cimgui.h:3730
   with Import => True,
        Convention => C,
        External_Name => "igRenderText";

   procedure igRenderTextWrapped
     (pos : ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      wrap_width : float)  -- cimgui.h:3731
   with Import => True,
        Convention => C,
        External_Name => "igRenderTextWrapped";

   procedure igRenderTextClipped
     (pos_min : ImVec2;
      pos_max : ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      text_size_if_known : access constant ImVec2;
      align : ImVec2;
      clip_rect : access constant ImRect)  -- cimgui.h:3732
   with Import => True,
        Convention => C,
        External_Name => "igRenderTextClipped";

   procedure igRenderTextClippedEx
     (draw_list : access ImDrawList;
      pos_min : ImVec2;
      pos_max : ImVec2;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      text_size_if_known : access constant ImVec2;
      align : ImVec2;
      clip_rect : access constant ImRect)  -- cimgui.h:3733
   with Import => True,
        Convention => C,
        External_Name => "igRenderTextClippedEx";

   procedure igRenderTextEllipsis
     (draw_list : access ImDrawList;
      pos_min : ImVec2;
      pos_max : ImVec2;
      clip_max_x : float;
      ellipsis_max_x : float;
      text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      text_size_if_known : access constant ImVec2)  -- cimgui.h:3734
   with Import => True,
        Convention => C,
        External_Name => "igRenderTextEllipsis";

   procedure igRenderFrame
     (p_min : ImVec2;
      p_max : ImVec2;
      fill_col : ImU32;
      border : Extensions.bool;
      rounding : float)  -- cimgui.h:3735
   with Import => True,
        Convention => C,
        External_Name => "igRenderFrame";

   procedure igRenderFrameBorder
     (p_min : ImVec2;
      p_max : ImVec2;
      rounding : float)  -- cimgui.h:3736
   with Import => True,
        Convention => C,
        External_Name => "igRenderFrameBorder";

   procedure igRenderColorRectWithAlphaCheckerboard
     (draw_list : access ImDrawList;
      p_min : ImVec2;
      p_max : ImVec2;
      fill_col : ImU32;
      grid_step : float;
      grid_off : ImVec2;
      rounding : float;
      flags : ImDrawFlags)  -- cimgui.h:3737
   with Import => True,
        Convention => C,
        External_Name => "igRenderColorRectWithAlphaCheckerboard";

   procedure igRenderNavHighlight
     (bb : ImRect;
      id : ImGuiID;
      flags : ImGuiNavHighlightFlags)  -- cimgui.h:3738
   with Import => True,
        Convention => C,
        External_Name => "igRenderNavHighlight";

   function igFindRenderedTextEnd (text : Interfaces.C.Strings.chars_ptr; text_end : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- cimgui.h:3739
   with Import => True,
        Convention => C,
        External_Name => "igFindRenderedTextEnd";

   procedure igRenderMouseCursor
     (pos : ImVec2;
      scale : float;
      mouse_cursor : ImGuiMouseCursor;
      col_fill : ImU32;
      col_border : ImU32;
      col_shadow : ImU32)  -- cimgui.h:3740
   with Import => True,
        Convention => C,
        External_Name => "igRenderMouseCursor";

   procedure igRenderArrow
     (draw_list : access ImDrawList;
      pos : ImVec2;
      col : ImU32;
      dir : ImGuiDir;
      scale : float)  -- cimgui.h:3741
   with Import => True,
        Convention => C,
        External_Name => "igRenderArrow";

   procedure igRenderBullet
     (draw_list : access ImDrawList;
      pos : ImVec2;
      col : ImU32)  -- cimgui.h:3742
   with Import => True,
        Convention => C,
        External_Name => "igRenderBullet";

   procedure igRenderCheckMark
     (draw_list : access ImDrawList;
      pos : ImVec2;
      col : ImU32;
      sz : float)  -- cimgui.h:3743
   with Import => True,
        Convention => C,
        External_Name => "igRenderCheckMark";

   procedure igRenderArrowPointingAt
     (draw_list : access ImDrawList;
      pos : ImVec2;
      half_sz : ImVec2;
      direction : ImGuiDir;
      col : ImU32)  -- cimgui.h:3744
   with Import => True,
        Convention => C,
        External_Name => "igRenderArrowPointingAt";

   procedure igRenderRectFilledRangeH
     (draw_list : access ImDrawList;
      rect : ImRect;
      col : ImU32;
      x_start_norm : float;
      x_end_norm : float;
      rounding : float)  -- cimgui.h:3745
   with Import => True,
        Convention => C,
        External_Name => "igRenderRectFilledRangeH";

   procedure igRenderRectFilledWithHole
     (draw_list : access ImDrawList;
      outer : ImRect;
      inner : ImRect;
      col : ImU32;
      rounding : float)  -- cimgui.h:3746
   with Import => True,
        Convention => C,
        External_Name => "igRenderRectFilledWithHole";

   procedure igTextEx
     (text : Interfaces.C.Strings.chars_ptr;
      text_end : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiTextFlags)  -- cimgui.h:3747
   with Import => True,
        Convention => C,
        External_Name => "igTextEx";

   function igButtonEx
     (label : Interfaces.C.Strings.chars_ptr;
      size_arg : ImVec2;
      flags : ImGuiButtonFlags) return Extensions.bool  -- cimgui.h:3748
   with Import => True,
        Convention => C,
        External_Name => "igButtonEx";

   function igCloseButton (id : ImGuiID; pos : ImVec2) return Extensions.bool  -- cimgui.h:3749
   with Import => True,
        Convention => C,
        External_Name => "igCloseButton";

   function igCollapseButton (id : ImGuiID; pos : ImVec2) return Extensions.bool  -- cimgui.h:3750
   with Import => True,
        Convention => C,
        External_Name => "igCollapseButton";

   function igArrowButtonEx
     (str_id : Interfaces.C.Strings.chars_ptr;
      dir : ImGuiDir;
      size_arg : ImVec2;
      flags : ImGuiButtonFlags) return Extensions.bool  -- cimgui.h:3751
   with Import => True,
        Convention => C,
        External_Name => "igArrowButtonEx";

   procedure igScrollbar (axis : ImGuiAxis)  -- cimgui.h:3752
   with Import => True,
        Convention => C,
        External_Name => "igScrollbar";

   function igScrollbarEx
     (bb : ImRect;
      id : ImGuiID;
      axis : ImGuiAxis;
      p_scroll_v : access ImS64;
      avail_v : ImS64;
      contents_v : ImS64;
      flags : ImDrawFlags) return Extensions.bool  -- cimgui.h:3753
   with Import => True,
        Convention => C,
        External_Name => "igScrollbarEx";

   function igImageButtonEx
     (id : ImGuiID;
      texture_id : ImTextureID;
      size : ImVec2;
      uv0 : ImVec2;
      uv1 : ImVec2;
      padding : ImVec2;
      bg_col : ImVec4;
      tint_col : ImVec4) return Extensions.bool  -- cimgui.h:3754
   with Import => True,
        Convention => C,
        External_Name => "igImageButtonEx";

   procedure igGetWindowScrollbarRect
     (pOut : access ImRect;
      window : access ImGuiWindow;
      axis : ImGuiAxis)  -- cimgui.h:3755
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowScrollbarRect";

   function igGetWindowScrollbarID (window : access ImGuiWindow; axis : ImGuiAxis) return ImGuiID  -- cimgui.h:3756
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowScrollbarID";

   function igGetWindowResizeCornerID (window : access ImGuiWindow; n : int) return ImGuiID  -- cimgui.h:3757
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowResizeCornerID";

   function igGetWindowResizeBorderID (window : access ImGuiWindow; dir : ImGuiDir) return ImGuiID  -- cimgui.h:3758
   with Import => True,
        Convention => C,
        External_Name => "igGetWindowResizeBorderID";

   procedure igSeparatorEx (flags : ImGuiSeparatorFlags)  -- cimgui.h:3759
   with Import => True,
        Convention => C,
        External_Name => "igSeparatorEx";

   function igCheckboxFlags_S64Ptr
     (label : Interfaces.C.Strings.chars_ptr;
      flags : access ImS64;
      flags_value : ImS64) return Extensions.bool  -- cimgui.h:3760
   with Import => True,
        Convention => C,
        External_Name => "igCheckboxFlags_S64Ptr";

   function igCheckboxFlags_U64Ptr
     (label : Interfaces.C.Strings.chars_ptr;
      flags : access ImU64;
      flags_value : ImU64) return Extensions.bool  -- cimgui.h:3761
   with Import => True,
        Convention => C,
        External_Name => "igCheckboxFlags_U64Ptr";

   function igButtonBehavior
     (bb : ImRect;
      id : ImGuiID;
      out_hovered : access Extensions.bool;
      out_held : access Extensions.bool;
      flags : ImGuiButtonFlags) return Extensions.bool  -- cimgui.h:3762
   with Import => True,
        Convention => C,
        External_Name => "igButtonBehavior";

   function igDragBehavior
     (id : ImGuiID;
      data_type : ImGuiDataType;
      p_v : System.Address;
      v_speed : float;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags) return Extensions.bool  -- cimgui.h:3763
   with Import => True,
        Convention => C,
        External_Name => "igDragBehavior";

   function igSliderBehavior
     (bb : ImRect;
      id : ImGuiID;
      data_type : ImGuiDataType;
      p_v : System.Address;
      p_min : System.Address;
      p_max : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      flags : ImGuiSliderFlags;
      out_grab_bb : access ImRect) return Extensions.bool  -- cimgui.h:3764
   with Import => True,
        Convention => C,
        External_Name => "igSliderBehavior";

   function igSplitterBehavior
     (bb : ImRect;
      id : ImGuiID;
      axis : ImGuiAxis;
      size1 : access float;
      size2 : access float;
      min_size1 : float;
      min_size2 : float;
      hover_extend : float;
      hover_visibility_delay : float) return Extensions.bool  -- cimgui.h:3765
   with Import => True,
        Convention => C,
        External_Name => "igSplitterBehavior";

   function igTreeNodeBehavior
     (id : ImGuiID;
      flags : ImGuiTreeNodeFlags;
      label : Interfaces.C.Strings.chars_ptr;
      label_end : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:3766
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeBehavior";

   function igTreeNodeBehaviorIsOpen (id : ImGuiID; flags : ImGuiTreeNodeFlags) return Extensions.bool  -- cimgui.h:3767
   with Import => True,
        Convention => C,
        External_Name => "igTreeNodeBehaviorIsOpen";

   procedure igTreePushOverrideID (id : ImGuiID)  -- cimgui.h:3768
   with Import => True,
        Convention => C,
        External_Name => "igTreePushOverrideID";

   function igDataTypeGetInfo (data_type : ImGuiDataType) return access constant ImGuiDataTypeInfo  -- cimgui.h:3769
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeGetInfo";

   function igDataTypeFormatString
     (buf : Interfaces.C.Strings.chars_ptr;
      buf_size : int;
      data_type : ImGuiDataType;
      p_data : System.Address;
      format : Interfaces.C.Strings.chars_ptr) return int  -- cimgui.h:3770
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeFormatString";

   procedure igDataTypeApplyOp
     (data_type : ImGuiDataType;
      op : int;
      output : System.Address;
      arg_1 : System.Address;
      arg_2 : System.Address)  -- cimgui.h:3771
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeApplyOp";

   function igDataTypeApplyFromText
     (buf : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      format : Interfaces.C.Strings.chars_ptr) return Extensions.bool  -- cimgui.h:3772
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeApplyFromText";

   function igDataTypeCompare
     (data_type : ImGuiDataType;
      arg_1 : System.Address;
      arg_2 : System.Address) return int  -- cimgui.h:3773
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeCompare";

   function igDataTypeClamp
     (data_type : ImGuiDataType;
      p_data : System.Address;
      p_min : System.Address;
      p_max : System.Address) return Extensions.bool  -- cimgui.h:3774
   with Import => True,
        Convention => C,
        External_Name => "igDataTypeClamp";

   function igInputTextEx
     (label : Interfaces.C.Strings.chars_ptr;
      hint : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : int;
      size_arg : ImVec2;
      flags : ImGuiInputTextFlags;
      callback : ImGuiInputTextCallback;
      user_data : System.Address) return Extensions.bool  -- cimgui.h:3775
   with Import => True,
        Convention => C,
        External_Name => "igInputTextEx";

   function igTempInputText
     (bb : ImRect;
      id : ImGuiID;
      label : Interfaces.C.Strings.chars_ptr;
      buf : Interfaces.C.Strings.chars_ptr;
      buf_size : int;
      flags : ImGuiInputTextFlags) return Extensions.bool  -- cimgui.h:3776
   with Import => True,
        Convention => C,
        External_Name => "igTempInputText";

   function igTempInputScalar
     (bb : ImRect;
      id : ImGuiID;
      label : Interfaces.C.Strings.chars_ptr;
      data_type : ImGuiDataType;
      p_data : System.Address;
      format : Interfaces.C.Strings.chars_ptr;
      p_clamp_min : System.Address;
      p_clamp_max : System.Address) return Extensions.bool  -- cimgui.h:3777
   with Import => True,
        Convention => C,
        External_Name => "igTempInputScalar";

   function igTempInputIsActive (id : ImGuiID) return Extensions.bool  -- cimgui.h:3778
   with Import => True,
        Convention => C,
        External_Name => "igTempInputIsActive";

   function igGetInputTextState (id : ImGuiID) return access ImGuiInputTextState  -- cimgui.h:3779
   with Import => True,
        Convention => C,
        External_Name => "igGetInputTextState";

   procedure igColorTooltip
     (text : Interfaces.C.Strings.chars_ptr;
      col : access float;
      flags : ImGuiColorEditFlags)  -- cimgui.h:3780
   with Import => True,
        Convention => C,
        External_Name => "igColorTooltip";

   procedure igColorEditOptionsPopup (col : access float; flags : ImGuiColorEditFlags)  -- cimgui.h:3781
   with Import => True,
        Convention => C,
        External_Name => "igColorEditOptionsPopup";

   procedure igColorPickerOptionsPopup (ref_col : access float; flags : ImGuiColorEditFlags)  -- cimgui.h:3782
   with Import => True,
        Convention => C,
        External_Name => "igColorPickerOptionsPopup";

   function igPlotEx
     (plot_type : ImGuiPlotType;
      label : Interfaces.C.Strings.chars_ptr;
      values_getter : access function (arg1 : System.Address; arg2 : int) return float;
      data : System.Address;
      values_count : int;
      values_offset : int;
      overlay_text : Interfaces.C.Strings.chars_ptr;
      scale_min : float;
      scale_max : float;
      frame_size : ImVec2) return int  -- cimgui.h:3783
   with Import => True,
        Convention => C,
        External_Name => "igPlotEx";

   procedure igShadeVertsLinearColorGradientKeepAlpha
     (draw_list : access ImDrawList;
      vert_start_idx : int;
      vert_end_idx : int;
      gradient_p0 : ImVec2;
      gradient_p1 : ImVec2;
      col0 : ImU32;
      col1 : ImU32)  -- cimgui.h:3784
   with Import => True,
        Convention => C,
        External_Name => "igShadeVertsLinearColorGradientKeepAlpha";

   procedure igShadeVertsLinearUV
     (draw_list : access ImDrawList;
      vert_start_idx : int;
      vert_end_idx : int;
      a : ImVec2;
      b : ImVec2;
      uv_a : ImVec2;
      uv_b : ImVec2;
      clamp : Extensions.bool)  -- cimgui.h:3785
   with Import => True,
        Convention => C,
        External_Name => "igShadeVertsLinearUV";

   procedure igGcCompactTransientMiscBuffers  -- cimgui.h:3786
   with Import => True,
        Convention => C,
        External_Name => "igGcCompactTransientMiscBuffers";

   procedure igGcCompactTransientWindowBuffers (window : access ImGuiWindow)  -- cimgui.h:3787
   with Import => True,
        Convention => C,
        External_Name => "igGcCompactTransientWindowBuffers";

   procedure igGcAwakeTransientWindowBuffers (window : access ImGuiWindow)  -- cimgui.h:3788
   with Import => True,
        Convention => C,
        External_Name => "igGcAwakeTransientWindowBuffers";

   procedure igDebugLog (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:3789
   with Import => True,
        Convention => C,
        External_Name => "igDebugLog";

   procedure igDebugLogV (fmt : Interfaces.C.Strings.chars_ptr; args : T_va_list)  -- cimgui.h:3790
   with Import => True,
        Convention => C,
        External_Name => "igDebugLogV";

   procedure igErrorCheckEndFrameRecover (log_callback : ImGuiErrorLogCallback; user_data : System.Address)  -- cimgui.h:3791
   with Import => True,
        Convention => C,
        External_Name => "igErrorCheckEndFrameRecover";

   procedure igErrorCheckEndWindowRecover (log_callback : ImGuiErrorLogCallback; user_data : System.Address)  -- cimgui.h:3792
   with Import => True,
        Convention => C,
        External_Name => "igErrorCheckEndWindowRecover";

   procedure igDebugDrawItemRect (col : ImU32)  -- cimgui.h:3793
   with Import => True,
        Convention => C,
        External_Name => "igDebugDrawItemRect";

   procedure igDebugStartItemPicker  -- cimgui.h:3794
   with Import => True,
        Convention => C,
        External_Name => "igDebugStartItemPicker";

   procedure igShowFontAtlas (atlas : access ImFontAtlas)  -- cimgui.h:3795
   with Import => True,
        Convention => C,
        External_Name => "igShowFontAtlas";

   procedure igDebugHookIdInfo
     (id : ImGuiID;
      data_type : ImGuiDataType;
      data_id : System.Address;
      data_id_end : System.Address)  -- cimgui.h:3796
   with Import => True,
        Convention => C,
        External_Name => "igDebugHookIdInfo";

   procedure igDebugNodeColumns (columns : access ImGuiOldColumns)  -- cimgui.h:3797
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeColumns";

   procedure igDebugNodeDrawList
     (window : access ImGuiWindow;
      draw_list : access constant ImDrawList;
      label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3798
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeDrawList";

   procedure igDebugNodeDrawCmdShowMeshAndBoundingBox
     (out_draw_list : access ImDrawList;
      draw_list : access constant ImDrawList;
      draw_cmd : access constant ImDrawCmd;
      show_mesh : Extensions.bool;
      show_aabb : Extensions.bool)  -- cimgui.h:3799
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeDrawCmdShowMeshAndBoundingBox";

   procedure igDebugNodeFont (font : access ImFont)  -- cimgui.h:3800
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeFont";

   procedure igDebugNodeFontGlyph (font : access ImFont; glyph : access constant ImFontGlyph)  -- cimgui.h:3801
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeFontGlyph";

   procedure igDebugNodeStorage (storage : access ImGuiStorage; label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3802
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeStorage";

   procedure igDebugNodeTabBar (tab_bar : access ImGuiTabBar; label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3803
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeTabBar";

   procedure igDebugNodeTable (table : access ImGuiTable)  -- cimgui.h:3804
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeTable";

   procedure igDebugNodeTableSettings (settings : access ImGuiTableSettings)  -- cimgui.h:3805
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeTableSettings";

   procedure igDebugNodeInputTextState (state : access ImGuiInputTextState)  -- cimgui.h:3806
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeInputTextState";

   procedure igDebugNodeWindow (window : access ImGuiWindow; label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3807
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeWindow";

   procedure igDebugNodeWindowSettings (settings : access ImGuiWindowSettings)  -- cimgui.h:3808
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeWindowSettings";

   procedure igDebugNodeWindowsList (windows : access ImVector_ImGuiWindowPtr; label : Interfaces.C.Strings.chars_ptr)  -- cimgui.h:3809
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeWindowsList";

   procedure igDebugNodeWindowsListByBeginStackParent
     (windows : System.Address;
      windows_size : int;
      parent_in_begin_stack : access ImGuiWindow)  -- cimgui.h:3810
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeWindowsListByBeginStackParent";

   procedure igDebugNodeViewport (viewport : access ImGuiViewportP)  -- cimgui.h:3811
   with Import => True,
        Convention => C,
        External_Name => "igDebugNodeViewport";

   procedure igDebugRenderViewportThumbnail
     (draw_list : access ImDrawList;
      viewport : access ImGuiViewportP;
      bb : ImRect)  -- cimgui.h:3812
   with Import => True,
        Convention => C,
        External_Name => "igDebugRenderViewportThumbnail";

   function igImFontAtlasGetBuilderForStbTruetype return access constant ImFontBuilderIO  -- cimgui.h:3813
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasGetBuilderForStbTruetype";

   procedure igImFontAtlasBuildInit (atlas : access ImFontAtlas)  -- cimgui.h:3814
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildInit";

   procedure igImFontAtlasBuildSetupFont
     (atlas : access ImFontAtlas;
      font : access ImFont;
      font_config : access ImFontConfig;
      ascent : float;
      descent : float)  -- cimgui.h:3815
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildSetupFont";

   procedure igImFontAtlasBuildPackCustomRects (atlas : access ImFontAtlas; stbrp_context_opaque : System.Address)  -- cimgui.h:3816
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildPackCustomRects";

   procedure igImFontAtlasBuildFinish (atlas : access ImFontAtlas)  -- cimgui.h:3817
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildFinish";

   procedure igImFontAtlasBuildRender8bppRectFromString
     (atlas : access ImFontAtlas;
      x : int;
      y : int;
      w : int;
      h : int;
      in_str : Interfaces.C.Strings.chars_ptr;
      in_marker_char : char;
      in_marker_pixel_value : unsigned_char)  -- cimgui.h:3818
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildRender8bppRectFromString";

   procedure igImFontAtlasBuildRender32bppRectFromString
     (atlas : access ImFontAtlas;
      x : int;
      y : int;
      w : int;
      h : int;
      in_str : Interfaces.C.Strings.chars_ptr;
      in_marker_char : char;
      in_marker_pixel_value : unsigned)  -- cimgui.h:3819
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildRender32bppRectFromString";

   procedure igImFontAtlasBuildMultiplyCalcLookupTable (out_table : access unsigned_char; in_multiply_factor : float)  -- cimgui.h:3820
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildMultiplyCalcLookupTable";

   procedure igImFontAtlasBuildMultiplyRectAlpha8
     (table : access unsigned_char;
      pixels : access unsigned_char;
      x : int;
      y : int;
      w : int;
      h : int;
      stride : int)  -- cimgui.h:3821
   with Import => True,
        Convention => C,
        External_Name => "igImFontAtlasBuildMultiplyRectAlpha8";

  --///////////////////////hand written functions
  --no LogTextV
   procedure igLogText (fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:3826
   with Import => True,
        Convention => C,
        External_Name => "igLogText";

  --no appendfV
   procedure ImGuiTextBuffer_appendf (buffer : access ImGuiTextBuffer; fmt : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- cimgui.h:3828
   with Import => True,
        Convention => C,
        External_Name => "ImGuiTextBuffer_appendf";

  --for getting FLT_MAX in bindings
   function igGET_FLT_MAX return float  -- cimgui.h:3830
   with Import => True,
        Convention => C,
        External_Name => "igGET_FLT_MAX";

  --for getting FLT_MIN in bindings
   function igGET_FLT_MIN return float  -- cimgui.h:3832
   with Import => True,
        Convention => C,
        External_Name => "igGET_FLT_MIN";

   function ImVector_ImWchar_create return access ImVector_ImWchar  -- cimgui.h:3835
   with Import => True,
        Convention => C,
        External_Name => "ImVector_ImWchar_create";

   procedure ImVector_ImWchar_destroy (self : access ImVector_ImWchar)  -- cimgui.h:3836
   with Import => True,
        Convention => C,
        External_Name => "ImVector_ImWchar_destroy";

   procedure ImVector_ImWchar_Init (p : access ImVector_ImWchar)  -- cimgui.h:3837
   with Import => True,
        Convention => C,
        External_Name => "ImVector_ImWchar_Init";

   procedure ImVector_ImWchar_UnInit (p : access ImVector_ImWchar)  -- cimgui.h:3838
   with Import => True,
        Convention => C,
        External_Name => "ImVector_ImWchar_UnInit";



end Dear_ImGui.API;
